"use strict";function fitVidsDirective(){if(!document.getElementById("fit-vids-style")){var div=document.createElement("div"),ref=document.getElementsByTagName("base")[0]||document.getElementsByTagName("script")[0],cssStyles="&shy;<style>.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style>";div.className="fit-vids-style",div.id="fit-vids-style",div.style.display="none",div.innerHTML=cssStyles,ref.parentNode.insertBefore(div,ref)}return{restrict:"A",link:function(scope,element,attr){var videos,selectors=['iframe[src*="player.vimeo.com"]','iframe[src*="youtube.com"]','iframe[src*="youtube-nocookie.com"]','iframe[src*="kickstarter.com"][src*="video.html"]',"object","embed"];attr.customSelector&&selectors.push(attr.customSelector),videos=element[0].querySelectorAll(selectors.join(",")),angular.forEach(videos,function(item){var height,width,aspectRatio,$item=angular.element(item);if(!("embed"===item.tagName.toLowerCase()&&"object"===$item.parent().tagName&&$item.parent().length||$item.parent().hasClass(".fluid-width-video-wrapper"))){if(height="object"===item.tagName.toLowerCase()||$item.attr("height")?parseInt($item.attr("height"),10):$item.height(),width=isNaN(parseInt($item.attr("width"),10))?$item.width():parseInt($item.attr("width"),10),aspectRatio=height/width,!$item.attr("id")){var videoID="fitvid"+Math.floor(999999*Math.random());$item.attr("id",videoID)}$item.wrap('<div class="fluid-width-video-wrapper" />').parent().css("padding-top",100*aspectRatio+"%"),$item.removeAttr("height").removeAttr("width")}})}}}var ApplicationConfiguration=function(){var applicationModuleName="outset",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","textAngular","ngMap","pdf"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]).config(["$logProvider",function($logProvider){$logProvider.debugEnabled(!0)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("addresses"),ApplicationConfiguration.registerModule("applications"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("bgchecks"),ApplicationConfiguration.registerModule("chat"),ApplicationConfiguration.registerModule("companies"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("drivers"),ApplicationConfiguration.registerModule("jobs"),function(){ApplicationConfiguration.registerModule("license")}(),ApplicationConfiguration.registerModule("location"),ApplicationConfiguration.registerModule("schedule"),ApplicationConfiguration.registerModule("users"),function(){angular.module("addresses").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAddresses",{url:"/addresses",templateUrl:"modules/addresses/views/list-addresses.client.view.html"}).state("createAddress",{url:"/addresses/create",templateUrl:"modules/addresses/views/create-address.client.view.html"}).state("viewAddress",{url:"/addresses/:addressId",templateUrl:"modules/addresses/views/view-address.client.view.html"}).state("editAddress",{url:"/addresses/:addressId/edit",templateUrl:"modules/addresses/views/edit-address.client.view.html"})}])}(),function(){angular.module("addresses").controller("AddressesController",["$scope","$stateParams","$location","$log","Authentication","Addresses",function($scope,$stateParams,$location,$log,Authentication,Addresses){$scope.authentication=Authentication,$scope.types=["main","home","business","billing","other"],$scope.create=function(){var address=new Addresses({});address.$save(function(){$log.debug("Created new Address Object")},function(errorResponse){$scope.error=errorResponse.data.message,console.error("Address Creation Failed: ",$scope.error)})},$scope.remove=function(address){if(address){address.$remove();for(var i in $scope.addresses)$scope.addresses[i]===address&&$scope.addresses.splice(i,1)}else $scope.address.$remove(function(){$location.path("addresses")})},$scope.update=function(){var address=$scope.address;address.$update(function(){$log.debug("Updated Address object")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.addresses=Addresses.query()},$scope.findOne=function(){$scope.address=Addresses.get({addressId:$stateParams.addressId})}}])}(),function(){function AddressListDirective(){return{templateUrl:"modules/addresses/views/address-list.client.template.html",restrict:"E",scope:{addresses:"=?models",isEditing:"=?",canEdit:"=?",maxCount:"=?",required:"=?",fullWidth:"=?",inlineEdit:"=?"},controller:"OsAddressListController",controllerAs:"vm",bindToController:!0}}function AddressListController(){function activate(){!vm.required||vm.addresses&&0!==vm.addresses.length||pushStub(),updateFunctionality()}function updateFunctionality(){vm.canAdd=addEnabled(),vm.canRemove=removeEnabled()}function addEnabled(){return vm.canEdit?!vm.addresses||vm.addresses.length<vm.maxCount:!1}function removeEnabled(){return!vm.canEdit||vm.required&&1===vm.addresses.length?!1:!0}function addAddress(){event.preventDefault(),pushStub()}function removeAddress(address){if(address)for(var i in vm.addresses)vm.addresses[i]===address&&vm.addresses.splice(i,1)}function pushStub(){vm.addresses||(vm.addresses=[]),vm.addresses.push(angular.copy(vm.addressStub))}var vm=this;vm.updateFunctionality=updateFunctionality,vm.addAddress=addAddress,vm.removeAddress=removeAddress,vm.canRemove=removeEnabled,vm.canAdd=addEnabled,vm.isEditing="boolean"==typeof vm.isEditing?vm.isEditing:!!vm.isEditing,vm.canEdit="boolean"==typeof vm.canEdit?vm.canEdit:!!~vm.canEdit,vm.maxCount=vm.maxCount||10,vm.required=vm.canEdit&&("boolean"==typeof vm.required?vm.required:!!~vm.required),vm.fullWidth="boolean"==typeof vm.fullWidth?vm.fullWidth:!!vm.fullWidth,vm.inlineEdit="boolean"==typeof vm.inlineEdit?vm.inlineEdit:!!vm.inlineEdit,vm.canAdd=vm.canRemove=vm.canEdit,vm.addressStub={type:"",streetAddresses:["",""]},activate()}angular.module("addresses").directive("osAddressList",AddressListDirective).controller("OsAddressListController",AddressListController)}(),function(){function AddressItemDirective(){return{templateUrl:"modules/addresses/views/address.client.template.html",restrict:"E",scope:{address:"=model",isEditing:"=?",canEdit:"=?",canRemove:"&?",remove:"&?"},controller:"OsAddressItemController",controllerAs:"vm",bindToController:!0}}function AddressItemController($modal){function activate(){vm.address&&(vm.typeVal="other"===vm.address.type?vm.address.typeOther||vm.address.type:vm.address.type)}var vm=this;vm.canEdit=!!this.canEdit,vm.canRemove=vm.canRemove||function(){return vm.canEdit},vm.isOpen=!1,vm.getAddressType=function(){return"other"===vm.address.type?vm.address.typeOther:vm.address.type||"address"},vm.editAddress=function(){var modalInstance=$modal.open({templateUrl:"addressEditModal.html",controllerAs:"vm",controller:["$scope","address","text",function($scope,address,text){var vm=this;vm.address=address,vm.text=text,$scope.vm=vm}],resolve:{address:function(){return vm.address},text:function(){return{submit:"Save"}}}});modalInstance.result.then(function(result){console.log("Modal result %o",result),vm.isOpen=!1},function(){console.log("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})},vm.removeAddress=function(){vm.remove?vm.remove(vm.address):vm.address=null},activate()}AddressItemController.$inject=["$modal"],angular.module("addresses").directive("osAddress",AddressItemDirective).controller("OsAddressItemController",AddressItemController)}(),function(){function EditAddressDirective(){return{templateUrl:"modules/addresses/views/edit-address.client.template.html",restrict:"E",scope:{address:"=model",canRemove:"&?"},controller:"OsEditAddressController",controllerAs:"vm",bindToController:!0}}function EditAddressController($log){var vm=this;if(vm.canRemove=!!this.canRemove&&this.canRemove()||function(){return!0},vm.types=["main","home","business","billing"],vm.type={isopen:!1},vm.address)for(vm.address.streetAddresses||(vm.address.streetAddresses=[]);vm.address.streetAddresses.length<2;)vm.address.streetAddresses.push("");vm.setType=function(newType){$log.log("type set to: ",newType),vm.address.type=newType,vm.type.isopen=!1},vm.toggleDropdown=function($event){$log.log("toggling dropdown from %o to %o via event %o",vm.type.isopen,!vm.type.isopen,$event),$event.preventDefault(),$event.stopPropagation(),vm.type.isopen=!vm.type.isopen},vm.toggled=function(open){$log.log("Dropdown is now: ",open)}}EditAddressController.$inject=["$log"],angular.module("addresses").directive("osEditAddress",EditAddressDirective).controller("OsEditAddressController",EditAddressController)}(),function(){angular.module("addresses").factory("Addresses",["$resource",function($resource){return $resource("api/addresses/:addressId",{addressId:"@_id"},{update:{method:"PUT"},get:{cache:!0,method:"GET"}})}])}(),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"Applicants",state:"applications.mine",userTypes:["owner"],position:20}),Menus.addMenuItem("topbar",{title:"My Applications",state:"applications.mine",userTypes:["driver"],position:20}),Menus.addMenuItem("adminbar",{title:"Applications",state:"applications",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","applications",{title:"All Applications",state:"applications.list"}),Menus.addSubMenuItem("adminbar","applications",{title:"New Application",state:"applications.create"}),Menus.addSubMenuItem("adminbar","applications",{title:"My Applications",state:"applications.mine"})}menus.$inject=["Menus"],angular.module("applications").run(menus)}(),function(){function handle404s(err,$q){return 404===err.status?null:$q.reject(err)}function config($stateProvider){$stateProvider.state("applications",{"abstract":!0,url:"/applications",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque"}).state("applications.list",{url:"",templateUrl:"modules/applications/views/list-applications.client.view.html"}).state("applications.mine",{url:"/me",templateUrl:"modules/applications/views/list-applications.client.view.html",resolve:{applications:["Authentication","Applications",function(Authentication,Applications){var applications=Applications.ByUser.query({userId:Authentication.user._id,userType:Authentication.user.type}).$promise;return applications.catch(handle404s)}]},controller:["applications",function(applications){var vm=this;vm.applications=applications}],controllerAs:"vm",bindToController:!0}).state("applications.create",{url:"/create",templateUrl:"modules/applications/views/create-application.client.view.html"}).state("applications.view",{url:"/:applicationId",templateUrl:"modules/applications/views/view-application.client.view.html",resolve:{application:["$stateParams","Applications",function($stateParams,Applications){var promise=Applications.ById.get({id:$stateParams.applicationId}).$promise;return promise.catch(handle404s)}]},controller:"ApplicationMainController",controllerAs:"vm",bindToController:!0}).state("applications.edit",{url:"/:applicationId/edit",templateUrl:"modules/applications/views/edit-application.client.view.html"})}config.$inject=["$stateProvider"],angular.module("applications").config(config)}(),function(){function ApplicationMainController(application,auth,$state,$log,$scope,Socket){var vm=this;vm.application=application,vm.messageMode="text",vm.isopen=!1,vm.myId=auth.user._id,vm.postMessage=function(){if(vm.application.messages.push({text:vm.application.message,status:"sent",sender:auth.user._id}),Socket){var message={text:vm.message};Socket.emit("chatMessage",message),vm.message=""}else application.$update(function(){vm.application.message=""},processError)},vm.application.update=function(){var application=vm.application.application;application.$update(function(){},processError)};var processError=function(errorResponse){switch(errorResponse.status){case 403:vm.error="Sorry, you cannot make changes to this application",$state.go("home");break;default:vm.error=errorResponse.data.message}},room=vm.application._id;Socket?(Socket.emit("join-room",room),Socket.on("connect",function(){$log.info("[AppCtrl] Connecting to chat room: %s",room),Socket.emit("join-room",room)}),Socket.on("chatMessage",function(message){console.log("[AppCtrl] Incoming message: %o",message),vm.application.messages.unshift(message)}),$scope.$on("$destroy",function(){Socket.removeListener("chatMessage").leave(room)})):$log.warn("Socket is undefined in this context")}function ApplicationsController($scope,$stateParams,$location,$state,$log,Authentication,Applications){$scope.authentication=Authentication,$scope.activeModule=$scope.activeModule||"applications",$scope.placeholders={intro:"Write a short message explaining why you're a good fit for the position.",errors:{noJob:"You must select a job to apply to first, or you can save as a draft",noMessage:"Please enter a message before submitting your application"}},$scope.remove=function(application){if(application){application.$remove();for(var i in $scope.applications)$scope.applications[i]===application&&$scope.applications.splice(i,1)}else $scope.application.$remove(function(){$location.path("applications")})},$scope.initJobList=function(job){$scope.listTitle="driver"===Authentication.user.type?"My Application Status":"Applications",$scope.findAll(job)},$scope.initList=function(){var isAdmin=$scope.authentication.isAdmin(),userType=$scope.authentication.user.type;$state.is("applications.list")&&isAdmin?($log.info("[AC.initList] Finding all applications in the system for Admin user"),$scope.listTitle="Outset Job Application Listings",$scope.findAll()):($log.info('[AC.initList] Routing to "My Applications" for state %s',$state.$current.name),"driver"===userType?($scope.listTitle="My Job Applications",$scope.noItemsText="You have not applied to any jobs yet."):"owner"===userType&&($scope.listTitle="Active Job Applications",$scope.noItemsText="No job applications yet"),$scope.findMine(userType))},$scope.findAll=function(job){$log.debug("[AppController.find] Searching for applications");var jobId=job&&job._id||$scope.job&&$scope.job._id||$stateParams.jobId;jobId?($log.debug("[AppController.find] Looking for applications on jobID %o",jobId._id),$scope.applications=Applications.ByJob.query({jobId:jobId})):$scope.applications=Applications.ById.query()}}ApplicationMainController.$inject=["application","Authentication","$state","$log","$scope","Socket"],ApplicationsController.$inject=["$scope","$stateParams","$location","$state","$log","Authentication","Applications"],angular.module("applications").controller("ApplicationsController",ApplicationsController).controller("ApplicationMainController",ApplicationMainController)}(),function(){function ListApplicationsDirective(){var ddo;return ddo={templateUrl:"modules/applications/views/templates/os-list-applications.client.template.html",restrict:"E",scope:{displayMode:"@?",job:"=?",company:"=?",user:"=?",applications:"=?"},controller:function(Applications,Authentication,$log){var vm=this;vm.isEnabled=!1,vm.displayMode=vm.displayMode||"normal",vm.company=vm.company||vm.job&&vm.job.company,vm.user=vm.user||Authentication.user,vm.noItemsText="No job applications yet",vm.findAll=function(){$log.debug("[AppController.find] Searching for applications");var promise,jobId=vm.job&&vm.job._id;jobId?($log.debug("[AppController.find] Looking for applications on jobID %o",jobId),promise=Applications.ByJob.query({jobId:jobId}).$promise):"driver"===vm.user.type?promise=Applications.ByUser.query({userId:vm.user._id}).$promise:"owner"===vm.user.type&&vm.company&&(promise=Applications.ByCompany.query({companyId:vm.company._id}).$promise),promise.then(function(applications){$log.debug("[AppController.find] Found %d applications",applications.length),vm.applications=applications},function(error){$log.error("[AppController.find] Error finding applications %o",error)})},vm.applications||vm.findAll()},controllerAs:"vm",bindToController:!0}}angular.module("applications").directive("osListApplications",ListApplicationsDirective)}(),function(){function ViewApplicationDirective(){var ddo;return ddo={templateUrl:"modules/applications/views/templates/os-view-application.client.template.html",restrict:"E",scope:{displayMode:"@?",application:"=?model",job:"=?",user:"=?"},controller:function(Applications,$log){var vm=this;if(vm.displayMode=vm.displayMode||"normal",vm.application)$log.debug("[ViewApplicationDirective] Displaying as %s: %o",vm.displayMode,vm.application);else if(vm.job&&vm.user){var p=Applications.ForDriver.get({jobId:vm.job._id,userId:vm.user._id}).$promise;p.then(function(success){vm.application=success,vm.lastMessage=vm.application.messages[0]},function(failure){$log.error("Unable to lookup application based on job and user: %o",failure)})}},controllerAs:"vm",bindToController:!0}}angular.module("applications").directive("osViewApplication",ViewApplicationDirective)}(),function(){var ApplicationsService=["$resource",function($resource){var _this=this;return _this._data={ByUser:$resource("api/users/:userId/applications",{userId:"@userId"},{query:{method:"GET",isArray:!0}}),ByJob:$resource("api/jobs/:jobId/applications",{jobId:"@jobId"},{query:{method:"GET",isArray:!0},save:{method:"POST"}}),ById:$resource("api/applications/:id",{id:"@_id"},{update:{method:"PUT"},save:{method:"POST"}}),ByCompany:$resource("api/companies/:companyId/applications",{companyId:"@companyId"}),ForDriver:$resource("api/jobs/:jobId/applications/:userId",{jobId:"@jobId",userId:"@userId"})},_this._data}];ApplicationsService.$inject=["$resource"],angular.module("applications").factory("Applications",ApplicationsService)}(),function(){function menus(Menus){Menus.addMenuItem("adminbar",{title:"Articles",state:"articles",type:"dropdown",position:1,roles:["admin"]}),Menus.addSubMenuItem("adminbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("adminbar","articles",{title:"Create Articles",state:"articles.create"})}menus.$inject=["Menus"],angular.module("articles").run(menus)}(),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",templateUrl:"modules/core/views/fixed-opaque.client.view.html"}).state("articles.list",{url:"",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),function(){function ReportListController(reports,$stateParams,AppConfig){var vm=this;vm.skus=$stateParams.sku,vm.reports=reports,vm.faqs=AppConfig.getFaqs({category:"driver"}).then(function(vals){return console.log("[FAQ] promise resolved with %d vals",vals.length),vm.faqs=vals,vals}),vm.packages=AppConfig.getReports()||{base:{title:"Motor Vehicle Report",price:"5",sku:"MVRDOM",skus:["MVRDOM"],enabled:!0},good:{title:"Good",price:"14.50",sku:"NBDS+MVRDOM",skus:[{sku:"NBDS"},{sku:"MVRDOM"}],enabled:!0},better:{title:"Premium",price:"44.95",sku:"PKG_PREMIUM",skus:[{sku:"PKG_PREMIUM",subsku:["SSNVAL","CRIMESC","FORM_EVER"]}],enabled:!0},best:{title:"Enterprise",price:"84.95",sku:"PKG_PREMIUM+ES_ECUPIT",skus:[{sku:"ES_ECUPIT"},{sku:"PKG_PREMIUM",subsku:["SSNVAL","CRIMESC","FORM_EVER"]}],enabled:!0},drugs:{title:"Drug Test",price:"40",sku:"ES_ECUPIT",enabled:!1}}}function resolveApplicantForUser(Applicants,Authentication,$q){var userId=Authentication.user._id,getApplicant=Applicants.ByUser.get({userId:userId});return getApplicant.$promise.catch(function(error){return 404===error.status?(console.log("No Existing Applicant for User"),null):(console.error("Hard error searching for applicant: %o",error),$q.reject(error))})}function resolveReportDetails(Reports,$stateParams){var sku=$stateParams.sku,getDetails=Reports.get(sku);return getDetails.$promise}function resolveReports(Reports,$stateParams){$stateParams.sku;return Reports.Types.list().$promise}function BgCheckRoutes($stateProvider){$stateProvider.state("listBgchecks",{url:"/bgchecks",templateUrl:"modules/bgchecks/views/list-bgchecks.client.view.html"}).state("createBgcheck",{url:"/bgchecks/create",templateUrl:"modules/bgchecks/views/create-bgcheck.client.view.html"}).state("viewBgcheck",{url:"/bgchecks/:bgcheckId",templateUrl:"modules/bgchecks/views/view-bgcheck.client.view.html"}).state("editBgcheck",{url:"/bgchecks/:bgcheckId/edit",templateUrl:"modules/bgchecks/views/edit-bgcheck.client.view.html"}).state("reviewReports",{url:"/reports/:sku",templateUrl:"modules/bgchecks/views/review-reports.client.view.html",parent:"headline-bg",controller:"ReportListController",controllerAs:"vm",bindToController:!0,resolve:{reports:resolveReports}}).state("orderReports",{url:"/reports/:sku/order",templateUrl:"modules/bgchecks/views/enter-report-data.client.view.html",parent:"headline-bg",controller:"ReportDetailsController",controllerAs:"vm",bindToController:!0,resolve:{report:resolveReportDetails,applicant:resolveApplicantForUser},params:{sku:{"default":null,isArray:!0}}}).state("bgreportview",{url:"/bgchecks/viewUser/:userId",templateUrl:"modules/bgchecks/views/view-bgcheck.client.view.html",parent:"fixed-opaque",controller:"BgCheckUserController",controllerAs:"vm",bindToController:!0,resolve:{url:function(){return"modules/bgchecks/img/defaultReport.pdf"}}}).state("payments",{url:"/reports/:sku/pay",templateUrl:"modules/bgchecks/views/paymentTest.client.view.html",parent:"fixed-opaque",controller:function(){braintree.setup("eyJ2ZXJzaW9uIjoxLCJhdXRob3JpemF0aW9uRmluZ2VycHJpbnQiOiIzNTBhZDhkMjk4ZTU4NDc3OGFiODMyYTgzNDFkYThiMDI3NDUxYzJiOTY3ZWRjZDc4NTAwZmQ4MGMzNTllNGZlfGNyZWF0ZWRfYXQ9MjAxNS0wMS0wNFQwMDozNzo0Ni44MzA3ODU0NDIrMDAwMFx1MDAyNm1lcmNoYW50X2lkPWRjcHNweTJicndkanIzcW5cdTAwMjZwdWJsaWNfa2V5PTl3d3J6cWszdnIzdDRuYzgiLCJjb25maWdVcmwiOiJodHRwczovL2FwaS5zYW5kYm94LmJyYWludHJlZWdhdGV3YXkuY29tOjQ0My9tZXJjaGFudHMvZGNwc3B5MmJyd2RqcjNxbi9jbGllbnRfYXBpL3YxL2NvbmZpZ3VyYXRpb24iLCJjaGFsbGVuZ2VzIjpbXSwicGF5bWVudEFwcHMiOltdLCJjbGllbnRBcGlVcmwiOiJodHRwczovL2FwaS5zYW5kYm94LmJyYWludHJlZWdhdGV3YXkuY29tOjQ0My9tZXJjaGFudHMvZGNwc3B5MmJyd2RqcjNxbi9jbGllbnRfYXBpIiwiYXNzZXRzVXJsIjoiaHR0cHM6Ly9hc3NldHMuYnJhaW50cmVlZ2F0ZXdheS5jb20iLCJhdXRoVXJsIjoiaHR0cHM6Ly9hdXRoLnZlbm1vLnNhbmRib3guYnJhaW50cmVlZ2F0ZXdheS5jb20iLCJhbmFseXRpY3MiOnsidXJsIjoiaHR0cHM6Ly9jbGllbnQtYW5hbHl0aWNzLnNhbmRib3guYnJhaW50cmVlZ2F0ZXdheS5jb20ifSwidGhyZWVEU2VjdXJlRW5hYmxlZCI6dHJ1ZSwidGhyZWVEU2VjdXJlIjp7Imxvb2t1cFVybCI6Imh0dHBzOi8vYXBpLnNhbmRib3guYnJhaW50cmVlZ2F0ZXdheS5jb206NDQzL21lcmNoYW50cy9kY3BzcHkyYnJ3ZGpyM3FuL3RocmVlX2Rfc2VjdXJlL2xvb2t1cCJ9LCJwYXlwYWxFbmFibGVkIjp0cnVlLCJwYXlwYWwiOnsiZGlzcGxheU5hbWUiOiJBY21lIFdpZGdldHMsIEx0ZC4gKFNhbmRib3gpIiwiY2xpZW50SWQiOm51bGwsInByaXZhY3lVcmwiOiJodHRwOi8vZXhhbXBsZS5jb20vcHAiLCJ1c2VyQWdyZWVtZW50VXJsIjoiaHR0cDovL2V4YW1wbGUuY29tL3RvcyIsImJhc2VVcmwiOiJodHRwczovL2Fzc2V0cy5icmFpbnRyZWVnYXRld2F5LmNvbSIsImFzc2V0c1VybCI6Imh0dHBzOi8vY2hlY2tvdXQucGF5cGFsLmNvbSIsImRpcmVjdEJhc2VVcmwiOm51bGwsImFsbG93SHR0cCI6dHJ1ZSwiZW52aXJvbm1lbnROb05ldHdvcmsiOnRydWUsImVudmlyb25tZW50Ijoib2ZmbGluZSIsIm1lcmNoYW50QWNjb3VudElkIjoic3RjaDJuZmRmd3N6eXR3NSIsImN1cnJlbmN5SXNvQ29kZSI6IlVTRCJ9LCJjb2luYmFzZUVuYWJsZWQiOmZhbHNlfQ==","dropin",{container:"dropin"})}})}BgCheckRoutes.$inject=["$stateProvider"],resolveApplicantForUser.$inject=["Applicants","Authentication","$q"],resolveReports.$inject=["Reports","$stateParams"],resolveReportDetails.$inject=["Reports","$stateParams"],ReportListController.$inject=["reports","$stateParams","AppConfig"],angular.module("bgchecks").config(BgCheckRoutes).controller("ReportListController",ReportListController)}(),function(){function BgCheckUserController($scope,Authentication,$http,$log,$sce,url,pdfDelegate){var vm=this;vm.url=url,vm.user=Authentication.user,$http.get(url,{responseType:"arraybuffer"}).success(function(response){pdfDelegate.$getByHandle("pdf1").load(response)})}BgCheckUserController.$inject=["$scope","Authentication","$http","$log","$sce","url","pdfDelegate"],angular.module("bgchecks").controller("BgCheckUserController",BgCheckUserController)}(),function(){var BGChecksController=["$scope","$stateParams","$location","$http","$log","Authentication","Bgchecks","Stubs",function($scope,$stateParams,$location,$http,$log,Authentication,Bgchecks,Stubs){$scope.authentication=Authentication,$scope.pdfUrl="modules/bgchecks/img/defaultReport.pdf",$scope.$watch("applicant",function(newValue,oldValue){return newValue===oldValue?void $log.debug("no change in applicant - why did this get fired?"):void $scope.selectApplicant(newValue.remoteApplicantId)}),$scope.loadApplicants=function(){$http.get("/bgcheck/login").success(function(){$http.get("/bgcheck/applicants").success(function(response){$log.debug("got applicants: %o",response.applicants),$scope.applicants=response.applicants}).error(function(){$scope.error="Unable to retrieve applicants for query",$scope.applicants=Stubs.applcantList})}).error(function(){$scope.error="Unable to connect to Background Check service",$scope.applicants=Stubs.applcantList})},$scope.selectApplicant=function(id){$log.debug("Applicant %d selected ... loading info",id),$http.get("/bgcheck/applicants/"+id).success(function(response){$log.debug("got applicant info: %o",response),$scope.applicantInfo=response}).error(function(){$scope.error="Unable to load Applicant's information",$scope.applicantInfo=Stubs.applicant})},$scope.create=function(){var bgcheck=new Bgchecks({name:this.name,applicant:this.applicant});bgcheck.$save(function(response){$location.path("bgchecks/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(bgcheck){if(bgcheck){bgcheck.$remove();for(var i in $scope.bgchecks)$scope.bgchecks[i]===bgcheck&&$scope.bgchecks.splice(i,1)}else $scope.bgcheck.$remove(function(){$location.path("bgchecks")})},$scope.update=function(){var bgcheck=$scope.bgcheck;bgcheck.$update(function(){$location.path("bgchecks/"+bgcheck._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.bgchecks=Bgchecks.query()},$scope.findOne=function(){$scope.bgcheck=Bgchecks.get({bgcheckId:$stateParams.bgcheckId})}}];BGChecksController.$inject=["$scope","$stateParams","$location","$http","$log","Authentication","Bgchecks","StubValues"],angular.module("bgchecks").controller("BgchecksController",BGChecksController)}(),function(){function completeApplicantModel(field){var model=this.model;if(!model.hasOwnProperty(field.name))switch(field.type){case"array":model[field.name]=[];break;case"object":model[field.name]={};break;default:model[field.name]=""}}function translateFieldsToNg(field){var model=this.model;switch(field.type){case"string":if(field.pickList){field.isPickList=!0;break}field.ngType="text",field.ngMaxLength=field.length;break;case"datelong":var d=model[field.name],format="YYYYMMDD";if(d&&d.length>8)if(d.length<=10&&/[-\/]/.test(d))format=d.replace(/\d{4}/,"YYYY").replace(/\d{2}/,"MM").replace(/\d{2}/,"DD");else{var m;(m=moment(d)).toArray().splice(3).reduce(function(p,n){return p+n})?(console.error('Unsure How to Handle "date" string: %s',d),model[field.name]=moment.utc(d).subtract(5,"hours")):(console.error("Treating %s as date-only with default format",d),model[field.name]=m.format(format))}else d||(model[field.name]="");field.isDate=!0,field.format=format;break;case"state":this.states||(this.states=this.config.getStates());break;case"country":this.countries||(this.countries=this.config.getCountries());break;case"object":field.dataFields&&field.dataFields.map(translateFieldsToNg,this),field.isObject=!0;break;case"array":field.dataFields&&field.dataFields.map(translateFieldsToNg,this),field.isArray=!0,field.values=field.values||[]}var sensitive=/^governmentId|SSN$/i;return(sensitive.test(field.name)||sensitive.test(field.description))&&(field.ngSensitive=!0,field.ngType="password"),field}function ReportDetailsController(report,applicant,appConfig,auth,Applicants,$log){var vm=this;vm.report=report,vm.model=applicant||{},vm.config=appConfig,vm.introText="To get started, you will need to provide us with some information. We'll do our best to fill in what we already know, and won't make you fill it out again.",vm.getStartedText="Each report type requires different information. Please fill in the following fields in order to continue",vm.report.fields.map(translateFieldsToNg,vm),vm.report.fields.map(completeApplicantModel,vm),vm.submit=function(){if(vm.reportForm.$invalid)return vm.error="Please correct all errors above",!1;vm.model.userId=auth.user._id;var applicant=new Applicants.ByUser(vm.model);$log.debug("Creating new applicant with data: %o",applicant),applicant.$save(function(response){console.log("SUCCESS! %s Applicant: %o",response.updated?"Updated":"Created",response),vm.response=response,vm.applicant=Applicants.get(response).catch(function(err){return $log.error("unable to verify applicant due to error",err),vm.error=err.message||err.data.message,!1}),vm.verify=!0},function(err){return err&&$log.error("failed to create applicant: %o",err),$log.error("this is a workaround to test form validation!"),vm.verify=!0,vm.applicant=_.mapValues(vm.model,function(val){return console.log(val),val}),vm.error=err.message||err.data.message,!1})},vm.execute=function(){alert("yay")}}function capFilter(){return function(input){return input?/^[A-Z]+$/.test(input)?input:input.replace(/_/g," ").replace(/[a-z][A-Z]/g,function(txt){return txt.charAt(0)+" "+txt.charAt(1)}).replace(/([^\W_]+[^\s-]*) */g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}):""}}angular.module("core").filter("titlecase",capFilter),ReportDetailsController.$inject=["report","applicant","AppConfig","Authentication","Applicants","$log","$q"],angular.module("bgchecks").controller("ReportDetailsController",ReportDetailsController)
}(),function(){function ReportsSummaryController(Reports,Applicants,$log){var vm=this;Reports.Types.list({returnAll:!0}).$promise.then(function(fulfilled){vm.reportTypes=fulfilled},function(error){vm.error=error.message});var uid=vm.userId||vm.user&&vm.user._id;uid&&Applicants.ByUser.get({userId:uid}).$promise.then(function(applicant){$log.debug("got applicant repsonse! %o",applicant),vm.applicant=applicant,vm.reports=applicant&&applicant.reports,vm.calculateButtons()},function(err){$log.debug("No Applicant found for user",err)}),vm.calculateButtons=function(){vm.viewReport,vm.reviewReport,vm.completeReport,vm.reports&&vm.reports.length&&(vm.complete=_.filter(vm.reports,{status:"COMPLETED"}),vm.pending=_.filter(vm.reports,{status:null}),vm.inprocess=_.reject(_.reject(vm.reports,vm.pending),vm.complete)),vm.reportSellHeader="Choose from one of the following packages!",vm.reportSellHeader=!vm.reports&&vm.applicant?"Continue your application process today!":vm.complete?"Add additional packages to your profile!":"Report Status:"}}function BgCheckSummaryDirective(){var ddo={templateUrl:"modules/bgchecks/views/bgcheck-summary.client.template.html",restrict:"E",scope:{user:"=?",userId:"@?"},controller:"ReportsSummaryController",controllerAs:"vm",bindToController:!0};return ddo}ReportsSummaryController.$inject=["Reports","Applicants","$log"],angular.module("bgchecks").controller("ReportsSummaryController",ReportsSummaryController).directive("osBgCheckSummary",BgCheckSummaryDirective)}(),function(){var stubs={applicantList:[{lastName:"Smith",applicantId:1e6,governmentId:"201211141",birthDate:2604276e5,firstName:"Bob"},{lastName:"Smith",applicantId:13,governmentId:null,birthDate:1360902394e3,firstName:"Albert"}],applicant:{firstName:"Bob",middleName:"Norman",lastName:"Smith",nameSuffix:"MD",applicantId:1e6,aliases:[{middleName:null,lastName:"McDonald",firstName:"Ronald"}],currentAddress:{street2:"Suite 200",street1:"101 Oak Street",postalCode:"30302",state:"georgia",province:null,country:"united_states",city:"Atlanta"},governmentId:"201211141",gender:"Male",birthDate:2604276e5}};angular.module("bgchecks").constant("StubValues",stubs)}(),function(){var bgCheckFactory=["$resource",function($resource){return $resource("api/bgchecks/:bgcheckId",{bgcheckId:"@_id"},{update:{method:"PUT"}})}],reportFactory=["$resource",function($resource){var _this=this;return _this.data={Types:$resource("/api/reports/types",{},{list:{method:"GET",isArray:!0}}),get:function(sku){var retVal=$resource("/api/reports/types/:sku",{sku:"@sku"});return retVal.get({sku:sku})}},_this.data}],applicantFactory=["$resource",function($resource){var _this=this;return _this.data={ByUser:$resource("/api/users/:userId/driver/applicant",{userId:"@userId",reportSource:"@reportSource"},{get:{method:"GET",isArray:!1}}),ListAll:function(){var retVal=$resource("/api/reports/applicants");return retVal.query()},get:function(query){var retVal=$resource("/api/reports/applicants/:applicantId",{applicantId:"@applicantId"});return retVal.get(query)}},_this.data}];bgCheckFactory.$inject=["$resource"],angular.module("bgchecks").factory("Reports",reportFactory).factory("Bgchecks",bgCheckFactory).factory("Applicants",applicantFactory)}(),function(){angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("adminbar",{title:"Chat",state:"chat",roles:["Admin"]}),Menus.addMenuItem("topbar",{title:"Chat",state:"chat",roles:["Admin"]})}])}(),angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html"})}]),angular.module("chat").controller("ChatController",["$scope","Socket",function($scope,Socket){$scope.messages=[],Socket.on("chatMessage",function(message){console.log("Incoming message: %o",message),$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"Dashboard",state:"companies.home",userTypes:["owner"],position:1}),Menus.addMenuItem("adminbar",{title:"Companies",state:"companies",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","companies",{title:"List Companies",state:"companies.list"}),Menus.addSubMenuItem("adminbar","companies",{title:"New Company",state:"companies.create"})}menus.$inject=["Menus","Authentication"],angular.module("companies").run(menus)}(),function(){function newCompany(auth){return{ownerId:auth.user._id}}function companyResolve(rsrc,params){if(params.companyId){var val=params.companyId;return console.log("Searching for company ID: %s",val),rsrc.ById.get({companyId:val}).$promise}return{}}function userResolve(rsrc,params,auth){if(params.companyId)return console.log("userResolve has a companyId: rerouting"),companyResolve(rsrc,params);var val;return params.userId?(console.log("Searching for company data for user %s",params.userId),val=params.userId):(console.log("Searching for company data for logged in user"),val=auth.user._id),rsrc.ByUser.get({userId:val}).$promise.then(function(value){return console.log("Successfully got company %o",value),value},function(error){if(404===error.status)return console.log("Unable to find company"),null;throw error})}function config($stateProvider){$stateProvider.state("companies",{"abstract":!0,url:"/companies",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque"}).state("companies.list",{url:"/list",templateUrl:"modules/companies/views/list-companies.client.view.html",parent:"companies",controller:"CompaniesController",controllerAs:"vm",resolve:{companies:["rsrc",function(rsrc){return rsrc.ById.query().$promise}]}}).state("companies.home",{url:"/home",templateUrl:"modules/companies/views/view-company.client.view.html",parent:"companies",controller:"CompaniesController",controllerAs:"vm",resolve:{company:userResolve}}).state("companies.create",{url:"/create",templateUrl:"modules/companies/views/edit-company.client.view.html",parent:"companies",controller:"CompanyEditController",controllerAs:"vm",resolve:{company:newCompany}}).state("companies.view",{url:"/:companyId",templateUrl:"modules/companies/views/view-company.client.view.html",parent:"companies",controller:"CompaniesController",controllerAs:"vm",resolve:{company:companyResolve}}).state("companies.edit",{url:"/{companyId}/edit",templateUrl:"modules/companies/views/edit-company.client.view.html",parent:"companies",controller:"CompanyEditController",controllerAs:"vm",resolve:{company:companyResolve}})}companyResolve.$inject=["Companies","$stateParams"],userResolve.$inject=["Companies","$stateParams","Authentication"],newCompany.$inject=["Authentication"],config.$inject=["$stateProvider"],angular.module("companies").config(config)}(),function(){function CompaniesController($scope,$state,$stateParams,$location,Authentication,Companies,company){var vm=this;vm.authentication=Authentication,vm.user=Authentication.user,vm.company=company,vm.makeCall=function(){window.location.href="tel://"+vm.company.phone},vm.sendEmail=function(){window.location.href="mailto:"+vm.company.email+"?subject=Your Outset Company Profile&body=Hello "+vm.company.name+",%0D%0AI saw your company profile on Outset and wanted to hear more.%0D%0A%0D%0AThank you,%0D%0A"+Authentication.user.firstName+"%0D%0A%0D%0A-------------%0D%0AView this Outset Profile here: "+$location.$$absUrl},vm.openChat=function(){alert("Sorry, but chat functionailty is not available at this time")},vm.find=function(){vm.companies=Companies.ById.query()},vm.init=function(){$state.is("companies.home")||"home"===$stateParams.companyId?vm.findByUser(vm.user):vm.findOne()},vm.findOne=function(){vm.company=vm.company||Companies.ById.get({companyId:$stateParams.companyId})},vm.findOneByUser=function(user){"owner"===user.type&&(vm.company=Companies.ByUser.get({userId:user._id}))},vm.successFunction=function(fileItem,response){vm.company=response,vm.showPhotoEdit=!1},vm.showPhotoEdit=!1,vm.showModal=function(){vm.showPhotoEdit=!0},vm.hideModal=function(){vm.showPhotoEdit=!1}}CompaniesController.$inject=["$scope","$state","$stateParams","$location","Authentication","Companies","company"],angular.module("companies").controller("CompaniesController",CompaniesController)}(),function(){function CompanyEditController($state,$log,Companies,company){function activate(){vm.company||$log.error("[CompanyEditController] No company available in state %s",$state.current.name),$state.is("companies.create")?(vm.submit=create,vm.submitText="Create",vm.pageTitle="Create your new company profile",vm.editName=!0):$state.is("companies.edit")?(vm.submit=update,vm.submitText="Update",vm.pageTitle=vm.company.name):$state.is("companies.remove")&&(vm.submit=remove,vm.submitText="Remove",vm.submitClass="btn-danger")}function create(){var company=new Companies.ById(vm.company);company.$save(function(response){$state.go("companies.home",{companyId:response._id}),vm.company=null},function(errorResponse){vm.error=errorResponse.data.message||errorResponse.data.error.message})}function remove(){vm.company.$remove(function(){$state.go("home")})}function update(){var company=vm.company;company.$update(function(){$state.go("companies.home",{companyId:company._id})},function(errorResponse){vm.error=errorResponse.data.message})}function cancel(){$state.go("home")}var vm=this;vm.company=company,vm.submit=function(){$log.error("[CompanyEditController] No method assigned for form submission")},vm.cancel=cancel,vm.submitClass="",vm.editName=!1,activate()}CompanyEditController.$inject=["$state","$log","Companies","company"],angular.module("companies").controller("CompanyEditController",CompanyEditController)}(),function(){function CompanyDirectiveController(Authentication){var dm=this;dm.user=Authentication.user,dm.createEnabled=!1,dm.createText="Thanks for signing up. Right now our site is only available to drivers to give them a chance to fill out their profiles and order reports. You will receive an email once the site is available for job postings."}function CompanyDirective(){var ddo;return ddo={templateUrl:"modules/companies/views/templates/view-company.client.template.html",scope:{company:"=",inline:"="},restrict:"E",replace:!0,controller:"CompanyDirectiveController",controllerAs:"dm",bindToController:!0}}CompanyDirectiveController.$inject=["Authentication"],angular.module("companies").controller("CompanyDirectiveController",CompanyDirectiveController).directive("osCompany",CompanyDirective)}(),function(){function Companies($resource){return{ById:$resource("api/companies/:company:companyId",{company:"@_id",companyId:"@_companyId"},{update:{method:"PUT"}}),ByUser:$resource("api/users/:userId/companies",{userId:"@_userId"})}}Companies.$inject=["$resource"],angular.module("companies").factory("Companies",Companies)}(),function(){function reroute($rootScope,$state,Auth,$log){var redirectString,isRedirectInProgress=!1;$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState){if(isRedirectInProgress&&!event.defaultPrevented)return void $log.warn('[CoreConfig] stateChangeStart already in progress [%s]. Stopping redirect to "%s"',redirectString,toState.name);if($log.debug('[CoreConfig] Leaving state: %s "%s" %o Entering state: %s "%s" %o',fromState.name,fromState.url,fromState,toState.name,toState.url,toState,event),redirectString=fromState.name+" --> "+toState.name,toState.authenticate&&!Auth.isLoggedIn())isRedirectInProgress=!0,$log.error("State '%s' requires authentication but no user is signed in",toState.name),event.preventDefault(),$state.go("intro");else if(Auth.user&&/^(intro|home)$/gi.test(toState.name))switch(Auth.user.type){case"driver":isRedirectInProgress=!0,$log.debug("[HomeController] Re-Routing to driver's profile page"),event.preventDefault(),$state.go("drivers.home");break;case"owner":isRedirectInProgress=!0,$log.debug("[HomeController] Re-Routing to the user's company home"),event.preventDefault(),$state.go("companies.home");break;default:$log.warn("[HomeController] Unknown User Type"),Auth.isAdmin()&&($log.warn("[HomeController] Admin User - routing to user list"),$state.go("users.list"))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState){isRedirectInProgress=!1,$log.debug('[CoreConfig] $stateChangeSuccess completed: From state: %s "%s" %o To state: %s "%s" %o',fromState.name,fromState.url,fromState,toState.name,toState.url,toState,event)}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){$log.error("State Change error from %s to %s",fromState.name,toState.name,error),fromState&&fromState.name?(event.preventDefault(),$log.warn("Rerouting back to source state"),$state.go(fromState.name,{error:error})):(event.preventDefault(),$log.warn("Unknown next step"))})}reroute.$inject=["$rootScope","$state","Authentication","$log"],angular.module("core").run(reroute)}(),function(){function handleBadRoute($injector,$location){console.log("Unknown URL pattern: %s",$location.url()),$injector.invoke(["Authentication","$log",function(auth,$log){if(auth.isLoggedIn())switch(auth.user.type){case"driver":$log.debug("[Route.Otherwise] Re-Routing to driver's profile page"),$location.path("/drivers/home");break;case"owner":$log.debug("[Route.Otherwise] Re-Routing to the user's company home"),$location.path("/companies/home");break;default:$log.warn("[Route.Otherwise] Unknown Destination"),$location.path("/")}else $location.path("/")}])}function config($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(handleBadRoute),$stateProvider.state("superbase",{"abstract":!0,template:'<div ui-view class="superbase"></div>',params:{delay:{value:"0",squash:!0}},resolve:{waitforit:["$stateParams","$timeout",function($stateParams,$timeout){return $stateParams.delay?(console.log("Waiting for %d seconds",$stateParams.delay),void $timeout(function(){return"waited"},1e3*$stateParams.delay)):"go ahead"}]}}).state("full-clear",{"abstract":!0,templateUrl:"modules/core/views/full-clear.client.view.html"}).state("full-opaque",{"abstract":!0,templateUrl:"modules/core/views/full-opaque.client.view.html"}).state("fixed-clear",{"abstract":!0,templateUrl:"modules/core/views/fixed-clear.client.view.html",parent:"full-clear"}).state("fixed-opaque",{"abstract":!0,templateUrl:"modules/core/views/fixed-opaque.client.view.html",parent:"full-clear"}).state("headline-bg",{"abstract":!0,templateUrl:"modules/core/views/headline-bg.client.view.html",parent:"full-clear"}).state("intro",{url:"/",templateUrl:"modules/core/views/intro.client.view.html",parent:"superbase"}).state("home",{url:"/h"})}handleBadRoute.$inject=["$injector","$location","$state","Authentication","$log"],config.$inject=["$stateProvider","$urlRouterProvider"],angular.module("core").config(config)}(),function(){function FooterController($scope){$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.year=(new Date).getFullYear()}FooterController.$inject=["$scope"],angular.module("core").controller("FooterController",FooterController)}(),function(){function HeaderController($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.navbarClass="",$scope.menu=Menus.getMenu($scope.authentication.user&&$scope.authentication.isAdmin()?"adminbar":"topbar"),$scope.stateLink="intro",$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}HeaderController.$inject=["$scope","$state","Authentication","Menus"],angular.module("core").controller("HeaderController",HeaderController)}(),function(){function HomeController($scope,$location,$state,$anchorScroll,$modal,$log,Authentication){$scope.authentication=Authentication,$scope.showMain=!0,$scope.showInfo=!1,$scope.showSignup=!1,$scope.gotoSignup=function(){$scope.showMain=!1,$scope.showInfo=!1,$scope.showSignup=!0,$location.hash("signup_type"),$anchorScroll()}}HomeController.$inject=["$scope","$location","$state","$anchorScroll","$modal","$log","Authentication"],angular.module("core").controller("HomeController",HomeController)}(),angular.module("core").directive("fitVids",fitVidsDirective),function(){function ModalFocusDirective($timeout,$parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.modalFocus);scope.$watch(model,function(value){value===!0&&$timeout(function(){element[0].focus()})})}}}ModalFocusDirective.$inject=["$timeout","$parse"],angular.module("core").directive("modalFocus",ModalFocusDirective)}(),function(){function yearIsChill(d){return d.year()>y-90&&d.year()<y+20}function getDate(model,format){var t;if(!model||_.isEmpty(model))return"";if((t=moment(model,format)).isValid()&&yearIsChill(t))return t;if("string"==typeof model){var stripped=model.replace(/[^\d]/,"");if((t=moment(stripped)).isValid()&&yearIsChill(t))return t;if((t=moment(stripped,format)).isValid()&&yearIsChill(t))return t;if((t=moment(stripped,"MMDDYYYY")).isValid()&&yearIsChill(t))return t;if((t=moment(stripped,"YYYYMMDD")).isValid()&&yearIsChill(t))return t}return(t=moment(model)).isValid()&&yearIsChill(t)?t:""}function dpCtrl($element,$attrs,$scope,$log){var vm=this;vm.format=vm.format||"YYYY-MM-DD",vm.display="L",vm.displayFormat=vm.dformat||moment().format("L").replace(/\d{4}/,"YYYY").replace(/\d{2}/,"MM").replace(/\d{2}/,"DD"),vm.required=void 0===vm.required&&void 0!==$attrs.required||!!vm.required,vm.mask=vm.dformat&&vm.dformat.replace(/\w/g,"9")||"99/99/9999",console.log("got mask %s from %s",vm.mask,vm.dformat);var t=getDate(vm.model,vm.format);vm.shadow=t?t.format(vm.displayFormat):t,$scope.$watch("vm.shadow",function(newVal,oldVal){if(newVal!==oldVal){$log.info("[osDp] Change Detected, %o --> %o {%s}",oldVal,newVal,vm.format);var m;newVal&&(m=moment.isMoment(newVal)?newVal:moment(newVal,vm.displayFormat),m.isValid()&&($log.info("[osDp] validDate %o --> %s",m,m.format(vm.format)),vm.model=m.format(vm.format)))}})}function dpDirective(){return{priority:0,templateUrl:"/modules/core/views/templates/os-datepicker.client.template.html",replace:!0,restrict:"E",scope:{model:"=",format:"=?",dformat:"@?",isRequired:"=?",osName:"=?"},controller:dpCtrl,controllerAs:"vm",bindToController:!0}}var y=moment().year();dpCtrl.$inject=["$element","$attrs","$scope","$log"],angular.module("core").directive("dateInput",dpDirective)}(),function(){function osDebugInfoCtrl($scope,$rootScope,$location,$state,$log,Auth,AppConfig){$scope.debugInfo=[],$scope.collapsed=!0;var enabled=AppConfig.get("debug");if($log.error("Debug is : %o",enabled),$scope.enabled=!1){var updateInfo=function(event,toState){$log.debug("[DebugInfo] Entering state: %o. %o",toState.name,toState),$scope.debugInfo.length=0,toState&&toState.name&&$scope.debugInfo.push({key:"State",value:toState.name}),toState&&toState.name&&$scope.debugInfo.push({key:"Parent",value:toState.parent&&toState.parent.name||"n/a"}),$scope.debugInfo.push({key:"Path",value:$location.$$path}),$scope.debugInfo.push({key:"UserId",value:Auth.user._id})};$scope.toggle=function(){$scope.collapsed=!$scope.collapsed},$rootScope.$on("$stateChangeSuccess",updateInfo)}}osDebugInfoCtrl.$inject=["$scope","$rootScope","$location","$state","$log","Authentication","AppConfig"],angular.module("core").directive("osDebugInfo",[function(){return{scope:{pageName:"@?"},templateUrl:"modules/core/views/templates/os-debug-info.client.template.html",restrict:"E",replace:!1,controller:"OsDebugInfoController"}}]).controller("OsDebugInfoController",osDebugInfoCtrl).filter("sanitize",["$sce",function($sce){return function(htmlCode){return $sce.trustAsHtml(htmlCode)}}]).filter("streamline",["$sce",function($sce){return function(htmlCode){for(var hRegex=/<(\/?)h\d>/,eRegex=/<[^\/]+?><\/.+?>|<br[\/]?>/,pRegex=/<(p).*?>([^<]*)<\/(p)>|<(ul|li).*?>([^<][^u]?[^l][^i]?)+<\/(ul|li)>/,result=htmlCode.replace(eRegex,"");result.match(eRegex);)result=result.replace(eRegex,"");for(;result.match(hRegex);)result=result.replace(hRegex,"<$1b>");for(;result.match(pRegex);)result=result.replace(pRegex,"&nbsp;$2");return $sce.trustAsHtml(result)}}])}(),function(){function FormActionsDirective(){var template='<div data-ng-show="vm.errorText" class="pull-left text-danger"><strong data-ng-bind="vm.errorText"></strong></div><div class="pull-right">   <input ng-if="vm.showCancel" type="button" class="btn btn-link" value="{{vm.cancelText}}" ng-click="vm.cancel()">   <input ng-if="vm.showAlt" type="button" class="btn btn-default" value="{{vm.altText}}" ng-click="vm.alt()">   <input type="submit" class="btn {{vm.submitClass}}" ng-class="{ \'disabled\': vm.disableSubmit}" value="{{vm.submitText}}"></div>',ddo={template:template,scope:{disableSubmit:"=?",submitText:"@?",submitClass:"@?",cancelFn:"&?",cancelText:"@?",altFn:"&?",altText:"@?",errorText:"=?"},controller:function(){var vm=this;vm.showAlt=!!vm.altFn(),vm.altText=vm.altText||"Other Action",vm.showCancel=!!vm.cancelFn(),vm.cancelText=vm.cancelText||"cancel",vm.submitClass=vm.submitClass||"btn-success",vm.submitText=vm.submitText||"Save","undefined"==typeof vm.disableSubmit&&(vm.disableSubmit=!1),vm.alt=function(){vm.altFn()()},vm.cancel=function(){vm.cancelFn()()}},controllerAs:"vm",bindToController:!0};return ddo}angular.module("core").directive("osFormActions",FormActionsDirective)}(),function(){angular.module("core").directive("osHtmlEdit",[function(){return{priority:0,template:'<text-angular ng-model="vm.model" ta-toolbar="vm.toolbar"></text-angular>',replace:!1,restrict:"E",scope:{model:"=",toolbar:"=?"},controllerAs:"vm",bindToController:!0,controller:["$scope","$element","$attrs","$transclude",function(){var vm=this,toolbar=["bold","italics","underline","ul","ol","justifyLeft","justifyCenter"];vm.toolbar=toolbar}]}}])}(),function(){function PageHeaderDirective(){var ddo;return ddo={templateUrl:"modules/core/views/templates/os-page-header.client.template.html",scope:{title:"@",subTitle:"@?",editSref:"@?",showEdit:"=?",btnShow:"=?",btnText:"@?",btnSref:"@?",level:"@?",pictureUrl:"=?"},transclude:!0,restrict:"E",controller:["$transclude",function(transclude){var dm=this;dm.btnShow="undefined"==typeof this.btnShow?!0:this.btnShow,dm.showEdit="undefined"==typeof this.showEdit?!1:this.showEdit,dm.hover=!1,dm.includeTransclude=!!transclude().contents()&&transclude().contents().length>0}],controllerAs:"dm",bindToController:!0}}angular.module("core").directive("osPageHeader",PageHeaderDirective)}(),function(){angular.module("core").directive("richTextEditor",function(){return{restrict:"A",require:"ngModel",transclude:!0,link:function(scope,element,attrs,ctrl){var textarea=element.wysihtml5({html:!0}),editor=textarea.data("wysihtml5").editor;editor.on("change",function(){editor.getValue()&&scope.$apply(function(){ctrl.$setViewValue(editor.getValue())})}),ctrl.$render=function(){textarea.html(ctrl.$viewValue),editor.setValue(ctrl.$viewValue)},ctrl.$render()}}})}(),function(){function ScrollDirective($window){return{scope:{scroll:"=scrollPosition"},link:function(scope){var windowEl=angular.element($window),handler=function(){scope.scroll=windowEl.scrollTop()};windowEl.on("scroll",scope.$apply.bind(scope,handler)),handler()}}}ScrollDirective.$inject=["$window"],angular.module("core").directive("scrollPosition",ScrollDirective)}(),function(){function TOSModalDirective(){return{transclude:!0,templateUrl:"modules/core/views/tos.client.directive.html",restrict:"EA",scope:{title:"@?",terms:"@?",acceptFn:"&?"},controller:"TosModalController",controllerAs:"vm",bindToController:!0}}function TosModalController($modal,$log){var vm=this;vm.isOpen=!1,vm.showModal=function(){var modalInstance=$modal.open({templateUrl:"tosModal.html",size:"xl",backdropClass:"darken",windowClass:"tos",controller:"TosController",controllerAs:"vm",resolve:{vm:function(){return vm}}});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.acceptFn&&vm.acceptFn(result),vm.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})}}function TosController(vm,$log){$log.debug("TosController: Init with values: %o",vm),vm.tosHTML&&$log.debug("DocHTML wins over DocTemplate")}TosController.$inject=["vm","$log"],TosModalController.$inject=["$modal","$log"],angular.module("core").directive("tos",TOSModalDirective).controller("TosModalController",TosModalController).controller("TosController",TosController)}(),function(){function ConfigFactory($resource,$log,$q){var months,faqs;return{getStates:function(){var rsrc=$resource("api/config/states");return rsrc.query()},getCountries:function(){var rsrc=$resource("api/config/countries");return rsrc.query()},getBaseSchedule:function(){var rsrc=$resource("api/config/baseSchedule");return rsrc.query()},getMonths:function(){if(!months){for(months=[];months.length<12;){var m=moment().month(months.length);months.push({num:m.format("MM"),name:m.format("MMMM")})}console.log("ConfigFactory] Returning newly generated months",JSON.stringify(months))}return months},get:function(config){var rsrc=$resource("api/config/"+config),d=$q.defer();rsrc.get().$promise.then(function(resp){d.resolve(resp.hasOwnProperty(config)?resp[config]:resp)},function(err){return $log.log('[AppCfg] "%s" is not an available',config,err),!1}),d.promise.then(function(f){return f},function(e){return e})},getReports:function(){var rsrc=$resource("api/config/reports");return rsrc.get()},getFaqs:function(){var d=$q.defer();if(faqs)d.resolve(faqs);else{var rsrc=$resource("api/config/faqs");rsrc.query().$promise.then(function(resp){$log.debug("faq response: %o",resp),faqs=resp,d.resolve(resp)},function(err){$log.debug("got faq error: %o",err)})}return d.promise}}}ConfigFactory.$inject=["$resource","$log","$q"],angular.module("core").factory("AppConfig",ConfigFactory)}(),function(){angular.module("core").service("Menus",[function(){function validateRole(userRoles,validRoles){for(var userRoleIndex in userRoles)if(userRoles.hasOwnProperty(userRoleIndex))for(var roleIndex in validRoles)if(validRoles.hasOwnProperty(roleIndex)){if(validRoles[roleIndex]===userRoles[userRoleIndex])return!0;if("*"===validRoles[roleIndex])return!0}return!1}function validateType(userType,validTypes){for(var typeIndex in validTypes)if(validTypes.hasOwnProperty(typeIndex)){if(validTypes[typeIndex]===userType)return!0;if("*"===validTypes[typeIndex])return!0}return!1}this.defaultRoles=["*"],this.defaultUserTypes=["*"],this.menus={};var shouldRender=function(user){if(user){var roleValid=!!~this.roles.indexOf("*"),typeValid=!!~this.userTypes.indexOf("*");return roleValid||(roleValid=validateRole(user.roles,this.roles)),roleValid&&!typeValid&&(typeValid=validateType(user.type,this.userTypes)),roleValid&&typeValid}return this.isPublic};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,userTypes:options.userTypes||this.defaultUserTypes,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){options=options||{},this.validateMenuExistance(menuId);var menuItemDefault={title:"",state:"",type:"item","class":void 0,isPublic:this.menus[menuId].isPublic,roles:this.menus[menuId].roles,userTypes:this.menus[menuId].userTypes,position:100,items:[],shouldRender:shouldRender},newItem=angular.extend(menuItemDefault,options);if(this.menus[menuId].items.push(newItem),options.items)for(var i in options.items)options.items.hasOwnProperty(i)&&this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);var menuSubItemDefault={title:"",state:"",position:0,shouldRender:shouldRender};for(var itemIndex in this.menus[menuId].items)if(this.menus[menuId].items[itemIndex].state===parentItemState){menuSubItemDefault=angular.extend(menuSubItemDefault,{isPublic:this.menus[menuId].items[itemIndex].isPublic,roles:this.menus[menuId].items[itemIndex].roles,userTypes:this.menus[menuId].items[itemIndex].userTypes});var newSubMenuItem=angular.extend(menuSubItemDefault,options);this.menus[menuId].items[itemIndex].items.push(newSubMenuItem)}return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);var menuItems;for(var itemIndex in menuItems=this.menus[menuId].items)if(menuItems.hasOwnProperty(itemIndex))for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1}),this.addMenu("adminbar",{isPublic:!1,roles:["admin"]})}])}(),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){console.log("[Socket.on] %s: %o",eventName,data),callback(data)})})},this.emit=function(eventName,data){this.socket&&(console.log("[Socket.emit] %s: %o",eventName,data),this.socket.emit(eventName,data))},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"Dashboard",state:"drivers.home",position:1,userTypes:["driver"]}),Menus.addMenuItem("adminbar",{title:"Drivers",state:"drivers",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","drivers",{title:"List Drivers",state:"drivers.list"}),Menus.addSubMenuItem("adminbar","drivers",{title:"New Driver",state:"drivers.create"})}menus.$inject=["Menus","Authentication"],angular.module("drivers").run(menus)}(),function(){function handle404s(err,$q){return 404===err.status?(console.warn("No Driver found ... resolving as null",err),null):(console.error("Hard Error when retrieiving Driver",err),$q.reject(err))}function driverResolve(rsrc,params){if(params.driverId){var val=params.driverId;console.log("Searching for driver ID: %s",val);var drivers=rsrc.ById.get({driverId:val}).$promise;return drivers}return{}}function userResolve(rsrc,params,auth){var val;params.userId?(val=params.userId,console.log("Searching for driver data for user %s",val)):(val=auth.user._id,console.log("Searching for driver data for logged in user: %s",val));var driver=rsrc.ByUser.get({userId:val}).$promise;return driver.catch(handle404s)}function driverListResolve(rsrc){return rsrc.ById.query().$promise}function config($stateProvider){$stateProvider.state("drivers",{"abstract":!0,url:"/drivers",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque"}).state("drivers.list",{url:"",templateUrl:"modules/drivers/views/list-drivers.client.view.html",parent:"drivers",resolve:{drivers:driverListResolve},controller:"DriversListController",controllerAs:"vm",bindToController:!0}).state("drivers.create",{url:"/create",templateUrl:"modules/drivers/views/edit-driver.client.view.html",parent:"drivers",resolve:{driver:userResolve},controller:"DriverEditController",controllerAs:"vm",bindToController:!0}).state("drivers.home",{url:"/home",templateUrl:"modules/drivers/views/view-driver.client.view.html",parent:"drivers",controller:"DriverViewController",controllerAs:"vm",bindToController:!0,resolve:{driver:userResolve},authenticate:!0}).state("drivers.view",{url:"/{driverId:^[0-9a-fA-F]{24}$}",templateUrl:"modules/drivers/views/view-driver.client.view.html",parent:"drivers",resolve:{driver:driverResolve},controller:"DriverViewController",controllerAs:"vm",bindToController:!0}).state("drivers.edit",{url:"/{driverId:^[0-9a-fA-F]{24}$}/edit",templateUrl:"modules/drivers/views/edit-driver.client.view.html",parent:"drivers",resolve:{driver:driverResolve},controller:"DriverEditController",controllerAs:"vm",bindToController:!0})
}driverListResolve.$inject=["Drivers"],driverResolve.$inject=["Drivers","$stateParams"],userResolve.$inject=["Drivers","$stateParams","Authentication"],config.$inject=["$stateProvider"],angular.module("drivers").config(config)}(),function(){function DriverEditController($state,$log,Drivers,Authentication,driver){function activate(){$state.is("drivers.create")&&vm.driver._id&&$state.go("drivers.edit",{driverId:vm.driver._id})}function submit(){return vm.driverForm["vm.experienceForm"]&&vm.driverForm["vm.experienceForm"].$pristine&&(console.log("Experience untouched ..."),vm.driver.experience[0]&&vm.driver.experience[0].isFresh&&(console.log("nuked experience"),vm.driver.experience=[]),vm.driverForm.$setValidity("vm.experienceForm",!0)),vm.driverForm.$invalid?(vm.error="Please correct the errors above",!1):$state.is("drivers.create")?vm.create():$state.is("drivers.edit")?vm.update():void(vm.error="Unknown Configuration, sorry :(")}function create(){if(_.isEmpty(vm.driver.licenses[0]))$log.debug("No license information entered, ignoring ..."),vm.driver.licenses=null;else if(vm.driverForm["vm.licenseForm"].$invalid)return void(vm.error=vm.driverForm["vm.licenseForm"].$error);vm.driver.experience=_.compact(vm.driver.experience);var driver=new Drivers.ById(vm.driver);driver.$save(function(response){$log.debug("Successfully created new Driver"),$state.go("drivers.view",{driverId:response._id})},function(errorResponse){vm.error=errorResponse.data.message})}function cancel(){$state.go("drivers.view",{driverId:vm.driver._id})}function update(){vm.driverForm.$pristine&&$state.go("drivers.home");var driver=vm.driver;driver.$update(function(response){response.user._id===vm.user._id?$state.go("drivers.home"):$state.go("drivers.view",{driverId:response._id})},function(errorResponse){vm.error=errorResponse.data.message})}function dropExperience(exp){if(exp=exp||vm.exp)for(var i in vm.driver.experience)vm.driver.experience[i]===exp&&vm.driver.experience.splice(i,1)}function addExperience(){vm.driver.experience.push({text:"",time:{start:{},end:{}},location:"",isFresh:!0})}var vm=this;vm.submit=submit,vm.update=update,vm.create=create,vm.cancel=cancel,vm.dropExperience=dropExperience,vm.addExperience=addExperience,vm.user=Authentication.user,vm.action=$state.current.name.replace("drivers.",""),vm.driver=driver||{experience:[],licenses:[{}]},activate()}DriverEditController.$inject=["$state","$log","Drivers","Authentication","driver"],angular.module("drivers").controller("DriverEditController",DriverEditController)}(),function(){function DriverViewController($state,$log,$stateParams,Authentication,Profiles,driver){function activate(){vm.driver?(vm.user=vm.driver.user,vm.canEdit=vm.user._id===Authentication.user._id):$stateParams.userId?vm.user=Profiles.get({userId:$stateParams.userId}).$promise.then(function(profile){vm.user=profile,vm.canEdit=$stateParams.userId===vm.user._id}):$state.is("drivers.home")&&(vm.user=Authentication.user,vm.canEdit=!0)}function endorsementFilter(item){return item.value===!0}function endorsementDisplay(item){var i=item.key.indexOf("(");return i>0?item.key.substring(0,i).trim():item.key}var vm=this;$log.info("Loading driverViewController"),vm.driver=driver,vm.user=null,vm.canEdit=!1,vm.auth=Authentication,vm.endorsementFilter=endorsementFilter,vm.endorsementDisplay=endorsementDisplay,activate()}DriverViewController.$inject=["$state","$log","$stateParams","Authentication","Profiles","driver"],angular.module("drivers").controller("DriverViewController",DriverViewController)}(),function(){function DriversListController($log,drivers){var vm=this;vm.drivers=drivers,vm.endorsementFilter=function(item){return item.value===!0},vm.endorsementDisplay=function(item){var i=item.key.indexOf("(");return i>0?item.key.substring(0,i).trim():item.key}}DriversListController.$inject=["$log","drivers"],angular.module("drivers").controller("DriversListController",DriversListController)}(),function(){function DriversController($scope,$state,$stateParams,$location,$http,$window,$log,Authentication){$scope.authentication=Authentication,$scope.canEdit=$state.is("drivers.home")||$stateParams.driverId===Authentication.user.id,$scope.months=[{key:"1",value:"January"},{key:"2",value:"February"},{key:"3",value:"March"},{key:"4",value:"April"},{key:"5",value:"May"},{key:"6",value:"June"},{key:"7",value:"July"},{key:"8",value:"August"},{key:"9",value:"September"},{key:"10",value:"October"},{key:"11",value:"November"},{key:"12",value:"December"}],$scope.init=function(){return $state.is("drivers.view")||$state.is("drivers.home")?($scope.action="Edit",$scope.findOne()):$state.is("drivers.create")?($scope.submit=$scope.create,void($scope.action="New")):($scope.action="Edit",$scope.submit=$scope.update,$scope.findOne())},$scope.remove=function(driver){if(driver){driver.$remove();for(var i in $scope.drivers)$scope.drivers[i]===driver&&$scope.drivers.splice(i,1)}else $scope.driver.$remove(function(){$location.path("drivers")})},$scope.findOne=function(userId){var id=userId||$stateParams.driverId;id&&"home"===id?$scope.canEdit=!0:id&&($scope.canEdit=id===$scope.authentication.user._id)};$scope.endorsementFilter=function(item){return item.value===!0},$scope.endorsementDisplay=function(item){var i=item.key.indexOf("(");return i>0?item.key.substring(0,i).trim():item.key},$scope.switchHelper=function(value){return value&&0!==value.length?!1:!0},$scope.cancel=function(){$log.debug("Canceling! Form is dirty: %o, valid: %o",$scope.driverForm.$dirty,$scope.driverForm.$valid),$window.history.back()}}DriversController.$inject=["$scope","$state","$stateParams","$location","$http","$window","$log","Authentication","Drivers"],angular.module("drivers").controller("DriversController",DriversController)}(),function(){function OsDriverInlineView(){return{priority:0,templateUrl:"/modules/drivers/views/templates/driver-inline.client.template.html",replace:!0,transclude:!0,restrict:"E",scope:{driver:"=model"},controller:function(){},controllerAs:"vm",bindToController:!0}}OsDriverInlineView.$inject=[],angular.module("drivers").directive("osDriverInline",OsDriverInlineView)}(),function(){function OsDriverView(){return{priority:0,templateUrl:"/modules/drivers/views/templates/driver-profile.client.template.html",replace:!0,transclude:!0,restrict:"E",scope:{driver:"=model"},controller:"OsDriverViewController",controllerAs:"vm",bindToController:!0}}var OsDriverViewController=["Authentication",function(Authentication){var vm=this;vm.Authentication=Authentication,vm.canEdit=function(user){return user=user||vm.driver.user,console.log("User %s edits? %s v %s",user.firstName,vm.Authentication.user._id,user._id),vm.Authentication.user._id===user._id},vm.getExperienceString=function(experience){var retval="<strong>"+experience.title+"</strong>";return retval+=" "+vm.getDateRange(experience.time)},vm.getDateRange=function(time){var s,e;return time.start&&(s=moment(time.start))?time.end&&(e=moment(time.end))?s.format("MMMM, YYYY")+" - "+e.format("MMMM, YYYY"):s.format("MMMM, YYYY")+" - present":null}}];OsDriverViewController.$inject=["Authentication"],angular.module("drivers").controller("OsDriverViewController",OsDriverViewController).directive("osDriverView",OsDriverView)}(),function(){function ExperienceDirectiveController(AppConfig){var vm=this;vm.push=vm.addFn&&vm.addFn(),vm.drop=vm.dropFn&&vm.dropFn(),vm.months=vm.months||AppConfig.getMonths(),console.log("Got %d Months",vm.months.length),vm.isEditing=!!vm.editMode||!!vm.model.isFresh,vm.editEnable=void 0===typeof vm.editEnable?!0:!!vm.editEnable,vm.revertValue=angular.copy(vm.model),vm.edit=function(){vm.revertValue=angular.copy(vm.model),vm.isEditing=!0},vm.cancel=function(){vm.model.isFresh?vm.dropFn?vm.dropFn(vm.model):vm.model=null:vm.model=angular.copy(vm.revertValue),vm.isEditing=!1},vm.save=function(action){if(vm.experienceForm.$pristine&&vm.model.isFresh)return vm.dropFn?vm.dropFn(vm.model):vm.model=null,vm.experienceForm.$setValidity("model",!0),vm.experienceForm.$setSubmitted(),!0;if(!vm.experienceForm.$valid)return event.stopPropigation(),vm.error="Please correct the errors above before saving this experience",!1;if(vm.model.isFresh=!1,"add"===action){vm.push()}vm.isEditing=!1},vm.getDateRange=function(time){var s,e;return time.start&&(s=moment(time.start))?time.end&&(e=moment(time.end))?s.format("MMMM, YYYY")+" - "+e.format("MMMM, YYYY"):s.format("MMMM, YYYY")+" - present":null}}function ExperienceDirective(){return{priority:0,templateUrl:"modules/drivers/views/templates/experience.client.template.html",replace:!1,restrict:"E",scope:{model:"=",editMode:"=?",editEnable:"=?",addFn:"&?",dropFn:"&?",isLast:"=?"},controller:ExperienceDirectiveController,controllerAs:"vm",bindToController:!0}}ExperienceDirectiveController.$inject=["AppConfig"],angular.module("drivers").directive("osDriverExperience",ExperienceDirective)}(),function(){function DriverFactory($resource){return{ById:$resource("api/drivers/:driverId",{driverId:"@_id"},{update:{method:"PUT"}}),ByUser:$resource("api/users/:userId/driver",{userId:"@_userId"})}}DriverFactory.$inject=["$resource"],angular.module("drivers").factory("Drivers",DriverFactory)}(),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"Job Postings",state:"jobs.list",userTypes:["driver","owner"],position:10}),Menus.addMenuItem("adminbar",{title:"Jobs",state:"jobs",type:"dropdown",roles:["Admin"]}),Menus.addSubMenuItem("adminbar","jobs",{title:"My Jobs",state:"jobs.mine"}),Menus.addSubMenuItem("adminbar","jobs",{title:"All Jobs",state:"jobs.list"}),Menus.addSubMenuItem("adminbar","jobs",{title:"New Job",state:"jobs.create"})}menus.$inject=["Menus"],angular.module("jobs").run(menus)}(),function(){function handle404s(err,$q){return 404===err.status?null:$q.reject(err)}function companyResolve(rsrc,params,auth){var promise;if(params.companyId){var val=params.companyId;console.log("Searching for company ID: %s",val),promise=rsrc.ById.get({companyId:val}).$promise}else{if(params.jobId)return console.log("Not resolving company - find it in the job"),null;params.userId?(console.log("Searching for company data for user %s",params.userId),promise=rsrc.ByUser.get({userId:params.userId}).$promise):(console.log("Searching for company data for logged in user"),promise=rsrc.ByUser.get({userId:auth.user._id}).$promise)}return promise.catch(handle404s)}function jobResolve(rsrc,params){var val=params.jobId;return console.log("Searching for job ID: %s",val),val?rsrc.ById.get({jobId:val}).$promise.catch(handle404s):null}function listUserResolve(rsrc,params,auth){var promise;if(auth.user&&"owner"===auth.user.type)promise=rsrc.ByUser.query({userId:auth.user._id,companyId:params.companyId}).$promise;else{if(!auth.user)return[];promise=rsrc.ByUser.query({userId:auth.user._id}).$promise}return promise.catch(handle404s)}function listAllResolve(rsrc){return rsrc.ById.query().$promise}function config($stateProvider){$stateProvider.state("jobs",{"abstract":!0,url:"/jobs",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque",resolve:{job:function(){},jobs:function(){},company:function(){}}}).state("jobs.list",{url:"",templateUrl:"modules/jobs/views/list-jobs.client.view.html",controller:"JobsListController",controllerAs:"vm",bindToController:!0,resolve:{jobs:listAllResolve},parent:"jobs"}).state("jobs.mine",{url:"/me",templateUrl:"modules/jobs/views/list-jobs.client.view.html",controller:"JobsListController",controllerAs:"vm",bindToController:!0,resolve:{jobs:listUserResolve,company:companyResolve},parent:"jobs"}).state("jobs.create",{url:"/create/:companyId",templateUrl:"modules/jobs/views/edit-job.client.view.html",controller:"JobEditController",controllerAs:"vm",bindToController:!0,resolve:{company:companyResolve},parent:"jobs"}).state("jobs.view",{url:"/:jobId",templateUrl:"modules/jobs/views/view-job.client.view.html",controller:"JobViewController",controllerAs:"vm",bindToController:!0,resolve:{job:jobResolve},parent:"jobs"}).state("jobs.edit",{url:"/:jobId/edit",templateUrl:"modules/jobs/views/edit-job.client.view.html",controller:"JobEditController",controllerAs:"vm",bindToController:!0,resolve:{job:jobResolve},parent:"jobs"}).state("jobs.apply",{url:"/:jobId/apply",parent:"jobs"})}companyResolve.$inject=["Companies","$stateParams","Authentication"],jobResolve.$inject=["Jobs","$stateParams"],listUserResolve.$inject=["Jobs","$stateParams","Authentication"],listAllResolve.$inject=["Jobs"],config.$inject=["$stateProvider"],angular.module("jobs").config(config)}(),function(){function JobEditController($stateParams,$state,$log,Authentication,Jobs,job,company){function activate(){$state.is("jobs.create")?(vm.pageTitle="Post new job",vm.company||($log.error("[JobEditCtrl] Company must be defined when posting a new job, returning home"),$state.go("home")),vm.job={payRate:{min:null,max:null},location:[defaultAddress],postStatus:"draft",companyId:!!vm.company&&vm.company._id||$stateParams.companyId}):$state.is("jobs.edit")&&(vm.job.location||(vm.job.location=[]),0===vm.job.location.length&&vm.job.location.push(defaultAddress),vm.requirements="<ul><li>"+(vm.job.requirements||[]).join("</li><li>")+"</li></ul>")}function cancel(){$state.go("jobs.view",{jobId:vm.job._id})}function submit(){vm.job.requirements=[];for(var result,i=0;(result=reg.exec(vm.requirements))&&100>i;)$log.debug("Matched requirement #%d: '%o'",++i,result[1]),vm.job.requirements.push(result[1]);return $state.is("jobs.create")?vm.create():$state.is("jobs.edit")?vm.update():($log.warn('Unknown Form Mode: "%s"',vm.mode),void(vm.error="Unknown Form Mode"))}function create(){if(vm.job.companyId=vm.job.companyId||vm.company._id,!vm.job.companyId)return $log.error("Cannot create a job without a company ID!"),void(vm.error="Company is not defined, please try again later");var job=new Jobs.ById(vm.job);job.$save(function(response){$state.go("jobs.view",{jobId:response._id})},function(errorResponse){errorResponse.data.message?vm.error=errorResponse.data.message:(vm.error="Unable to save changes at this time",$log.error("[JobEditCtrl] Error Saving New Job: %o",job,errorResponse))})}function update(){var job=vm.job;job.$update(function(response){$state.go("jobs.view",{jobId:response._id})},function(errorResponse){errorResponse.data.message?vm.error=errorResponse.data.message:(vm.error="Unable to save changes at this time",$log.error("[JobEditCtrl] Error Saving New Job: %o",job,errorResponse))})}var vm=this;vm.authentication=Authentication,vm.user=Authentication.user,vm.cancel=cancel,vm.submit=submit,vm.create=create,vm.update=update,vm.enableEdit=!1,vm.showPreview=!1,vm.job=job,vm.company=company||job&&"object"==typeof job.company&&job.company||void 0;var defaultAddress={type:"main",streetAddresses:[],zipOnly:!0};vm.types=["main","home","business","billing","other"],vm.pageTitle="Edit Job",vm.requirements="<ul><li></li></ul>",activate();var reg=/<li>(.*?)<\/li>/gi}JobEditController.$inject=["$stateParams","$state","$log","Authentication","Jobs","job","company"],angular.module("jobs").controller("JobEditController",JobEditController)}(),function(){function JobViewController($stateParams,$state,$log,Authentication,job){function activate(){"driver"===vm.user.type?vm.enableEdit=!1:"owner"===vm.user.type&&(vm.enableEdit=vm.user._id===(vm.company&&(vm.company.owner._id||vm.company.owner))),$log.debug("[JobViewCtrl.activate] %s enableEdit: %o",vm.user.type,vm.enableEdit)}var vm=this;vm.authentication=Authentication,vm.user=Authentication.user,vm.enableEdit=!1,vm.job=job,vm.company=job&&"object"==typeof job.company&&job.company||void 0,activate(),vm.delist=function(job){job=job||vm.job,job||$log.debug("Cannot delist without a job"),job.delist()},vm.remove=function(job){if(job){job.$remove();for(var i in vm.jobs)vm.jobs[i]===job&&vm.jobs.splice(i,1)}else vm.job.$remove(function(){$state.go("home")})}}JobViewController.$inject=["$stateParams","$state","$log","Authentication","job"],angular.module("jobs").controller("JobViewController",JobViewController)}(),function(){function JobsListController($state,Authentication,jobs,company){function activate(){$state.is("jobs.list")?vm.listTitle="Outset Job Listings":$state.is("jobs.mine")&&(vm.listTitle="driver"===vm.user.type?"My Jobs":"My Job Postings"),"driver"===vm.user.type?vm.enableEdit=!1:"owner"===vm.user.type?vm.enableEdit=vm.user._id===(vm.company&&(vm.company.owner._id||vm.company.owner)):vm.user.isAdmin&&(vm.enableEdit=!0)}var vm=this;vm.authentication=Authentication,vm.user=Authentication.user,vm.enableEdit=!1,vm.jobs=jobs,vm.company=company,activate()}JobsListController.$inject=["$state","Authentication","jobs","company"],angular.module("jobs").controller("JobsListController",JobsListController)}(),function(){function JobListController(Jobs,$log,$state,auth){var dm=this;dm.isEnabled=!1,dm.limitTo=dm.limitTo||10,dm.filter={company:void 0},dm.myJobsOnly=!1,dm.companyId||dm.driverId||dm.srcJobs||($log.warn("[%s] should Specify a company or driver, or set srcJobs pre-load","JobListController"),$state.includes("jobs")&&($log.error("[%s] Routing back to user's home page","JobListController"),$state.go("home"))),dm.companyId&&dm.driverId&&$log.warn("[%s] Both company and driver specified, defaulting to company","JobListController"),dm.jobs=dm.srcJobs&&dm.srcJobs.length>=0?dm.srcJobs:dm.companyId?Jobs.ByCompany.query({companyId:dm.companyId}):dm.driverId?Jobs.ByUser.query({userId:dm.driverId}):[],dm.showMore=function(){dm.limitTo+=10},dm.toggleFilterMine=function(){dm.filter.company=(dm.myJobsOnly=!dm.myJobsOnly)?{owner:auth.user._id}:void 0},dm.searchTermFilter=function(job){if(!dm.searchTerms)return!0;var terms=dm.searchTerms.split(" "),reg=new RegExp("(?="+terms.join(")(?=")+")");return job.searchText=job.searchText||[job.name,job.description,job.requirements].join(" "),reg.test(job.searchText)}}function JobListDirective(){return{templateUrl:"modules/jobs/views/templates/job-list.client.template.html",restrict:"E",replace:!1,scope:{header:"@?",companyId:"@?",driverId:"@?",srcJobs:"=?",showPost:"=?",limitTo:"=?"},controller:JobListController,controllerAs:"dm",bindToController:!0}}JobListController.$inject=["Jobs","$log","$state","Authentication"],angular.module("jobs").directive("osJobList",JobListDirective)}(),function(){function JobItemController(Auth){var dm=this;dm.auth=Auth,dm.displayMode="all",dm.showSection=function(section,only){return only||"all"!==dm.displayMode?dm.displayMode===section:!0},dm.setDisplay=function(section){dm.displayMode=section||"all"}}function JobDirective(){return{scope:{job:"=",inline:"=?",editSref:"@?",showEdit:"=?"},templateUrl:"modules/jobs/views/templates/job.client.template.html",restrict:"E",replace:!0,controller:JobItemController,controllerAs:"dm",bindToController:!0}}JobItemController.$inject=["Authentication"],angular.module("jobs").directive("osJob",JobDirective)}(),function(){function NewApplicationDirective(){var ddo;return ddo={transclude:!0,templateUrl:"modules/jobs/views/templates/os-new-application-modal.client.template.html",restrict:"EA",scope:{job:"=",title:"@?"},controller:"NewApplicationModalController",controllerAs:"vm",bindToController:!0}}function NewApplicationModalController($modal,$log){var vm=this;vm.isOpen=!1,vm.showModal=function(size){var modalInstance=$modal.open({templateUrl:"applyModal.html",controller:"ApplicationCreateController",controllerAs:"vm",size:size||"lg",resolve:{job:function(){return vm.job}}});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.selected=result},function(result){$log.info("Modal result %o",result),$log.info("Modal dismissed at: "+new Date)}),modalInstance.opened.then(function(args){$log.info("Applying to Job Modal Args: %o",args),vm.isOpen=!0})}}function ApplicationCreateController($scope,$modalInstance,$state,$log,Applications,job){function createApplication(){if(!vm.job||!vm.job._id)return void(vm.error=vm.placeholders.errors.noJob);$log.debug("[AppController.create]","Creating new Application");var application=new Applications.ByJob({status:"submitted"});saveApplication(application)}function saveDraft(){$log.debug("[AppController.saveDraft]","Creating new Draft Application");var application=new Applications.ById({status:"draft"});saveApplication(application)}var vm=this;$scope.vm=vm,vm.createApplication=createApplication,vm.saveDraft=saveDraft,vm.job=job,vm.placeholders={intro:"Write a short message explaining why you're a good fit for the position.",errors:{noJob:"You must select a job to apply to first, or you can save as a draft",noMessage:"Please enter a message before submitting your application"},title:"New job application"};var saveApplication=function(application){return!vm.message||vm.message.length<1?void(vm.error=vm.placeholders.errors.noMessage):(application.jobId=vm.job&&vm.job._id&&vm.job._id,application.messages=[{text:vm.message,status:"sent"}],void application.$save(function(response){vm.message="",$modalInstance.close(response._id),$state.go("applications.view",{applicationId:response._id})},function(errorResponse){vm.error=errorResponse.data.message}))}}NewApplicationModalController.$inject=["$modal","$log"],ApplicationCreateController.$inject=["$scope","$modalInstance","$state","$log","Applications","job"],angular.module("jobs").directive("osNewApplicationModal",NewApplicationDirective).controller("NewApplicationModalController",NewApplicationModalController).controller("ApplicationCreateController",ApplicationCreateController)}(),function(){function JobsService($resource){return{ById:$resource("api/jobs/:jobId",{jobId:"@_id"},{update:{method:"PUT"}}),ByUser:$resource("api/users/:userId/jobs",{userId:"@userId"}),ByCompany:$resource("api/companies/:companyId/jobs",{companyId:"@companyId"})}}JobsService.$inject=["$resource"],angular.module("jobs").factory("Jobs",JobsService)}(),function(){function EditLicenseController($scope,$log,appConfig){var vm=this;vm.licenseTypes=["Standard","Commercial"],vm.ratings=["A","B","C","D","G"],vm.endorsements=[{key:"HME",description:"Hazardous Materials",value:!1},{key:"P",description:"Passenger",value:!1},{key:"S",description:"School Bus",value:!1},{key:"T",description:"Double-Triple Trailer",value:!1},{key:"N",description:"Tank Vehicle",value:!1},{key:"M",description:"Motorcycle",value:!1}],_.isEmpty(vm.license)?$log.warn("[EditLicense] Assuming we are creating a new license. Is this OK?"):$log.debug("[EditLicense] Displaying License for editing: %o",vm.license),vm.states=appConfig.getStates(),vm.dateFormat="MM/DD/YYYY",vm.submit=function(){}}function EditLicenseDirective(){var ddo;return ddo={templateUrl:"modules/license/views/license.client.template.html",restrict:"E",scope:{license:"=?model",user:"=?"},controller:"EditLicenseController",controllerAs:"vm",bindToController:!0}}EditLicenseController.$inject=["$scope","$log","AppConfig"],angular.module("license").controller("EditLicenseController",EditLicenseController).directive("osEditLicense",EditLicenseDirective)}(),function(){function gmapApiProvider(){{var config={key:"AIzaSyDb2fSf75lhB2A0lBXeZ_89iXDhO-pmLoY",v:"3.18",libraries:"weather,geometry,visualization"},configs=["v"+config.v,"key="+config.key,"libraries="+config.libraries];gmapsApiBase+configs.join("&")}}var gmapsApiBase="//maps.googleapis.com/maps/api/js?";angular.module("location").config(gmapApiProvider)}(),function(){function LocationController($scope,$log){function getSearchString(){var str="";return vm.showCircle=!0,vm.radiusMod=1,str+=vm.address&&vm.address.city?(str?", ":"")+vm.address.city:"",str+=vm.address&&vm.address.state?(str?", ":"")+vm.address.state:"",str.trim()?vm.radiusMod=1:vm.address&&vm.address.zipCode?(str=vm.address.zipCode,vm.radiusMod=3):vm.zipCode?(str=vm.zipCode,vm.radiusMod=3):(str="United States",vm.showCircle=!1),$log.debug("new search : %s",str),str.trim()}function processChange(newVal,oldVal){if(newVal!==oldVal){var search=getSearchString();vm.search!==search&&(vm.search=search,vm.range&&vm.range.setMap(null),vm.geoCode())}}var vm=this;vm.search="United States",vm.range=null,vm.showCircle=!0,vm.radiusMod=1,!vm.address&&vm.addresses&&vm.addresses.length&&(vm.address=vm.addresses[0]),vm.geoCode=function(){vm.search&&vm.search.length>0&&(vm.geocoder||(vm.geocoder=new vm.gmaps.Geocoder),vm.geocoder.geocode({address:vm.search},function(results,status){if(status===vm.gmaps.GeocoderStatus.OK){$log.info("[LocationCtrl] OK - %d results. First location: %o",results.length,results[0]);var result=results[0],loc=result.geometry.location;vm.search=result.formatted_address,vm.gotoLocation(loc,result.geometry.viewport)}else alert("Sorry, this search produced no results.")}))},vm.gotoLocation=function(center,viewport){vm.map.setCenter(center);var r;viewport&&(vm.map.fitBounds(viewport),r=vm.radiusMod*Math.max(google.maps.geometry.spherical.computeDistanceBetween(viewport.getSouthWest(),viewport.getCenter()),google.maps.geometry.spherical.computeDistanceBetween(viewport.getNorthEast(),viewport.getCenter()))),r&&vm.showCircle&&(vm.range=new google.maps.Circle({strokeColor:"#0000FF",strokeOpacity:.5,strokeWeight:2,fillColor:"#0000FF",fillOpacity:.25,center:viewport.getCenter(),map:vm.map,radius:r}))},$scope.$on("mapInitialized",function(event,map){vm.map=map,vm.gmaps=$scope.google.maps,vm.search=getSearchString(),vm.geoCode()}),$scope.$watch("vm.address",processChange),$scope.$watch("vm.address.zipCode",processChange),$scope.$watch("vm.address.city",processChange),$scope.$watch("vm.address.state",processChange),$scope.$watch("vm.zipCode",processChange)}LocationController.$inject=["$scope","$log"],angular.module("location").controller("LocationController",LocationController)}(),function(){function LocationDirective(){return{priority:0,template:'<map disable-default-u-i="true" scrollwheel="false" draggable="false" zoom-control="true"></map>',replace:!1,transclude:!1,restrict:"E",scope:{address:"=?",addresses:"=?",center:"@?",style:"@?",zipCode:"=?"},controller:"LocationController",controllerAs:"vm",bindToController:!0}}angular.module("location").directive("osMapLocation",LocationDirective)}(),function(){function ScheduleViewController(){}angular.module("schedule").controller("ScheduleViewController",ScheduleViewController)}(),function(){function ScheduleViewDirective(){return{templateUrl:"modules/schedule/views/view-schedule.client.view.html",restrict:"E",scope:{model:"=",title:"@?"},controller:"ScheduleViewController",controllerAs:"vm",bindToController:!0}}angular.module("schedule").directive("osViewSchedule",ScheduleViewDirective)}(),function(){function config($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}function menus(Menus){Menus.addMenuItem("adminbar",{title:"Users",state:"users",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","users",{title:"List Users",state:"users.list"}),Menus.addSubMenuItem("adminbar","users",{title:"My User",state:"users.view"})}config.$inject=["$httpProvider"],menus.$inject=["Menus"],angular.module("users",["core"]).config(config).run(menus)}(),function(){angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html",parent:"fixed-opaque"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("users",{"abstract":!0,url:"/users",template:'<div ui-view class="content-section"></div>',parent:"full-opaque"}).state("users.list",{url:"",templateUrl:"modules/users/views/list-users.client.view.html",parent:"users"}).state("users.view",{url:"/:userId",templateUrl:"modules/users/views/settings/profile.client.view.html",controller:"ProfileController",parent:"users"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>",parent:"fixed-opaque"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}])}(),function(){function AuthenticationController($scope,$http,$state,$location,$modalInstance,$log,Authentication){$scope.authentication=Authentication;var redirect=function(userType){switch($modalInstance.close(userType),userType){case"driver":$log.debug("[HomeController] Re-Routing to driver's profile page"),$state.go("drivers.home");break;case"owner":$log.debug("[HomeController] Re-Routing to the user's companies"),$state.go("companies.home");break;default:if($scope.authentication.isAdmin()){$state.go("users.list");break}}};$scope.authentication.user?redirect($scope.authentication.user.type):$state.go("intro"),$scope.init=function(){-1!==$location.$$path.indexOf("driver")?$scope.signupType="driver":-1!==$location.$$path.indexOf("owner")?$scope.signupType="owner":$scope.typeNeeded=!0},$scope.signup=function(){var credentials=$scope.credentials||this.credentials;credentials.type=$scope.signupType||this.signupType,$log.debug("[Auth.Ctrl.signup] signing up with credentials: ",$scope.credentials),$http.post("/api/auth/signup",credentials).success(function(response){$scope.authentication.user=response,$log.debug("Successfully created %o USER Profile",response.type),redirect(response.type)}).error(function(response){console.error(response.message),$scope.error=response.message})},$scope.signin=function(){var credentials=$scope.credentials||this.credentials;$http.post("/api/auth/signin",credentials).success(function(response){$scope.authentication.user=response,redirect(response.type)}).error(function(response){$scope.error=response.message})}}AuthenticationController.$inject=["$scope","$http","$state","$location","$modalInstance","$log","Authentication"],angular.module("users").controller("AuthenticationController",AuthenticationController)}(),function(){angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$state","Authentication","$timeout",function($scope,$stateParams,$http,$state,Authentication,$timeout){$scope.authentication=Authentication,$scope.authentication.user&&$state.go("home"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){function updateMsg(ct){return ct--,$scope.msg=" in "+ct,ct>0?$timeout(function(){updateMsg(ct)},1e3):void $state.go("intro")}$scope.credentials=null,$scope.ct=5,$scope.success=response.message,$scope.msg=" in "+$scope.ct,updateMsg($scope.ct)}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$state.go("password.reset.success")
}).error(function(response){console.log("hmmm, that was'nt suppoased to happen: ",response),$scope.error=response.message})}}])}(),function(){function ProfileController($scope,$state,$stateParams,$location,$log,Profiles,Authentication){this.header="User Profile",this.init=function(){if($stateParams.userId){this.user=Profiles.get({userId:$stateParams.userId});var promise=this.user.$promise;promise.then(this.setProfile,function(err){$log.debug("Error retrieving profile",err)})}else this.user=Authentication.user,this.header=this.user.displayName+" <small>(you)</small>",this.showEditLink=!0},this.setProfile=function(profile){$scope.profile=profile,$scope.header=profile.displayName,$scope.showEditLink=profile._id===Authentication.user._id},this.initList=function(){Authentication.isAdmin()?this.users=Profiles.query():$location.path("/")}}ProfileController.$inject=["$scope","$state","$stateParams","$location","$log","Profiles","Authentication"],angular.module("users").controller("ProfileController",ProfileController)}(),function(){angular.module("users").controller("ChangePasswordController",["$scope","$http","Users","Authentication","$state","$timeout",function($scope,$http,Users,Authentication,$state,$timeout){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null,$timeout(function(){$state.go("home",{delay:5})},5e3)}).error(function(response){$scope.error=response.message})}}])}(),function(){function ProfilePictureController($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.successFunction(fileItem,response,status,headers)},$scope.successFunction=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}ProfilePictureController.$inject=["$scope","$timeout","$window","Authentication","FileUploader"],angular.module("users").controller("ChangeProfilePictureController",ProfilePictureController)}(),function(){function EditProfileController($http,$location,$log,Users,Authentication){var vm=this;vm.profile||$log.warn("[EditProfileController] No profile passed to osEditProfile Directive"),vm.profile=vm.profile||Authentication.user,$log.info("[EditProfileController] Profile %o",vm.profile),vm.updateUserProfile=function(isValid){if(isValid){vm.success=vm.error=null;var user=new Users(vm.profile);user.$update(function(response){vm.success=!0,vm.profile=Authentication.user=response,vm.userForm.$setPristine()},function(response){vm.error=response.data.message})}else vm.error=vm.userForm.$error()},vm.cancel=function(){alert("Cancel not yet implemented")}}EditProfileController.$inject=["$http","$location","$log","Users","Authentication"],angular.module("users").controller("EditProfileController",EditProfileController)}(),function(){angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication","$state",function($scope,$http,$location,Users,Authentication,$state){$state.go("settings.profile"),$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}])}(),function(){function SettingsController($stateParams,$location,$log,Authentication){this.user=Authentication.user,this.user||$location.path("/"),$stateParams.userId&&($stateParams.userId===this.user._id||this.user.isAdmin||($log.warn("[SettingsController] Non-Admin tried to access another user's settings"),$location.path("/")))}SettingsController.$inject=["$stateParams","$location","$log","Authentication"],angular.module("users").controller("SettingsController",SettingsController)}(),function(){function SigninModalDirective(){return{transclude:!0,templateUrl:"modules/users/views/templates/login-modal.client.template.html",restrict:"EA",scope:{signin:"&",title:"@?"},controller:"LoginModalController"}}function SigninModalController($scope,$modal,$log){$scope.isOpen=!1,$scope.showLogin=function(){var modalInstance=$modal.open({templateUrl:"loginModal.html",controller:"AuthenticationController"});modalInstance.result.then(function(result){$log.info("Modal result %o",result),$scope.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),$scope.isOpen=!1}),modalInstance.opened.then(function(){$scope.isOpen=!0})}}SigninModalController.$inject=["$scope","$modal","$log"],angular.module("users").directive("loginModal",SigninModalDirective).controller("LoginModalController",SigninModalController)}(),function(){angular.module("users").directive("osEditProfile",[function(){return{scope:{profile:"=",editFn:"&",cancelFn:"&",updateFn:"&"},templateUrl:"modules/users/views/templates/edit-settings.client.template.html",restrict:"E",replace:!0,controller:"EditProfileController",controllerAs:"vm",bindToController:!0}}])}(),function(){angular.module("users").directive("osProfile",[function(){return{scope:{profile:"=",title:"@?",editable:"=?",editFn:"&?"},templateUrl:"modules/users/views/templates/user-profile.client.template.html",restrict:"E",replace:!0,controller:"OsProfileController",controllerAs:"ctrl",bindToController:!0}}]).controller("OsProfileController",["$log",function(){this.edit=this.editFn}]).directive("osProfileBadge",[function(){return{scope:{profile:"="},templateUrl:"modules/users/views/templates/user-badge.client.template.html",restrict:"E",replace:!0}}])}(),function(){function PhotoModalDirective(){return{transclude:!0,replace:!0,templateUrl:"modules/users/views/settings/picture-modal.client.template.html",restrict:"EA",scope:{title:"@?"},controller:"PhotoModalController"}}function PhotoModalController($scope,$modal,$log){$scope.isOpen=!1,$scope.show=function(){var modalInstance=$modal.open({templateUrl:"uploadPictureModal.html",controller:function(){}});modalInstance.result.then(function(result){$log.info("Modal result %o",result),$scope.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),$scope.isOpen=!1}),modalInstance.opened.then(function(){$scope.isOpen=!0})}}function PictureUploadDirective(){var ddo={restrict:"E",templateUrl:"/modules/users/views/settings/picture-upload.client.template.html",scope:{model:"=",title:"@",mode:"@?",apiUrl:"@?",successCallback:"&?",failCallback:"&?"},controller:"PictureUploadController",controllerAs:"vm",bindToController:!0};return ddo}function PictureUploadController($timeout,$window,FileUploader,$log){function activate(){if(!vm.model)return $log.error("[PictureUploader] Must specify a model"),void(vm.initialized=!1);if(!vm.mode&&!vm.apiUrl)return void(vm.initialized=!1);if(vm.mode)switch(vm.mode.toLowerCase()){case"user":vm.uploadUrl="api/users/picture";break;case"company":vm.uploadUrl="api/companies/"+vm.model._id+"/picture";break;default:return $log.warn("[PictureUploader] Unknown Mode: %s",vm.mode),void(vm.initialized=!1)}else vm.apiUrl&&($log.debug("[PictureUploader] Mode not specified, using URL: %s",vm.apiUrl),vm.uploadUrl=vm.apiUrl);vm.uploader=new FileUploader({url:vm.uploadUrl}),vm.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),vm.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){vm.imageURL=fileReaderEvent.target.result},0)}}},vm.uploader.onSuccessItem=function(fileItem,response,status,headers){vm.success=!0,vm.successCallback()&&vm.successCallback()(fileItem,response,status,headers),vm.cancelUpload()},vm.uploader.onErrorItem=function(fileItem,response){vm.cancelUpload(),vm.error=response.message},vm.initialized=!0,$log.debug("[PictureUploader] Successfuly initialized Picture Uploader")}function uploadProfilePicture(){vm.success=vm.error=null,vm.uploader.uploadAll()}function cancelUpload(){vm.uploader.clearQueue(),vm.imageURL=vm.model.profileImageURL}var vm=this;vm.uploader=null,vm.uploadUrl="api/users/picture",vm.imageURL=vm.model.profileImageURL,vm.uploadProfilePicture=uploadProfilePicture,vm.cancelUpload=cancelUpload,activate()}PhotoModalController.$inject=["$scope","$modal","$log"],PictureUploadController.$inject=["$timeout","$window","FileUploader","$log"],angular.module("users").directive("osPhotoModal",PhotoModalDirective).controller("PhotoModalController",PhotoModalController).directive("osPictureUploader",PictureUploadDirective).controller("PictureUploadController",PictureUploadController)}(),function(){function SignupModalDirective(){return{transclude:!0,templateUrl:"modules/users/views/templates/signup-modal.client.template.html",restrict:"EA",scope:{signin:"&",title:"@?",signupType:"@?"},controller:"SignupModalController",controllerAs:"vm",bindToController:!0}}function SignupModalController($modal,$log){var vm=this;vm.isOpen=!1,vm.showSignup=function(){var modalInstance=$modal.open({templateUrl:"signupModal.html",controller:"SignupController",size:"lg",resolve:{signupType:function(){return vm.signupType}},controllerAs:"vm"});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})}}function SignupController($http,$state,$modalInstance,$log,Authentication,signupType,$scope){var vm=$scope.vm=this;vm.auth=Authentication,vm.credentials={signupType:signupType,terms:""},vm.hello="HELLO",vm.signup=function(){$log.debug("assigning email to username"),vm.credentials.username=vm.credentials.email,vm.credentials.type=vm.credentials.signupType,$http.post("/api/auth/signup",vm.credentials).success(function(response){vm.auth.user=response,$log.debug("Successfully created %o USER Profile",response.type),$modalInstance.close(response.type),$state.go("home")}).error(function(response){console.error(response.message),vm.error=response.message})}}SignupController.$inject=["$http","$state","$modalInstance","$log","Authentication","signupType","$scope"],SignupModalController.$inject=["$modal","$log"],angular.module("users").directive("signupModal",SignupModalDirective).controller("SignupModalController",SignupModalController).controller("SignupController",SignupController)}(),function(){function AuthenticationService(){function isLoggedIn(){return!!_this._data.user}function isAdmin(){var user=_this._data.user;return!!user&&-1!==user.roles.indexOf("admin")}var _this=this;return _this._data={user:window.user,isLoggedIn:isLoggedIn,isAdmin:isAdmin},_this._data}angular.module("users").factory("Authentication",AuthenticationService)}(),function(){function UsersService($resource){return $resource("api/users",{},{update:{method:"PUT"}})}function ProfilesService($resource){return $resource("api/profiles/:userId",{userId:"@_userId"},{})}UsersService.$inject=["$resource"],ProfilesService.$inject=["$resource"],angular.module("users").factory("Users",UsersService).factory("Profiles",ProfilesService)}();