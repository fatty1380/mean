"use strict";function fitVidsDirective(){if(!document.getElementById("fit-vids-style")){var div=document.createElement("div"),ref=document.getElementsByTagName("base")[0]||document.getElementsByTagName("script")[0],cssStyles="&shy;<style>.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style>";div.className="fit-vids-style",div.id="fit-vids-style",div.style.display="none",div.innerHTML=cssStyles,ref.parentNode.insertBefore(div,ref)}return{restrict:"A",link:function(scope,element,attr){var videos,selectors=['iframe[src*="player.vimeo.com"]','iframe[src*="youtube.com"]','iframe[src*="youtube-nocookie.com"]','iframe[src*="kickstarter.com"][src*="video.html"]',"object","embed"];attr.customSelector&&selectors.push(attr.customSelector),videos=element[0].querySelectorAll(selectors.join(",")),angular.forEach(videos,function(item){var height,width,aspectRatio,$item=angular.element(item);if(!("embed"===item.tagName.toLowerCase()&&"object"===$item.parent().tagName&&$item.parent().length||$item.parent().hasClass(".fluid-width-video-wrapper"))){if(height="object"===item.tagName.toLowerCase()||$item.attr("height")?parseInt($item.attr("height"),10):$item.height(),width=isNaN(parseInt($item.attr("width"),10))?$item.width():parseInt($item.attr("width"),10),aspectRatio=height/width,!$item.attr("id")){var videoID="fitvid"+Math.floor(999999*Math.random());$item.attr("id",videoID)}$item.wrap('<div class="fluid-width-video-wrapper" />').parent().css("padding-top",100*aspectRatio+"%"),$item.removeAttr("height").removeAttr("width")}})}}}var ApplicationConfiguration=function(){var applicationModuleName="outset",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","textAngular","ngMap","pdf","ngImgCrop","duScroll","angularMoment"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]).config(["$logProvider",function($logProvider){$logProvider.debugEnabled(!0)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("addresses"),ApplicationConfiguration.registerModule("applications"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("bgchecks"),ApplicationConfiguration.registerModule("chat"),ApplicationConfiguration.registerModule("companies"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("drivers"),ApplicationConfiguration.registerModule("jobs"),function(){ApplicationConfiguration.registerModule("license")}(),ApplicationConfiguration.registerModule("location"),function(){ApplicationConfiguration.registerModule("payments")}(),ApplicationConfiguration.registerModule("schedule"),ApplicationConfiguration.registerModule("users"),function(){angular.module("addresses").config(["$stateProvider",function(){}])}(),function(){function AddressListDirective(){return{templateUrl:"modules/addresses/views/address-list.client.template.html",restrict:"E",scope:{addresses:"=?models",isEditing:"=?",canEdit:"=?",maxCount:"=?",required:"=?",fullWidth:"=?",inlineEdit:"=?"},controller:"OsAddressListController",controllerAs:"vm",bindToController:!0}}function AddressListEditDirective(){return{templateUrl:"modules/addresses/views/address-list-edit.client.template.html",restrict:"E",scope:{addresses:"=?models",isEditing:"=?",canEdit:"=?",maxCount:"=?",required:"=?",fullWidth:"=?",inlineEdit:"=?"},controller:"OsAddressListController",controllerAs:"vm",bindToController:!0}}function AddressListController(){function activate(){!vm.required||vm.addresses&&0!==vm.addresses.length||pushStub(),updateFunctionality()}function updateFunctionality(){vm.canAdd=addEnabled(),vm.canRemove=removeEnabled()}function addEnabled(){return vm.canEdit?!vm.addresses||vm.addresses.length<vm.maxCount:!1}function removeEnabled(){return!vm.canEdit||vm.required&&1===vm.addresses.length?!1:!0}function addAddress(){event.preventDefault(),pushStub()}function removeAddress(address){if(address)for(var i in vm.addresses)vm.addresses[i]===address&&vm.addresses.splice(i,1)}function pushStub(){vm.addresses||(vm.addresses=[]),vm.addresses.push(angular.copy(vm.addressStub))}var vm=this;vm.updateFunctionality=updateFunctionality,vm.addAddress=addAddress,vm.removeAddress=removeAddress,vm.canRemove=removeEnabled,vm.canAdd=addEnabled,vm.isEditing="boolean"==typeof vm.isEditing?vm.isEditing:!!vm.isEditing,vm.canEdit="boolean"==typeof vm.canEdit?vm.canEdit:!!~vm.canEdit,vm.maxCount=vm.maxCount||10,vm.required=vm.canEdit&&("boolean"==typeof vm.required?vm.required:!!~vm.required),vm.fullWidth="boolean"==typeof vm.fullWidth?vm.fullWidth:!!vm.fullWidth,vm.inlineEdit="boolean"==typeof vm.inlineEdit?vm.inlineEdit:!!vm.inlineEdit,vm.canAdd=vm.canRemove=vm.canEdit,vm.addressStub={streetAddresses:["",""]},activate()}angular.module("addresses").directive("osAddressList",AddressListDirective).directive("osEditAddressList",AddressListEditDirective).controller("OsAddressListController",AddressListController)}(),function(){function AddressItemDirective(){return{templateUrl:"modules/addresses/views/address.client.template.html",restrict:"E",scope:{address:"=model",isEditing:"=?",canEdit:"=?",canRemove:"&?",remove:"&?"},controller:"OsAddressItemController",controllerAs:"vm",bindToController:!0}}function AddressItemController($modal){function activate(){vm.address&&(vm.typeVal="other"===vm.address.type?vm.address.typeOther||vm.address.type:vm.address.type)}var vm=this;vm.canEdit=!!this.canEdit,vm.canRemove=vm.canRemove||function(){return vm.canEdit},vm.isOpen=!1,vm.getAddressType=function(){return"other"===vm.address.type?vm.address.typeOther:vm.address.type||"address"},vm.editAddress=function(){var modalInstance=$modal.open({templateUrl:"addressEditModal.html",controllerAs:"vm",controller:["$scope","address","text",function($scope,address,text){var vm=this;vm.address=address,vm.text=text,$scope.vm=vm}],resolve:{address:function(){return vm.address},text:function(){return{submit:"Save"}}}});modalInstance.result.then(function(result){console.log("Modal result %o",result),vm.isOpen=!1},function(){console.log("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})},vm.removeAddress=function(){vm.remove?vm.remove(vm.address):vm.address=null},activate()}AddressItemController.$inject=["$modal"],angular.module("addresses").directive("osAddress",AddressItemDirective).controller("OsAddressItemController",AddressItemController)}(),function(){function EditAddressDirective(){return{templateUrl:"modules/addresses/views/edit-address.client.template.html",restrict:"E",scope:{address:"=model",canRemove:"&?"},controller:"OsEditAddressController",controllerAs:"vm",bindToController:!0}}function EditAddressController($log){var vm=this;if(vm.canRemove=!!this.canRemove&&this.canRemove()||function(){return!0},vm.types=["main","home","business","billing"],vm.ddlStatus={isopen:!1},vm.address)for(vm.address.streetAddresses||(vm.address.streetAddresses=[]);vm.address.streetAddresses.length<2;)vm.address.streetAddresses.push("");vm.setType=function(newType,$event){$log.log("type set to: ",newType),vm.address.type=newType,vm.toggleDropdown($event)},vm.toggleDropdown=function($event){$log.log("toggling dropdown from %o to %o via event %o",vm.ddlStatus.isopen,!vm.ddlStatus.isopen,$event),$event.preventDefault(),$event.stopPropagation(),vm.ddlStatus.isopen=!vm.ddlStatus.isopen},vm.toggled=function(open){$log.log("Dropdown is now: ",open)}}EditAddressController.$inject=["$log"],angular.module("addresses").directive("osEditAddress",EditAddressDirective).controller("OsEditAddressController",EditAddressController)}(),function(){angular.module("addresses").factory("Addresses",["$resource",function($resource){return $resource("api/addresses/:addressId",{addressId:"@_id"},{update:{method:"PUT"},get:{cache:!0,method:"GET"}})}])}(),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"Applicants",state:"applications.list",userTypes:["owner"],position:20}),Menus.addMenuItem("topbar",{title:"My Applications",state:"applications.list",userTypes:["driver"],position:20}),Menus.addMenuItem("adminbar",{title:"Applications",state:"applications",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","applications",{title:"All Applications",state:"applications.list"}),Menus.addSubMenuItem("adminbar","applications",{title:"New Application",state:"applications.create"}),Menus.addSubMenuItem("adminbar","applications",{title:"My Applications",state:"applications.list"})}menus.$inject=["Menus"],angular.module("applications").run(menus)}(),function(){function handle404s(err){return 404===err.status?null:err}function moduleConfigResolve(AppConfig,auth){return AppConfig.getModuleConfig(auth.user.type,"applications")}function myApplications(auth,apps){var applications,query={userId:auth.user._id};return"owner"===auth.user.type?(query.companyId=auth.user.company||auth.user.company._id,applications=apps.listByCompany(query)):applications=apps.listByUser(query),applications.catch(function(err){return 404===err.status?[]:err})}function myJobsWithApplications(auth,jobs){var query={userId:auth.user,companyId:auth.user.company};return jobs.listByCompany(query).catch(function(err){return 404===err.status?[]:err})}function resolveApplications(auth,jobs,apps){return"driver"===auth.user.type?myApplications(auth,apps):"owner"===auth.user.type?myJobsWithApplications(auth,jobs):void 0}function config($stateProvider){$stateProvider.state("applications",{"abstract":!0,url:"/applications",template:'<div ui-view class="content-section something"></div>',parent:"fixed-opaque",params:{companyId:{"default":null},userId:{"default":null}},resolve:{config:moduleConfigResolve}}).state("applications.list",{url:"?itemId&tabName",templateUrl:"modules/applications/views/list-applications.client.view.html",resolve:{applications:resolveApplications},controller:"ApplicationListController",controllerAs:"vm",bindToController:!0}).state("applications.reject",{url:"/reject",resolve:{application:["$stateParams","Applications",function(){}]}}).state("applications.create",{url:"/create",templateUrl:"modules/applications/views/create-application.client.view.html"}).state("applications.view",{url:"/:applicationId",templateUrl:"modules/applications/views/view-application.client.view.html",resolve:{application:["$stateParams","Applications",function($stateParams,Applications){var query={applicationId:$stateParams.applicationId,action:"view"};return Applications.getApplication(query).catch(handle404s)}]},controller:"ApplicationMainController",controllerAs:"vm",bindToController:!0}).state("applications.edit",{url:"/:applicationId/edit",templateUrl:"modules/applications/views/edit-application.client.view.html"})}myJobsWithApplications.$inject=["Authentication","Jobs"],myApplications.$inject=["Authentication","Applications"],resolveApplications.$inject=["Authentication","Jobs","Applications"],moduleConfigResolve.$inject=["AppConfig","Authentication"],config.$inject=["$stateProvider"],angular.module("applications").config(config)}(),function(){function ApplicationListController(auth,moduleConfig,applications){var vm=this;if(vm.applications=applications,vm.config=moduleConfig||{},vm.subtitle=vm.applications&&vm.applications.length?vm.applications.length+" Job Applicants":"No Active Posts",vm.enableEdt=!!vm.config.edit,vm.user=auth.user,vm.enableHeaderEdit="owner"===vm.user.type&&vm.config.enableEdit,"driver"===auth.user.type)vm.bodyCopy={heading:"Your job search, all in one place!, <em>Coming Soon!</em>",intro:"<p>Once we have opened the site to employers, your entire job search will be available here.</p><p>Until then, take the time to build your profile and get your reports ready.</p>",bullets:["The more information you provide, the better your chances","Applicants who have reports in their profile are <u>8x more likely</u> to be hired!","You always have total control over who sees your information"],wrap:"<p>So put your best foot forward, and we’ll let you know when its time to apply!</p>",homeTxt:"Back to your Profile Page"},vm.subtitle=(vm.applications&&vm.applications.length||"No")+" Active Applications";else if("owner"===auth.user.type){if(vm.bodyCopy={heading:"Your Applicant Tracking System, all in one place!",intro:"<p>Once prospective employees have applied to your jobs, this will be the center of your applicant tracking.</p>",bullets:[],wrap:"<p>So post your jobs, optimize their appearance and details, and come back here once the applications start coming in!</p>",homeTxt:"Return to your Company Dashboard"},vm.jobs=vm.applications,vm.jobs){var applicationCount=_.reduce(vm.jobs,function(sum,job){return sum+(job.applications?job.applications.length:0)},0);vm.jobs.length>0&&(vm.subtitle=vm.jobs.length+" Active Job"+(vm.jobs.length>1?"s":"")),vm.subtitle=applicationCount>0?vm.subtitle+" <small>"+applicationCount+" Applications</small>":vm.subtitle+" <small>no applications</small>"}}else vm.bodyCopy={}}ApplicationListController.$inject=["Authentication","config","applications"],angular.module("applications").controller("ApplicationListController",ApplicationListController)}(),function(){function ApplicationMainController(application,auth,$state,$log,$scope,Socket,Applications,$location,$anchorScroll){var vm=this;vm.application=application,vm.messageMode="multiline",vm.isopen=!1,vm.myId=auth.user._id,vm.user=auth.user,vm.room=vm.application._id,vm.text={},vm.activeConnection=!1,vm.status={me:null,them:null},vm.rawMessages=JSON.stringify(application.messages,void 0,2),vm.application.update=function(){var application=vm.application.application;application.$update(function(){},processError)};var activate=function(){vm.application.connection&&vm.application.connection.isValid?(vm.activeConnection=!0,$log.debug("creating socket for connection"),vm.initSocket()):$log.debug("No connection, or invalid connection - not creating socket."),vm.text.noconnection="driver"===vm.user.type?"The employer has not yet connected with you. Once they have, they will have access to your full profile and will be able to chat with you right here.":"In order to view reports and chat with this applicant, you must first <em>Connect</em> with them using the button below. This will count against your monthly allotment of connections."},processError=function(errorResponse){switch(errorResponse.status){case 403:vm.error="Sorry, you cannot make changes to this application",$state.go("home");break;default:vm.error=errorResponse.data.message}};vm.scrollToMessages=function(){$location.hash("messaging"),$anchorScroll(),vm.msgFocus=!0},vm.createConnection=function(){vm.connecting=!0,vm.application.connection&&$log.debug("Existing Connection: %o",vm.application.connection),Applications.createConnection(vm.application).then(function(newConnection){return $log.debug("Created new connection! %o",newConnection),vm.application.connection=newConnection,vm.newlyConnected=!0,vm.initSocket(),newConnection},function(err){return $log.debug("New connection failed: %o",err),err}).then(function(){vm.connecting=!1})},vm.postMessage=function(){if(vm.sending=!0,Socket){var message={scope:"applications",text:vm.message};$log.debug("[AppCtrl.PostMessage] Emitting Message"),Socket.emit("chatMessage",message),vm.message="",vm.sending=!1}else vm.application.messages.push({text:vm.message,status:"sent",sender:auth.user}),application.$update(function(){vm.message="",vm.sending=!1},processError)},vm.initSocket=function(){Socket?($log.debug("[AppCtrl] socket exists. Adding `connect` handler"),Socket.on("connect",function(){$log.info("[AppCtrl] Connecting to chat room: %s",vm.room),Socket.emit("join-room",vm.room)}),$log.debug("[AppCtrl] socket exists. Adding `chatMessage` handler"),Socket.on("chatMessage",function(message){$log.debug("[AppCtrl] Incoming message: %o",message),"status"===message.type?message.sender.id===vm.user.id?($log.debug("I connected"),vm.status.me=!0):"is now connected"===message.text.toLowerCase()&&(vm.status.them=!0):vm.application.messages.push(message)}),$log.debug("[AppCtrl] socket exists. Adding `$destroy` handler"),$scope.$on("$destroy",function(){Socket.removeListener("chatMessage").leave(vm.room)})):$log.warn("Socket is undefined in this context")},activate()}ApplicationMainController.$inject=["application","Authentication","$state","$log","$scope","Socket","Applications","$location","$anchorScroll"],angular.module("applications").controller("ApplicationMainController",ApplicationMainController)}(),function(){function ListApplicationsDirective(){var ddo;return ddo={templateUrl:"modules/applications/views/templates/os-list-applications.client.template.html",restrict:"E",scope:{displayMode:"@?",job:"=?",company:"=?",user:"=?",applications:"=?",config:"=?"},controller:"JobApplicationListController",controllerAs:"vm",bindToController:!0}}function JobApplicationListController(Applications,Authentication,$log,$state,params){function activate(){if(vm.applications&&vm.applications.length){var first=vm.applications[0];first.hasOwnProperty("job")?$log.debug("Looking at a list of applications"):first.hasOwnProperty("applications")&&($log.debug("Looking at a list of jobs :)"),vm.jobs=vm.applications)}vm.visibleId&&(vm.jobs&&!_.find(vm.jobs,{_id:vm.visibleId})?(vm.visibleId=vm.visibleTab=null,$state.transitionTo("applications.list",{itemId:vm.visibleId,tabName:vm.visibleTab})):vm.jobs||_.find(vm.applications,{_id:vm.visibleId})||(vm.visibleId=vm.visibleTab=null,$state.transitionTo("applications.list",{itemId:vm.visibleId,tabName:vm.visibleTab})))}var vm=this;vm.visibleId=params.itemId,vm.visibleTab=params.tabName,vm.ApplicationFactory=Applications,vm.displayMode=vm.displayMode||"normal",vm.company=vm.company||vm.job&&vm.job.company,vm.user=vm.user||Authentication.user,vm.config=vm.config||{},vm.noItemsText="No job applications yet",vm.setApplicationStatus=function(application,status,$event,state){$event.stopPropagation();var app=vm.ApplicationFactory.setStatus(application._id,status);app.then(function(success){$log.debug("[setApplicationStatus] %s",success),application=success},function(reject){$log.warn("[setApplicationStatus] %s",reject)}),state.application.status=status,state.application.isNew=state.application.isConnected=!1,state.application.isRejected=!0,state.application.disabled=!0},vm.showTab=function(itemId,tabName){vm.visibleId&&vm.visibleTab===tabName?vm.visibleId=vm.visibleTab=null:(vm.visibleId=itemId,vm.visibleTab=tabName),$state.transitionTo($state.current,{itemId:vm.visibleId,tabName:vm.visibleTab})},activate()}JobApplicationListController.$inject=["Applications","Authentication","$log","$state","$stateParams"],angular.module("applications").controller("JobApplicationListController",JobApplicationListController).directive("osListApplications",ListApplicationsDirective)}(),function(){function ApplicationStatusBadgeDirective(){var ddo;return ddo={template:'<span class="label {{vm.labelClass}}" ng-if="vm.model">{{ vm.labelText | uppercase }}</span>',restrict:"E",scope:{model:"="},controller:function(){var vm=this;vm.model?vm.model.isNew?(vm.labelClass="label-primary",vm.labelText="unreviewed"):vm.model.isConnected?vm.model.connection.isValid&&vm.model.connection.remainingDays>=5?(vm.labelClass="label-success",vm.labelText="connected"):vm.model.connection.isValid&&vm.model.connection.remainingDays<5?(vm.labelClass="label-warning",vm.labelText="expires-soon"):vm.model.connection.isValid||(vm.labelClass="label-danger",vm.labelText="expired"):vm.model.isRejected?(vm.labelClass="label-danger",vm.labelText=vm.model.status):"read"===vm.model.status&&(vm.labelClass="label-default",vm.labelText="reviewed"):(vm.labelText="view now",vm.labelClass="label-default")},controllerAs:"vm",bindToController:!0}}angular.module("applications").directive("osApplicationStatusBadge",ApplicationStatusBadgeDirective)}(),function(){function ViewApplicantController(auth){var vm=this;vm.user=auth.user,vm.applicant=vm.application.user,vm.driver=vm.applicant.driver,vm.license=!!vm.driver&&vm.driver.licenses[0],vm.isConnected=!!vm.application.connection&&vm.application.connection.isValid,vm.experienceText=vm.driver.experience&&vm.driver.experience.length?"The applicant's experience will be available once connected":"You can discuss past job experience once you have connected",vm.text=text}function ViewApplicantDirective(){var ddo;return ddo={templateUrl:"modules/applications/views/templates/os-applicant.client.template.html",restrict:"E",scope:{application:"=",scrollToMessageFn:"&?"},controller:"ViewApplicantController",controllerAs:"vm",bindToController:!0}}function ApplicationSummaryDirective(){var ddo;return ddo={templateUrl:"modules/applications/views/templates/application-summary.client.template.html",restrict:"EA",scope:{displayMode:"@?",model:"=",job:"=?",user:"=?",index:"=?"},controller:function(Applications,$log){var vm=this;vm.displayMode=vm.displayMode||"normal",vm.text=text,vm.application=vm.model,vm.application?($log.debug("[ApplicationSummaryDirective] Displaying as %s: %o",vm.displayMode,vm.application),"table"===vm.displayMode&&(vm.user=vm.application.user,vm.driver=vm.user.driver,vm.license=vm.driver.licenses[0],vm.messagingText=vm.application.isConnected?"click here for messaging":"available once connected")):vm.job&&vm.user&&Applications.ForDriver.get({jobId:vm.job._id,userId:vm.user._id}).$promise.then(function(success){vm.application=success,vm.lastMessage=vm.application.messages[0]},function(failure){return 404===failure.status?void 0:void $log.error("Unable to lookup application based on job and user: %o",failure)})},controllerAs:"vm",bindToController:!0}}var text={pre:{about:"the applicant's full <strong>about me</strong> section will be available once you are connected",messaging:{owner:"once you have connected, you will be able to converse with the Applicant to ask and answer questions, coordinate a telephone or in-person interview, or anything else to help you find the right employee.",driver:"once you have connected, you will be able to converse with the Employer to ask and answer questions, coordinate a telephone or in-person interview, or anything else to help you find the right job."}}};ViewApplicantController.$inject=["Authentication"],angular.module("applications").controller("ViewApplicantController",ViewApplicantController).directive("osetApplicationSummary",ApplicationSummaryDirective).directive("osetApplicant",ViewApplicantDirective)}(),function(){var ApplicationsService=["$resource","$log",function($resource,$log){var _this=this;return _this._data={ByJob:$resource("api/jobs/:jobId/applications",{jobId:"@jobId"},{query:{method:"GET",isArray:!0},save:{method:"POST"}}),ById:$resource("api/applications/:id",{id:"@_id"},{update:{method:"PUT"},save:{method:"POST"}}),setStatus:function(id,status){var AppRsrc=$resource("api/applications/:id",{id:"@_id"},{update:{method:"PUT"}});return new AppRsrc({_id:id,status:status}).$update()},getApplication:function(query){if(!query||!query.hasOwnProperty("applicationId"))return $log.warning("Cannot get application without application ID"),null;var rsrc=$resource("api/applications/:applicationId",{applicationId:"@applicationId"});return rsrc.get(query).$promise},listByUser:function(query){var rsrc=$resource("api/users/:userId/applications",{userId:"@userId"},{query:{method:"GET",isArray:!0}});return rsrc.query(query).$promise},listByCompany:function(query){var rsrc=$resource("api/companies/:companyId/applications",{companyId:"@companyId"},{query:{method:"GET",isArray:!0}});return rsrc.query(query).$promise},createConnection:function(application){var rsrc=$resource("/api/applications/:applicationId/connect",{applicationId:"@_id"},{get:{method:"POST",isArray:!1}});return rsrc.get(application).$promise},ForDriver:$resource("api/jobs/:jobId/applications/:userId",{jobId:"@jobId",userId:"@userId"})},_this._data}];ApplicationsService.$inject=["$resource","$log"],angular.module("applications").factory("Applications",ApplicationsService)}(),function(){function menus(Menus){Menus.addMenuItem("adminbar",{title:"Articles",state:"articles",type:"dropdown",position:1,roles:["admin"]}),Menus.addSubMenuItem("adminbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("adminbar","articles",{title:"Create Articles",state:"articles.create"})}menus.$inject=["Menus"],angular.module("articles").run(menus)}(),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",templateUrl:"modules/core/views/fixed-opaque.client.view.html"}).state("articles.list",{url:"",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"My Reports",state:"reviewReports",userTypes:["driver"],position:30}),Menus.addMenuItem("adminbar",{title:"Jobs",state:"bgchecks",type:"dropdown",roles:["Admin"]}),Menus.addSubMenuItem("adminbar","bgchecks",{title:"My Jobs",state:"bgchecks.mine"}),Menus.addSubMenuItem("adminbar","bgchecks",{title:"All Jobs",state:"bgchecks.list"}),Menus.addSubMenuItem("adminbar","bgchecks",{title:"New Job",state:"bgchecks.create"})}menus.$inject=["Menus"],angular.module("bgchecks").run(menus)}(),function(){function ReportListController(reports,$stateParams,AppConfig){var vm=this;vm.skus=$stateParams.sku,vm.reports=reports,vm.faqs=AppConfig.getFaqs({category:"bgreport"}).then(function(vals){return console.log("[FAQ] promise resolved with %d vals",vals.length),vm.faqs=vals,vals}),vm.text={lead:"Order Reports to Include with your Job Applications&hellip;",sub:"&hellip;and become 8-12x more likely to get the interview."},vm.packages=AppConfig.getReports()||{base:{title:"Motor Vehicle Report",price:"5",promo:"1",sku:"MVRDOM",skus:["MVRDOM"],enabled:!0},good:{title:"Good",price:"14.50",sku:"NBDS+MVRDOM",skus:[{sku:"NBDS"},{sku:"MVRDOM"}],enabled:!0},better:{title:"Premium",price:"44.95",sku:"PKG_PREMIUM",skus:[{sku:"PKG_PREMIUM",subsku:["SSNVAL","CRIMESC","FORM_EVER"]}],enabled:!0},best:{title:"Enterprise",price:"84.95",sku:"PKG_PREMIUM+ES_ECUPIT",skus:[{sku:"ES_ECUPIT"},{sku:"PKG_PREMIUM",subsku:["SSNVAL","CRIMESC","FORM_EVER"]}],enabled:!0},drugs:{title:"Drug Test",price:"40",sku:"ES_ECUPIT",enabled:!1}}}function resolveApplicantForUser(Applicants,Authentication,$q){var userId=Authentication.user._id,getApplicant=Applicants.ByUser.get({userId:userId});return getApplicant.$promise.catch(function(error){return 404===error.status?(console.log("No Existing Applicant for User"),null):(console.error("Hard error searching for applicant: %o",error),$q.reject(error))})}function resolveReportDetails(Reports,$stateParams){var sku=$stateParams.sku,getDetails=Reports.get(sku);return getDetails.$promise}function resolveReports(Reports,$stateParams){$stateParams.sku;return Reports.Types.list().$promise}function BgCheckRoutes($stateProvider){$stateProvider.state("listBgchecks",{url:"/bgchecks",templateUrl:"modules/bgchecks/views/list-bgchecks.client.view.html"}).state("createBgcheck",{url:"/bgchecks/create",templateUrl:"modules/bgchecks/views/create-bgcheck.client.view.html"}).state("viewBgcheck",{url:"/bgchecks/:bgcheckId",templateUrl:"modules/bgchecks/views/view-bgcheck.client.view.html"}).state("editBgcheck",{url:"/bgchecks/:bgcheckId/edit",templateUrl:"modules/bgchecks/views/edit-bgcheck.client.view.html"}).state("reviewReports",{url:"/reports/:sku",templateUrl:"modules/bgchecks/views/review-reports.client.view.html",parent:"headline-bg",controller:"ReportListController",controllerAs:"vm",bindToController:!0,resolve:{reports:resolveReports}}).state("orderReports",{url:"/reports/:sku/order",templateUrl:"modules/bgchecks/views/enter-report-data.client.view.html",parent:"fixed-opaque",controller:"ReportDetailsController",controllerAs:"vm",bindToController:!0,resolve:{report:resolveReportDetails,applicant:resolveApplicantForUser},params:{sku:{"default":null,isArray:!0}}}).state("bgreportview",{url:"/bgchecks/viewUser/:userId",templateUrl:"modules/bgchecks/views/view-bgcheck.client.view.html",parent:"fixed-opaque",controller:"BgCheckUserController",controllerAs:"vm",bindToController:!0,resolve:{url:function(){return"modules/bgchecks/img/defaultReport.pdf"}}}).state("reportpayments",{url:"/reports/:sku/pay",templateUrl:"modules/bgchecks/views/paymentTest.client.view.html",parent:"fixed-opaque",resolve:{report:resolveReportDetails,token:["Payments",function(payments){var mytoken=payments.getToken();return mytoken.$promise}],applicant:resolveApplicantForUser},controller:"PaymentController",controllerAs:"vm",bindToController:!0})}BgCheckRoutes.$inject=["$stateProvider"],resolveApplicantForUser.$inject=["Applicants","Authentication","$q"],resolveReports.$inject=["Reports","$stateParams"],resolveReportDetails.$inject=["Reports","$stateParams"],ReportListController.$inject=["reports","$stateParams","AppConfig"],angular.module("bgchecks").config(BgCheckRoutes).controller("ReportListController",ReportListController)}(),function(){function BgCheckUserController($scope,Authentication,$http,$log,$sce,url,pdfDelegate){var vm=this;vm.url=url,vm.user=Authentication.user,$http.get(url,{responseType:"arraybuffer"}).success(function(response){pdfDelegate.$getByHandle("pdf1").load(response)})}BgCheckUserController.$inject=["$scope","Authentication","$http","$log","$sce","url","pdfDelegate"],angular.module("bgchecks").controller("BgCheckUserController",BgCheckUserController)}(),function(){var BGChecksController=["$scope","$stateParams","$location","$http","$log","Authentication","Bgchecks","Stubs",function($scope,$stateParams,$location,$http,$log,Authentication,Bgchecks,Stubs){$scope.authentication=Authentication,$scope.pdfUrl="modules/bgchecks/img/defaultReport.pdf",$scope.$watch("applicant",function(newValue,oldValue){return newValue===oldValue?void $log.debug("no change in applicant - why did this get fired?"):void $scope.selectApplicant(newValue.remoteApplicantId)
}),$scope.loadApplicants=function(){$http.get("/bgcheck/login").success(function(){$http.get("/bgcheck/applicants").success(function(response){$log.debug("got applicants: %o",response.applicants),$scope.applicants=response.applicants}).error(function(){$scope.error="Unable to retrieve applicants for query",$scope.applicants=Stubs.applcantList})}).error(function(){$scope.error="Unable to connect to Background Check service",$scope.applicants=Stubs.applcantList})},$scope.selectApplicant=function(id){$log.debug("Applicant %d selected ... loading info",id),$http.get("/bgcheck/applicants/"+id).success(function(response){$log.debug("got applicant info: %o",response),$scope.applicantInfo=response}).error(function(){$scope.error="Unable to load Applicant's information",$scope.applicantInfo=Stubs.applicant})},$scope.create=function(){var bgcheck=new Bgchecks({name:this.name,applicant:this.applicant});bgcheck.$save(function(response){$location.path("bgchecks/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(bgcheck){if(bgcheck){bgcheck.$remove();for(var i in $scope.bgchecks)$scope.bgchecks[i]===bgcheck&&$scope.bgchecks.splice(i,1)}else $scope.bgcheck.$remove(function(){$location.path("bgchecks")})},$scope.update=function(){var bgcheck=$scope.bgcheck;bgcheck.$update(function(){$location.path("bgchecks/"+bgcheck._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.bgchecks=Bgchecks.query()},$scope.findOne=function(){$scope.bgcheck=Bgchecks.get({bgcheckId:$stateParams.bgcheckId})}}];BGChecksController.$inject=["$scope","$stateParams","$location","$http","$log","Authentication","Bgchecks","StubValues"],angular.module("bgchecks").controller("BgchecksController",BGChecksController)}(),function(){function completeApplicantModel(field){var model=this.model,source=this.applicant;if(!model.hasOwnProperty(field.name))if(source&&source.hasOwnProperty(field.name))model[field.name]=source[field.name];else switch(field.type){case"array":model[field.name]=[];break;case"object":model[field.name]={};break;default:model[field.name]=""}}function translateFieldsToNg(field){var model=this.subModel||this.model;switch(field.type){case"string":if(field.pickList){field.isPickList=!0;break}field.ngType="text",field.ngMaxLength=field.length;break;case"datelong":var d=model[field.name],format="YYYYMMDD";if(d&&d.length>8)if(d.length<=10&&/[-\/]/.test(d))format=d.replace(/\d{4}/,"YYYY").replace(/\d{2}/,"MM").replace(/\d{2}/,"DD");else{var m;(m=moment(d)).toArray().splice(3).reduce(function(p,n){return p+n})?(console.error('Unsure How to Handle "date" string: %s',d),model[field.name]=moment.utc(d).subtract(5,"hours")):(console.error("Treating %s as date-only with default format",d),model[field.name]=m.format(format))}else d||(model[field.name]="");field.isDate=!0,field.format=format;break;case"state":field.isState=!0;break;case"country":field.isCountry=!0;break;case"object":field.dataFields&&(this.subModel=model[field.name],_.map(field.dataFields,translateFieldsToNg,this),this.subModel=null),field.isObject=!0;break;case"array":field.dataFields&&(this.subModel=model[field.name],_.map(field.dataFields,translateFieldsToNg,this),this.subModel=null),field.isArray=!0,field.values=field.values||[]}var sensitive=/^governmentId|SSN$/i;return(sensitive.test(field.name)||sensitive.test(field.description))&&(field.ngType=null,field.ngSensitive=!0),field}function ReportDetailsController(report,applicant,appConfig,auth,Applicants,$log,$state,$modal,$document){function activate(){vm.applicant&&vm.applicant.remoteId&&(console.log("adding remote applicant id [%d] to model",vm.applicant.remoteId),vm.model.applicantId=vm.applicant.remoteId),vm.price=vm.report.promo||vm.report.price,vm.report.fields.map(completeApplicantModel,vm),_.map(vm.report.fields,translateFieldsToNg,vm),vm.states||(vm.states=vm.config.getStates()),vm.countries||(vm.countries=vm.config.getCountries())}var vm=this;vm.debugMode=appConfig.get("debug"),vm.report=report,vm.applicant=applicant,vm.config=appConfig,vm.model={},vm.verify=!1,vm.pay=!1,vm.introText="All reports are run by leading verification company, eEverifile. Outset will never store your Social Security , Driver License or Credit Card numbers.",vm.getStartedText="All required fields are <b>Marked in Bold</b>",vm.correctErrorsText='Please review any answers that are <span class="cta-outline">marked in red</span> below.',vm.createText="Please review your information and click continue when ready. Please note, that this may take a moment to complete.",vm.payExplanation="Please click continue to enter your payment information",vm.states=null,vm.countries=null,vm.saveForm=function(){return vm.disabled=!0,$document.scrollTopAnimated(0,300),vm.reportForm.$invalid?(vm.error="Please correct all errors above",vm.disabled=!1,!1):(vm.error=vm.success=null,vm.disabled=vm.creating=!1,void(vm.verify=!0))},vm.submitApplicant=function(){vm.disabled=vm.creating=!0,vm.error=vm.success=null,vm.showSpinner();var applicantRsrc=new Applicants.FromForm(vm.model,auth.user._id);$log.debug("Creating new applicantRsrc with data: %o",applicantRsrc),applicantRsrc.$save(function(response){response.updated?console.log("Successfully updated existing applicant: %j",response):console.log("SUCCESS! Created new Applicant: %o",response),vm.success="Applicant data has been verified on the server!",vm.error=null,$state.go("reportpayments",{sku:vm.report.sku}),vm.spinnerModal.dismiss("done")},function(err){return err&&$log.error("failed to create applicant: %o",err),vm.spinnerModal.dismiss("done"),vm.error="Sorry, but something went wrong trying to create your report applicant. Please try again later",vm.disabled=!1,vm.error=err.message||err.data&&err.data.message,!1})},vm.goBack=function(){vm.verify=vm.creating=vm.ispay=!1,vm.success=vm.error=null},vm.showSpinner=function(){vm.spinnerModal=$modal.open({templateUrl:"spinnerModal.html",backdrop:"static"})},vm.getPriceString=function(price){var base=Number(price),next=base.toFixed(2);return"$"+next},activate()}function capFilter(){return function(input){return input?/^[A-Z]+$/.test(input)?input:input.replace(/_/g," ").replace(/[a-z][A-Z]/g,function(txt){return txt.charAt(0)+" "+txt.charAt(1)}).replace(/([^\W_]+[^\s-]*) */g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}):""}}function prettyPrint(){return function(input){return input?JSON.stringify(input,void 0,2):""}}function isoDateFilter(){return function(input,parseFmt){var format=parseFmt||"YYYYMMDD";return input?moment(input,format).format("L"):""}}angular.module("core").filter("titlecase",capFilter).filter("prettyPrint",prettyPrint).filter("isoDatePrint",isoDateFilter),ReportDetailsController.$inject=["report","applicant","AppConfig","Authentication","Applicants","$log","$state","$modal","$document"],angular.module("bgchecks").controller("ReportDetailsController",ReportDetailsController)}(),function(){function ReportsSummaryController(Reports,Applicants,$log,$state){var vm=this;Reports.Types.list({returnAll:!0}).$promise.then(function(fulfilled){vm.reportTypes=fulfilled},function(error){vm.error=error.message});var uid=vm.userId||vm.user&&vm.user._id;uid&&Applicants.ByUser.get({userId:uid}).$promise.then(function(applicant){$log.debug("got applicant repsonse! %o",applicant),vm.applicant=applicant,vm.reports=applicant&&applicant.reports,vm.calculateButtons()},function(err){$log.debug("No Applicant found for user",err)}),vm.calculateButtons=function(){vm.viewReport,vm.reviewReport,vm.completeReport,vm.reports&&vm.reports.length&&(vm.complete=_.filter(vm.reports,{status:"COMPLETED"}),vm.pending=_.filter(vm.reports,{status:null}),vm.inprocess=_.reject(_.reject(vm.reports,vm.pending),vm.complete)),vm.reportSellHeader="Choose from one of the following packages!",vm.reportSellHeader=!vm.reports&&vm.applicant?"Continue your application process today!":vm.complete?"Add additional packages to your profile!":"Report Status:"},vm.viewReports=function(){$state.go("reviewReports")}}function BgCheckSummaryDirective(){var ddo={templateUrl:"modules/bgchecks/views/bgcheck-summary.client.template.html",restrict:"E",scope:{user:"=?",userId:"@?"},controller:"ReportsSummaryController",controllerAs:"vm",bindToController:!0};return ddo}ReportsSummaryController.$inject=["Reports","Applicants","$log","$state"],angular.module("bgchecks").controller("ReportsSummaryController",ReportsSummaryController).directive("osBgCheckSummary",BgCheckSummaryDirective)}(),function(){var stubs={applicantList:[{lastName:"Smith",applicantId:1e6,governmentId:"201211141",birthDate:2604276e5,firstName:"Bob"},{lastName:"Smith",applicantId:13,governmentId:null,birthDate:1360902394e3,firstName:"Albert"}],applicant:{firstName:"Bob",middleName:"Norman",lastName:"Smith",nameSuffix:"MD",applicantId:1e6,aliases:[{middleName:null,lastName:"McDonald",firstName:"Ronald"}],currentAddress:{street2:"Suite 200",street1:"101 Oak Street",postalCode:"30302",state:"georgia",province:null,country:"united_states",city:"Atlanta"},governmentId:"201211141",gender:"Male",birthDate:2604276e5}};angular.module("bgchecks").constant("StubValues",stubs)}(),function(){var bgCheckFactory=["$resource",function($resource){return $resource("api/bgchecks/:bgcheckId",{bgcheckId:"@_id"},{update:{method:"PUT"}})}],reportFactory=["$resource",function($resource){var _this=this;return _this.data={Types:$resource("/api/reports/types",{},{list:{method:"GET",isArray:!0}}),get:function(sku){var retVal=$resource("/api/reports/types/:sku",{sku:"@sku"});return retVal.get({sku:sku})}},_this.data}],applicantFactory=["$resource",function($resource){var _this=this;return _this.data={ByUser:$resource("/api/users/:userId/driver/applicant",{userId:"@userId",reportSource:"@reportSource"},{get:{method:"GET",isArray:!1}}),FromForm:function(formData,userId){var Applicant=$resource("/api/users/:userId/driver/applicant",{userId:"@userId",reportSource:"@reportSource"},{get:{method:"GET",isArray:!1}});return new Applicant({userId:userId,reportSource:formData})},ListAll:function(){var retVal=$resource("/api/reports/applicants");return retVal.query().promise},get:function(query){var retVal=$resource("/api/reports/applicants/:applicantId",{applicantId:"@applicantId"});return retVal.get(query)}},_this.data}];bgCheckFactory.$inject=["$resource"],angular.module("bgchecks").factory("Reports",reportFactory).factory("Bgchecks",bgCheckFactory).factory("Applicants",applicantFactory)}(),function(){angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("adminbar",{title:"Chat",state:"chat",roles:["Admin"]}),Menus.addMenuItem("topbar",{title:"Chat",state:"chat",roles:["Admin"]})}])}(),angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html"})}]),angular.module("chat").controller("ChatController",["$scope","Socket",function($scope,Socket){$scope.messages=[],Socket.on("chatMessage",function(message){console.log("Incoming message: %o",message),$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:'<i class="fa fa-home fa-lg"/>',state:"companies.home",userTypes:["owner"],position:100}),Menus.addMenuItem("adminbar",{title:"Companies",state:"companies",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","companies",{title:"List Companies",state:"companies.list"}),Menus.addSubMenuItem("adminbar","companies",{title:"New Company",state:"companies.create"})}menus.$inject=["Menus","Authentication"],angular.module("companies").run(menus)}(),function(){function moduleConfigResolve(AppConfig,auth){return AppConfig.getModuleConfig(auth.user.type,"company")}function companyResolve(rsrc,params,auth){var val;if(params.companyId)return val=params.companyId,console.log("Searching for company ID: %s",val),rsrc.ById.get({companyId:val}).$promise;if(params.userId)console.log("Searching for company data for user %s",params.userId),val=params.userId;else{if(!auth.user)return null;console.log("Searching for company data for logged in user"),val=auth.user._id}return rsrc.ByUser.get({userId:val}).$promise.catch(function(error){if(404===error.status)return console.log("Unable to find company"),null;throw error})}function resolveSubscriptions(){return{}}function config($stateProvider){$stateProvider.state("companies",{"abstract":!0,url:"/companies",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque"}).state("companies.list",{url:"/list",templateUrl:"modules/companies/views/list-companies.client.view.html",parent:"companies",controller:"CompaniesController",controllerAs:"vm",resolve:{companies:["rsrc",function(rsrc){return rsrc.ById.query().$promise}],config:moduleConfigResolve}}).state("companies.home",{url:"/home",templateUrl:"modules/companies/views/view-company.client.view.html",parent:"companies",controller:"CompaniesController",controllerAs:"vm",resolve:{company:companyResolve,config:moduleConfigResolve}}).state("companies.view",{url:"/{companyId:[0-9a-fA-F]{24}}",templateUrl:"modules/companies/views/view-company.client.view.html",parent:"companies",controller:"CompaniesController",controllerAs:"vm",resolve:{company:companyResolve,config:moduleConfigResolve}}).state("companies.create",{url:"/create",templateUrl:"modules/companies/views/edit-company.client.view.html",parent:"companies",controller:"CompanyEditController",controllerAs:"vm",resolve:{company:function(){return null},config:moduleConfigResolve}}).state("companies.edit",{url:"/{companyId:[0-9a-fA-F]{24}}/edit",templateUrl:"modules/companies/views/edit-company.client.view.html",parent:"companies",controller:"CompanyEditController",controllerAs:"vm",resolve:{company:companyResolve,config:moduleConfigResolve}}).state("subscriptionsReview",{url:"/subscriptions",templateUrl:"modules/companies/views/review-subscriptions.client.view.html",parent:"headline-bg",controller:"SubscriptionListController",controllerAs:"vm",bindToController:!0,resolve:{subscriptions:resolveSubscriptions}})}companyResolve.$inject=["Companies","$stateParams","Authentication"],moduleConfigResolve.$inject=["AppConfig","Authentication"],config.$inject=["$stateProvider"],angular.module("companies").config(config)}(),function(){function CompaniesController($state,Authentication,company,moduleConfig){var vm=this;if(vm.authentication=Authentication,vm.user=Authentication.user,vm.company=company,vm.config=moduleConfig||{},vm.canEdit=!1,vm.titleText="Company Profile",vm.imageURL=vm.user.profileImageURL,console.log("[CompaniesCtrl] Init w/ Company: %o",vm.company),vm.company){if(vm.canEdit=!!vm.config.edit&&!!vm.company.owner&&vm.company.owner._id===Authentication.user._id,vm.company.name){var name=vm.company.name;vm.titleText="s"===name.charAt(name.length-1).toLowerCase()?name+"' Profile":name+"'s Profile"}vm.imageURL=vm.company.profileImageURL||vm.user.profileImageURL}else $state.is("companies.home")&&(vm.canEdit=!!vm.config.edit);vm.successFunction=function(fileItem,response){vm.company=response,vm.imageURL=vm.company.profileImageURL,vm.showPhotoEdit=!1,vm.hideModal()},vm.showPhotoEdit=!1,vm.showModal=function(){vm.showPhotoEdit=!0},vm.hideModal=function(){vm.showPhotoEdit=!1}}CompaniesController.$inject=["$state","Authentication","company","config"],angular.module("companies").controller("CompaniesController",CompaniesController)}(),function(){function CompanyEditController($state,$log,auth,Companies,company){function activate(){$state.is("companies.create")&&(!vm.company||_.isEmpty(vm.company))&&($log.debug("no existing company object, creating a blank stub"),vm.company={ownerId:auth.user._id}),!vm.company||_.isEmpty(vm.company)?$log.error("[CompanyEditController] No company available in state %s",$state.current.name):$state.is("companies.create")?(vm.submitText="Create",vm.pageTitle="Create your new company profile",vm.editName=!0,vm.editing=!0):$state.is("companies.edit")?(vm.submitText="Update",vm.pageTitle=vm.company.name,vm.hasTitle=!0):$state.is("companies.remove")&&(vm.submit=remove,vm.submitText="Remove",vm.submitClass="btn-danger")}function submit(){return vm.company._id?update():create()}function create(){var company=new Companies.ById(vm.company);company.$save(function(response){$state.go("companies.home",{companyId:response._id}),vm.company=null},function(errorResponse){vm.error=errorResponse.data.message||errorResponse.data.error.message})}function remove(){vm.company.$remove(function(){$state.go("home")})}function update(){var company=vm.company;company.$update(function(){$state.go("companies.home",{companyId:company._id})},function(errorResponse){vm.error=errorResponse.data.message})}function cancel(){$state.go("home")}var vm=this;vm.company=company,vm.submit=submit,vm.cancel=cancel,vm.submitClass="",vm.editName=!1,activate()}CompanyEditController.$inject=["$state","$log","Authentication","Companies","company"],angular.module("companies").controller("CompanyEditController",CompanyEditController)}(),function(){function SubscriptionListController(subscriptions,$stateParams,AppConfig){var vm=this;vm.skus=$stateParams.sku,vm.subscriptions=subscriptions,vm.faqs=AppConfig.getFaqs({category:"subscriptions"}).then(function(vals){return console.log("[FAQ] promise resolved with %d vals",vals.length),vm.faqs=vals,vals}),vm.text={lead:"Start with a 1 week trial subscriptions&hellip;",sub:"&hellip;then upgrade to one of our packages"},vm.packages={base:{title:"Trial Subscription",sub:"<ul><li>Two Weeks to try Outset</li><li>Unlimited Access</li></ul>",duration:"two weeks",name:"",price:"5",promo:"1",sku:"SUB_INTRO",enabled:!0},good:{title:"Good",name:"Good",price:"10",sku:"SUB-GOOD",enabled:!0,duration:"per month"},better:{title:"Better",name:"Premium",price:"40",sku:"SUB-BETTER",enabled:!0,duration:"per month"},best:{title:"Best",name:"Enterprise",price:"80",sku:"SUB-BEST",enabled:!0,duration:"per month"},enterprise:{title:"Enterprise",sub:"Do you have a larger fleet that you're trying to keep running?<br/>Contact us and we will tailor a plan to fit your needs",price:"contact us...",sku:"SUB-ENTERPRISE",enabled:!0}},AppConfig.getAsync("subscriptions").then(function(subs){console.log("got subscirptino information: %o",subs),subs.length&&(vm.packages=subs)},function(errs){console.log("err :( %o",errs)})}SubscriptionListController.$inject=["subscriptions","$stateParams","AppConfig"],angular.module("companies").controller("SubscriptionListController",SubscriptionListController)}(),function(){function CompanyDirectiveController(Authentication,$state){var vm=this;vm.user=Authentication.user,vm.createEnabled=vm.config.create,vm.createText=vm.createEnabled?"Before posting any jobs, you will need to create your company profile. Click the button below to continue.":"Thanks for signing up. Right now our site is only available to drivers to give them a chance to fill out their profiles and order reports. You will receive an email once the site is available for job postings.",vm.creEdit=function(){vm.company&&vm.company._id?$state.go("companies.edit",{companyId:vm.company._id}):$state.go("companies.create")}}function CompanyDirective(){var ddo;return ddo={templateUrl:"modules/companies/views/templates/view-company.client.template.html",scope:{company:"=",inline:"=",config:"=?"},restrict:"E",replace:!0,controller:"CompanyDirectiveController",controllerAs:"vm",bindToController:!0}}CompanyDirectiveController.$inject=["Authentication","$state"],angular.module("companies").controller("CompanyDirectiveController",CompanyDirectiveController).directive("osCompany",CompanyDirective)}(),function(){function Companies($resource){return{ById:$resource("api/companies/:company:companyId",{company:"@_id",companyId:"@_companyId"},{update:{method:"PUT"}}),ByUser:$resource("api/users/:userId/companies",{userId:"@_userId"})}}Companies.$inject=["$resource"],angular.module("companies").factory("Companies",Companies)}(),function(){function reroute($rootScope,$state,Auth,$log){var redirectString,isRedirectInProgress=!1;$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState){if(isRedirectInProgress&&!event.defaultPrevented)return void $log.warn('[CoreConfig] stateChangeStart already in progress [%s]. Stopping redirect to "%s"',redirectString,toState.name);if($log.info('[CoreConfig] Leaving state: %s "%s" %o Entering state: %s "%s" %o',fromState.name,fromState.url,fromState,toState.name,toState.url,toState,event),redirectString=fromState.name+" --> "+toState.name,toState.authenticate&&!Auth.isLoggedIn())return isRedirectInProgress=!0,$log.error("State '%s' requires authentication but no user is signed in",toState.name),event.preventDefault(),void $state.go("intro");if(Auth.user&&/^(intro|home)$/gi.test(toState.name))switch(Auth.user.type){case"driver":return isRedirectInProgress=!0,$log.info("[HomeController] Re-Routing to driver's profile page"),event.preventDefault(),void $state.go("drivers.home");case"owner":return isRedirectInProgress=!0,$log.info("[HomeController] Re-Routing to the user's company home"),event.preventDefault(),void $state.go("companies.home");default:if($log.warn("[HomeController] Unknown User Type"),Auth.isAdmin())return $log.warn("[HomeController] Admin User - routing to user list"),void $state.go("users.list")}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState){isRedirectInProgress=!1,$log.info('[CoreConfig] $stateChangeSuccess completed: From state: %s "%s" %o To state: %s "%s" %o',fromState.name,fromState.url,fromState,toState.name,toState.url,toState,event)}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){return $log.error("State Change error from %s to %s",fromState.name,toState.name,error),$log.warn("Error Status: %d in transition",error.status),403===error.status?(event.preventDefault(),$log.warn("User does not have access to %s",toState.name),void $state.go("authentication")):void(fromState&&fromState.name?(event.preventDefault(),$log.warn("Rerouting back to source state"),$state.go(fromState.name,{error:error})):(event.preventDefault(),$log.warn("Unknown next step")))})}function scrollTopChange($rootScope,$document){$rootScope.$on("$stateChangeSuccess",function(){$document.scrollTo(-50,0)})}scrollTopChange.$inject=["$rootScope","$document","$log"],reroute.$inject=["$rootScope","$state","Authentication","$log"],angular.module("core").run(reroute).run(scrollTopChange)}(),function(){function handleBadRoute($injector,$location){console.log("Unknown URL pattern: %s",$location.url()),$injector.invoke(["Authentication","$log",function(auth,$log){if(auth.isLoggedIn())switch(auth.user.type){case"driver":$log.debug("[Route.Otherwise] Re-Routing to driver's profile page"),$location.path("/drivers/home");break;case"owner":$log.debug("[Route.Otherwise] Re-Routing to the user's company home"),$location.path("/companies/home");break;default:$log.warn("[Route.Otherwise] Unknown Destination"),$location.path("/")}else $location.path("/")}])}function config($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(handleBadRoute),$stateProvider.state("superbase",{"abstract":!0,template:'<div ui-view class="superbase" autoscroll="true"></div>',params:{delay:{value:"0",squash:!0}},resolve:{waitforit:["$stateParams","$timeout",function($stateParams,$timeout){return $stateParams.delay?(console.log("Waiting for %d seconds",$stateParams.delay),void $timeout(function(){return"waited"},1e3*$stateParams.delay)):"go ahead"}]}}).state("privacy",{url:"/privacy",templateUrl:"modules/core/views/templates/privacy.template.html",parent:"fixed-opaque"}).state("full-clear",{"abstract":!0,templateUrl:"modules/core/views/full-clear.client.view.html"}).state("full-opaque",{"abstract":!0,templateUrl:"modules/core/views/full-opaque.client.view.html"}).state("fixed-clear",{"abstract":!0,templateUrl:"modules/core/views/fixed-clear.client.view.html",parent:"full-clear"}).state("fixed-opaque",{"abstract":!0,templateUrl:"modules/core/views/fixed-opaque.client.view.html",parent:"full-clear"}).state("headline-bg",{"abstract":!0,templateUrl:"modules/core/views/headline-bg.client.view.html",parent:"full-clear"}).state("intro",{url:"/",templateUrl:"modules/core/views/intro.client.view.html",parent:"superbase"}).state("home",{url:"/h"})}handleBadRoute.$inject=["$injector","$location","$state","Authentication","$log"],config.$inject=["$stateProvider","$urlRouterProvider"],angular.module("core").config(config)}(),function(){function FooterController($scope){$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.year=(new Date).getFullYear()}FooterController.$inject=["$scope"],angular.module("core").controller("FooterController",FooterController)}(),function(){function HeaderController($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.navbarClass="",$scope.menu=Menus.getMenu($scope.authentication.user&&$scope.authentication.isAdmin()?"adminbar":"topbar"),$scope.stateLink="intro",$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}HeaderController.$inject=["$scope","$state","Authentication","Menus"],angular.module("core").controller("HeaderController",HeaderController)}(),function(){function HomeController($scope,$location,$state,$anchorScroll,$modal,$log,Authentication){$scope.authentication=Authentication,$scope.showMain=!0,$scope.showInfo=!1,$scope.showSignup=!1,$scope.lead1={header:"Transportation Focused",text:"The hiring website designed specifically for the Transporation Industry. Driver and Employer information is consolidated all in one place."},$scope.lead2={header:"A Place for Drivers",text:"Manage your reputation and driving career with hosted credentials and government reports on your resume based profile."},$scope.lead3={header:"An Employer's Hiring Hub",text:"Increase the certainty in your hiring process with higher quality and motivated individuals, with access to driver information as soon as you connect."},$scope.gotoSignup=function(){$scope.showMain=!1,$scope.showInfo=!1,$scope.showSignup=!0,$location.hash("signup_type"),$anchorScroll()}}HomeController.$inject=["$scope","$location","$state","$anchorScroll","$modal","$log","Authentication"],angular.module("core").controller("HomeController",HomeController)}(),angular.module("core").directive("fitVids",fitVidsDirective),function(){function ModalFocusDirective($timeout,$parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.modalFocus);scope.$watch(model,function(value){value===!0&&$timeout(function(){element[0].focus()})})}}}ModalFocusDirective.$inject=["$timeout","$parse"],angular.module("core").directive("modalFocus",ModalFocusDirective)}(),function(){function yearIsChill(d){return d.year()>y-90&&d.year()<y+20}function getDate(model,format){var t;if(!model||_.isEmpty(model))return"";if((t=moment(model,format)).isValid()&&yearIsChill(t))return t;if("string"==typeof model){var stripped=model.replace(/[^\d]/,"");if((t=moment(stripped)).isValid()&&yearIsChill(t))return t;if((t=moment(stripped,format)).isValid()&&yearIsChill(t))return t;if((t=moment(stripped,"MMDDYYYY")).isValid()&&yearIsChill(t))return t;if((t=moment(stripped,"YYYYMMDD")).isValid()&&yearIsChill(t))return t}return(t=moment(model)).isValid()&&yearIsChill(t)?t:""}function dpCtrl($element,$attrs,$scope,$log){var vm=this;vm.format=vm.format||"YYYY-MM-DD",vm.display="L",vm.displayFormat=vm.dformat||moment().format("L").replace(/\d{4}/,"YYYY").replace(/\d{2}/,"MM").replace(/\d{2}/,"DD"),vm.required=void 0===vm.required&&void 0!==$attrs.required||!!vm.required,vm.mask=vm.dformat&&vm.dformat.replace(/\w/g,"9")||"99/99/9999",console.log("got mask %s from %s",vm.mask,vm.dformat);var t=getDate(vm.model,vm.format);vm.shadow=t?t.format(vm.displayFormat):t,$scope.$watch("vm.shadow",function(newVal,oldVal){if(newVal!==oldVal){$log.info("[osDp] Change Detected, %o --> %o {%s}",oldVal,newVal,vm.format);var m;newVal&&(m=moment.isMoment(newVal)?newVal:moment(newVal,vm.displayFormat),m.isValid()&&($log.info("[osDp] validDate %o --> %s",m,m.format(vm.format)),vm.model=m.format(vm.format)))}})}function dpDirective(){return{priority:0,templateUrl:"/modules/core/views/templates/os-datepicker.client.template.html",replace:!0,restrict:"E",scope:{model:"=",format:"=?",dformat:"@?",isRequired:"=?",osName:"=?"},controller:dpCtrl,controllerAs:"vm",bindToController:!0}}var y=moment().year();dpCtrl.$inject=["$element","$attrs","$scope","$log"],angular.module("core").directive("dateInput",dpDirective)}(),function(){function osDebugInfoCtrl($scope,$rootScope,$location,$state,$log,Auth,AppConfig){$scope.debugInfo=[],$scope.collapsed=!0;!!AppConfig.get("debug");$log.info("not enabling os-debug-info")}osDebugInfoCtrl.$inject=["$scope","$rootScope","$location","$state","$log","Authentication","AppConfig"],angular.module("core").directive("osDebugInfo",[function(){return{scope:{pageName:"@?"},templateUrl:"modules/core/views/templates/os-debug-info.client.template.html",restrict:"E",replace:!1,controller:"OsDebugInfoController"}}]).controller("OsDebugInfoController",osDebugInfoCtrl).filter("sanitize",["$sce",function($sce){return function(htmlCode){return $sce.trustAsHtml(htmlCode)}}]).filter("streamline",["$sce",function($sce){return function(htmlCode){for(var hRegex=/<(\/?)h\d>/,eRegex=/<[^\/]+?><\/.+?>|<br[\/]?>/,pRegex=/<(p).*?>([^<]*)<\/(p)>|<(ul|li).*?>([^<][^u]?[^l][^i]?)+<\/(ul|li)>/,result=htmlCode.replace(eRegex,"");result.match(eRegex);)result=result.replace(eRegex,"");for(;result.match(hRegex);)result=result.replace(hRegex,"<$1b>");for(;result.match(pRegex);)result=result.replace(pRegex,"&nbsp;$2");return $sce.trustAsHtml(result)}}])}(),function(){function FormActionsDirective(){var template='<div data-ng-show="vm.errorText" class="pull-left text-danger"><strong data-ng-bind="vm.errorText"></strong></div><div class="pull-right">   <input ng-if="vm.showCancel" type="button" class="btn btn-link" value="{{vm.cancelText}}" ng-click="vm.cancel()">   <input ng-if="vm.showAlt" type="button" class="btn btn-default" value="{{vm.altText}}" ng-click="vm.alt()">   <input type="submit" class="btn {{vm.submitClass}}" ng-class="{ \'disabled\': vm.disableSubmit}" value="{{vm.submitText}}"></div>',ddo={template:template,scope:{disableSubmit:"=?",submitText:"@?",submitClass:"@?",cancelFn:"&?",cancelText:"@?",altFn:"&?",altText:"@?",errorText:"=?"},controller:function(){var vm=this;vm.showAlt=!!vm.altFn(),vm.altText=vm.altText||"Other Action",vm.showCancel=!!vm.cancelFn(),vm.cancelText=vm.cancelText||"cancel",vm.submitClass=vm.submitClass||"btn-oset-success",vm.submitText=vm.submitText||"Save","undefined"==typeof vm.disableSubmit&&(vm.disableSubmit=!1),vm.alt=function(){vm.altFn()()},vm.cancel=function(){vm.cancelFn()()}},controllerAs:"vm",bindToController:!0};return ddo}angular.module("core").directive("osFormActions",FormActionsDirective)}(),function(){function HtmlEditDirective(){return{priority:0,template:'<text-angular ng-model="vm.model" required="vm.required"></text-angular>',replace:!1,restrict:"E",scope:{model:"=",toolbar:"=?",osRequired:"=?"},controllerAs:"vm",bindToController:!0,controller:["$scope","$element","$attrs","$transclude",function(){var vm=this,toolbar=vm.toolbar||[["bold","italics","underline"],["ul","ol"],["justifyLeft","justifyCenter"]];vm.required=_.isUndefined(vm.osRequired)?!1:!!vm.osRequired,vm.toolbar=toolbar}]}}function TextAngularProvider($provide){$provide.decorator("taOptions",["$delegate",function(taOptions){return taOptions.toolbar=[["bold","italics","underline"],["ul","ol"],["justifyLeft","justifyCenter"],["h3","p"]],taOptions.classes={focussed:"focused",toolbar:"btn-toolbar",toolbarGroup:"btn-group",toolbarButton:"ta-toolbar-btn btn btn-cta-toolbar",toolbarButtonActive:"active",disabled:"disabled",textEditor:"form-control",htmlEditor:"form-control"},taOptions
}]),$provide.decorator("taTools",["$delegate",function(taTools){return taTools.h3.iconclass="fa fa-font",delete taTools.h3.buttontext,taTools.p.buttontext="a",delete taTools.p.iconclass,taTools}])}TextAngularProvider.$inject=["$provide"],angular.module("core").config(TextAngularProvider).directive("osHtmlEdit",HtmlEditDirective)}(),function(){function PageHeaderDirective(){var ddo;return ddo={templateUrl:"modules/core/views/templates/os-page-header.client.template.html",scope:{title:"@",subTitle:"@?",showEdit:"=?",btnShow:"=?",btnText:"@?",btnSref:"@?",editSref:"@?",level:"@?",pictureUrl:"=?",editPicSref:"@?",pictureEditFn:"&?"},transclude:!0,restrict:"E",controller:["$transclude","$log","$state","$attrs",function(transclude,$log,$state,$attrs){var vm=this;vm.btnShow="undefined"==typeof this.btnShow?!0:this.btnShow,vm.showEdit="undefined"==typeof this.showEdit?!1:this.showEdit,vm.showPicEdit=(!!angular.isDefined($attrs.pictureEditFn)||!!angular.isDefined($attrs.editPicSref))&&vm.showEdit,vm.hover=!1,vm.includeTransclude=!!transclude().contents()&&transclude().contents().length>0,vm.showHeader=!!vm.subTitle||!!vm.editSref||vm.btnShow&&!!vm.btnText&&!!vm.btnSref,vm.editPicFn=function(){return angular.isDefined($attrs.pictureEditFn)?($log.debug("calling pictureEditFn"),vm.pictureEditFn()):void 0}}],controllerAs:"vm",bindToController:!0}}angular.module("core").directive("osPageHeader",PageHeaderDirective)}(),function(){function CategoriesDirectiveController($log){var vm=this;vm.mode=vm.mode||"edit",vm.dataType=vm.dataType||"driver",vm.newCategory=null,vm.categories||(vm.categories=[]),vm.categories&&($log.debug("Initalizing CategoriesDirective in %s mode with %d categories",vm.mode,vm.categories.length),"edit"===vm.mode&&($log.debug("Confirming all defaults present in edit control"),_.each(defaults[vm.dataType],function(option){_.find(vm.categories,{key:option.key})?$log.debug("driver already contains %s",option.key):($log.debug("pushing interest option %s",option.key),vm.categories.push(option))}))),vm.toggleCategory=function(){vm.newCategory=null===vm.newCategory?"":null},vm.addCategory=function(){if(vm.newCategory){var existing=_.find(vm.categories,{key:vm.newCategory});existing?existing.value=!0:vm.categories.push({key:vm.newCategory,value:!0})}vm.newCategory=null}}function CategoryDirective(){var ddo;return ddo={templateUrl:"modules/core/views/templates/oset-categories.client.template.html",restrict:"E",transclude:!0,scope:{categories:"=model",mode:"@?",dataType:"@?",lblClass:"@?"},controller:"CategoriesDirectiveController",controllerAs:"vm",bindToController:!0}}var defaults={driver:[{key:"Courier",value:!1},{key:"Local CDL",value:!1},{key:"Long Haul CDL",value:!1},{key:"Taxi/Limo",value:!1},{key:"Ridesharing (Uber/Lyft)",value:!1},{key:"Non-Emergency Medical",value:!1}],job:[{key:"Courier",value:!1},{key:"Local CDL",value:!1},{key:"Long Haul CDL",value:!1},{key:"Taxi/Limo",value:!1},{key:"Ridesharing (Uber/Lyft)",value:!1},{key:"Non-Emergency Medical",value:!1}]};CategoriesDirectiveController.$inject=["$log"],angular.module("applications").controller("CategoriesDirectiveController",CategoriesDirectiveController).directive("osetCategories",CategoryDirective)}(),function(){function ScrollDirective($window){return{scope:{scroll:"=scrollPosition"},link:function(scope){var windowEl=angular.element($window),handler=function(){scope.scroll=windowEl.scrollTop()};windowEl.on("scroll",scope.$apply.bind(scope,handler)),handler()}}}function autofillsync($timeout){return{require:"ngModel",link:function(scope,elem,attrs,ngModel){var origVal=elem.val();$timeout(function(){var newVal=elem.val();ngModel.$pristine&&origVal!==newVal&&ngModel.$setViewValue(newVal)},500)}}}ScrollDirective.$inject=["$window"],angular.module("core").directive("scrollPosition",ScrollDirective),autofillsync.$inject=["$timeout"],angular.module("core").directive("autofillsync",autofillsync)}(),function(){function TOSModalDirective(){return{transclude:!0,templateUrl:"modules/core/views/tos.client.directive.html",restrict:"EA",scope:{title:"@?",terms:"@?",acceptFn:"&?"},controller:"TosModalController",controllerAs:"vm",bindToController:!0}}function TosModalController($modal,$log){var vm=this;vm.isOpen=!1,vm.showModal=function(){var modalInstance=$modal.open({templateUrl:"tosModal.html",size:"xl",backdropClass:"darken",windowClass:"tos",controller:"TosController",controllerAs:"vm",resolve:{vm:function(){return vm}}});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.acceptFn&&vm.acceptFn(result),vm.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})}}function TosController(vm,$log){$log.debug("TosController: Init with values: %o",vm),vm.tosHTML&&$log.debug("DocHTML wins over DocTemplate")}TosController.$inject=["vm","$log"],TosModalController.$inject=["$modal","$log"],angular.module("core").directive("tos",TOSModalDirective).controller("TosModalController",TosModalController).controller("TosController",TosController)}(),function(){function ConfigFactory($resource,$log,$q){var months,faqs,modules;return{getStates:function(){var rsrc=$resource("api/config/states");return rsrc.query()},getCountries:function(){return this.get("countries")},getBaseSchedule:function(){var rsrc=$resource("api/config/baseSchedule");return rsrc.query()},getMonths:function(){if(!months){for(months=[];months.length<12;){var m=moment().month(months.length);months.push({num:m.format("MM"),name:m.format("MMMM")})}console.log("ConfigFactory] Returning newly generated months",JSON.stringify(months))}return months},get:function(config){var rsrc=$resource("api/config/"+config),d=$q.defer();rsrc.get().$promise.then(function(resp){d.resolve(resp.hasOwnProperty(config)?resp[config]:resp)},function(err){$log.log('[AppCfg] "%s" is not an available',config,err),d.reject(err)}),d.promise.then(function(f){return f},function(e){return $log.warn("Swallowing error: %o",e),null})},getAsync:function(config){var rsrc=$resource("api/config/"+config);return rsrc.get().$promise.then(function(success){return $q.when(success.hasOwnProperty(config)?success[config]:success)},function(err){return $log.log('[AppCfg] "%s" is not an available',config,err),$q.when(null)})},getReports:function(){var rsrc=$resource("api/config/reports");return rsrc.get()},getFaqs:function(myfilter){var d=$q.defer();if(faqs)d.resolve(faqs);else{var rsrc=$resource("api/config/faqs");rsrc.query().$promise.then(function(resp){$log.debug("faq response: %o",resp),faqs=_.filter(resp,myfilter||{}),d.resolve(faqs)},function(err){$log.debug("got faq error: %o",err),d.resolve([])})}return d.promise},getModuleConfig:function(userType,moduleName){function paramFilter(configs,userType,moduleName){var retVal=configs;return userType&&(retVal=retVal[userType]),moduleName&&(retVal=retVal[moduleName]),retVal}var d=$q.defer();if(modules)return paramFilter(modules,userType,moduleName);var rsrc=$resource("api/config/modules");return rsrc.get().$promise.then(function(resp){d.resolve(paramFilter(resp,userType,moduleName))},function(err){$log.debug("got config error: %o",err),d.resolve({})}),d.promise}}}ConfigFactory.$inject=["$resource","$log","$q"],angular.module("core").factory("AppConfig",ConfigFactory)}(),function(){angular.module("core").service("Menus",[function(){function validateRole(userRoles,validRoles){for(var userRoleIndex in userRoles)if(userRoles.hasOwnProperty(userRoleIndex))for(var roleIndex in validRoles)if(validRoles.hasOwnProperty(roleIndex)){if(validRoles[roleIndex]===userRoles[userRoleIndex])return!0;if("*"===validRoles[roleIndex])return!0}return!1}function validateType(userType,validTypes){for(var typeIndex in validTypes)if(validTypes.hasOwnProperty(typeIndex)){if(validTypes[typeIndex]===userType)return!0;if("*"===validTypes[typeIndex])return!0}return!1}this.defaultRoles=["*"],this.defaultUserTypes=["*"],this.menus={};var shouldRender=function(user){if(user){var roleValid=!!~this.roles.indexOf("*"),typeValid=!!~this.userTypes.indexOf("*");return roleValid||(roleValid=validateRole(user.roles,this.roles)),roleValid&&!typeValid&&(typeValid=validateType(user.type,this.userTypes)),roleValid&&typeValid}return this.isPublic};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,userTypes:options.userTypes||this.defaultUserTypes,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){options=options||{},this.validateMenuExistance(menuId);var menuItemDefault={title:"",state:"",type:"item","class":void 0,isPublic:this.menus[menuId].isPublic,roles:this.menus[menuId].roles,userTypes:this.menus[menuId].userTypes,position:100,items:[],shouldRender:shouldRender},newItem=angular.extend(menuItemDefault,options);if(this.menus[menuId].items.push(newItem),options.items)for(var i in options.items)options.items.hasOwnProperty(i)&&this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);var menuSubItemDefault={title:"",state:"",position:0,shouldRender:shouldRender};for(var itemIndex in this.menus[menuId].items)if(this.menus[menuId].items[itemIndex].state===parentItemState){menuSubItemDefault=angular.extend(menuSubItemDefault,{isPublic:this.menus[menuId].items[itemIndex].isPublic,roles:this.menus[menuId].items[itemIndex].roles,userTypes:this.menus[menuId].items[itemIndex].userTypes});var newSubMenuItem=angular.extend(menuSubItemDefault,options);this.menus[menuId].items[itemIndex].items.push(newSubMenuItem)}return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);var menuItems;for(var itemIndex in menuItems=this.menus[menuId].items)if(menuItems.hasOwnProperty(itemIndex))for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1}),this.addMenu("adminbar",{isPublic:!1,roles:["admin"]})}])}(),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){console.log("[Socket.on] `%s`. Data: %o",eventName,data),callback(data)})})},this.emit=function(eventName,data){this.socket&&(console.log("[Socket.emit] %s: %o",eventName,data),this.socket.emit(eventName,data))},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:'<i class="fa fa-home fa-lg"/>',state:"drivers.home",position:100,userTypes:["driver"]}),Menus.addMenuItem("adminbar",{title:"Drivers",state:"drivers",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","drivers",{title:"List Drivers",state:"drivers.list"}),Menus.addSubMenuItem("adminbar","drivers",{title:"New Driver",state:"drivers.create"})}menus.$inject=["Menus","Authentication"],angular.module("drivers").run(menus)}(),function(){function handle404s(err,$q){return 404===err.status?(console.warn("No Driver found ... resolving as null",err),null):(console.error("Hard Error when retrieiving Driver",err),$q.reject(err))}function driverResolve(rsrc,params){if(params.driverId){var val=params.driverId;console.log("Searching for driver ID: %s",val);var drivers=rsrc.ById.get({driverId:val}).$promise;return drivers}return{}}function userResolve(rsrc,params,auth){var val;params.userId?(val=params.userId,console.log("Searching for driver data for user %s",val)):(val=auth.user._id,console.log("Searching for driver data for logged in user: %s",val));var driver=rsrc.ByUser.get({userId:val}).$promise;return driver.catch(handle404s)}function driverListResolve(rsrc){return rsrc.ById.query().$promise}function config($stateProvider){$stateProvider.state("drivers",{"abstract":!0,url:"/drivers",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque"}).state("drivers.list",{url:"",templateUrl:"modules/drivers/views/list-drivers.client.view.html",parent:"drivers",resolve:{drivers:driverListResolve},controller:"DriversListController",controllerAs:"vm",bindToController:!0}).state("drivers.create",{url:"/create",templateUrl:"modules/drivers/views/edit-driver.client.view.html",parent:"drivers",resolve:{driver:userResolve},controller:"DriverEditController",controllerAs:"vm",bindToController:!0}).state("drivers.home",{url:"/home",templateUrl:"modules/drivers/views/view-driver.client.view.html",parent:"drivers",controller:"DriverViewController",controllerAs:"vm",bindToController:!0,resolve:{driver:userResolve},authenticate:!0}).state("drivers.view",{url:"/{driverId:[0-9a-fA-F]{24}}",templateUrl:"modules/drivers/views/view-driver.client.view.html",parent:"drivers",resolve:{driver:driverResolve},controller:"DriverViewController",controllerAs:"vm",bindToController:!0}).state("drivers.edit",{url:"/{driverId:[0-9a-fA-F]{24}}/edit",templateUrl:"modules/drivers/views/edit-driver.client.view.html",parent:"drivers",resolve:{driver:driverResolve},controller:"DriverEditController",controllerAs:"vm",bindToController:!0})}driverListResolve.$inject=["Drivers"],driverResolve.$inject=["Drivers","$stateParams"],userResolve.$inject=["Drivers","$stateParams","Authentication"],config.$inject=["$stateProvider"],angular.module("drivers").config(config)}(),function(){function DriverEditController($state,$log,Drivers,Authentication,driver,AppConfig){function activate(){$state.is("drivers.create")&&vm.driver&&vm.driver._id&&$state.go("drivers.edit",{driverId:vm.driver._id})}function submit(){return vm.driverForm["vm.experienceForm"]&&vm.driverForm["vm.experienceForm"].$pristine&&(console.log("Experience untouched ..."),vm.driver.experience[0]&&vm.driver.experience[0].isFresh&&(console.log("nuked experience"),vm.driver.experience=[]),vm.driverForm.$setValidity("vm.experienceForm",!0)),vm.driverForm.$invalid?(vm.error="Please correct the errors above",!1):$state.is("drivers.create")?vm.create():$state.is("drivers.edit")?vm.update():void(vm.error="Unknown Configuration, sorry :(")}function create(){if(_.isEmpty(vm.driver.licenses[0]))$log.debug("No license information entered, ignoring ..."),vm.driver.licenses=null;else if(vm.driverForm["vm.licenseForm"].$invalid)return void(vm.error=vm.driverForm["vm.licenseForm"].$error);vm.driver.experience=_.compact(vm.driver.experience);var driver=new Drivers.ById(vm.driver);driver.$save(function(response){$log.debug("Successfully created new Driver"),$state.go("drivers.view",{driverId:response._id})},function(errorResponse){vm.error=errorResponse.data&&0!==errorResponse.status?errorResponse.data.message:"Error saving your profile. Please try again later."})}function cancel(){$state.go("drivers.view",{driverId:vm.driver._id})}function update(){var driver=vm.driver;driver.$update(function(response){response.user._id===vm.user._id?$state.go("drivers.home"):$state.go("drivers.view",{driverId:response._id})},function(errorResponse){vm.error=errorResponse.data.message})}function dropExperience(exp){if(exp=exp||vm.exp)for(var i in vm.driver.experience)vm.driver.experience[i]===exp&&vm.driver.experience.splice(i,1)}function addExperience(){vm.driver.experience.push({text:"",time:{start:{},end:{}},location:"",isFresh:!0})}var vm=this;vm.debug=AppConfig.get("debug"),vm.submit=submit,vm.update=update,vm.create=create,vm.cancel=cancel,vm.dropExperience=dropExperience,vm.addExperience=addExperience,vm.user=Authentication.user,vm.action=$state.current.name.replace("drivers.",""),vm.driver=_.defaults(driver||{},{experience:[],licenses:[{}],interests:[]}),activate()}DriverEditController.$inject=["$state","$log","Drivers","Authentication","driver","AppConfig"],angular.module("drivers").controller("DriverEditController",DriverEditController)}(),function(){function DriverViewController($state,$log,$stateParams,Authentication,Profiles,driver){function activate(){vm.driver?(vm.user=vm.driver.user,vm.canEdit=vm.user._id===Authentication.user._id):$stateParams.userId?vm.user=Profiles.get({userId:$stateParams.userId}).$promise.then(function(profile){vm.user=profile,vm.canEdit=$stateParams.userId===vm.user._id}):$state.is("drivers.home")&&(vm.user=Authentication.user,vm.canEdit=!0)}function endorsementFilter(item){return item.value===!0}function endorsementDisplay(item){var i=item.key.indexOf("(");return i>0?item.key.substring(0,i).trim():item.key}var vm=this;vm.text={bulletPoints:["You will be applying to jobs with your Driver Profile.","Applicants who have reports in their Driver Profile are <strong>8-12x more likely to be interviewed!</strong>","More information in your Profile = better jobs: Include your reports (Background Check etc.), experience and endorsements.","Show you’re reliable: Get reports like Background Checks, MVR’s & Drug Tests to be hosted in your Profile.","Jobs will be available on Outset in 1 week, Get your Profile Ready!"]},vm.driver=driver,vm.user=null,vm.canEdit=!1,vm.auth=Authentication,vm.endorsementFilter=endorsementFilter,vm.endorsementDisplay=endorsementDisplay,activate()}DriverViewController.$inject=["$state","$log","$stateParams","Authentication","Profiles","driver"],angular.module("drivers").controller("DriverViewController",DriverViewController)}(),function(){function DriversListController($log,drivers){var vm=this;vm.drivers=drivers,vm.endorsementFilter=function(item){return item.value===!0},vm.endorsementDisplay=function(item){var i=item.key.indexOf("(");return i>0?item.key.substring(0,i).trim():item.key}}DriversListController.$inject=["$log","drivers"],angular.module("drivers").controller("DriversListController",DriversListController)}(),function(){function OsDriverInlineView(){return{priority:0,templateUrl:"/modules/drivers/views/templates/driver-inline.client.template.html",replace:!0,transclude:!0,restrict:"E",scope:{driver:"=model"},controller:function(){},controllerAs:"vm",bindToController:!0}}OsDriverInlineView.$inject=[],angular.module("drivers").directive("osDriverInline",OsDriverInlineView)}(),function(){function OsDriverView(){return{priority:0,templateUrl:"/modules/drivers/views/templates/driver-profile.client.template.html",replace:!0,transclude:!0,restrict:"E",scope:{driver:"=model"},controller:"OsDriverViewController",controllerAs:"vm",bindToController:!0}}var OsDriverViewController=["Authentication",function(Authentication){var vm=this;vm.Authentication=Authentication,vm.canEdit=function(user){return user=user||vm.driver.user,console.log("User %s edits? %s v %s",user.firstName,vm.Authentication.user._id,user._id),vm.Authentication.user._id===user._id},vm.getExperienceString=function(experience){var retval="<strong>"+experience.title+"</strong>";return retval+=" "+vm.getDateRange(experience.time)},vm.getDateRange=function(time){var s,e;return time.start&&(s=moment(time.start))?time.end&&(e=moment(time.end))?s.format("MMMM, YYYY")+" - "+e.format("MMMM, YYYY"):s.format("MMMM, YYYY")+" - present":null}}];OsDriverViewController.$inject=["Authentication"],angular.module("drivers").controller("OsDriverViewController",OsDriverViewController).directive("osDriverView",OsDriverView)}(),function(){function ExperienceDirectiveController(AppConfig){var vm=this;vm.push=vm.addFn&&vm.addFn(),vm.drop=vm.dropFn&&vm.dropFn(),vm.months=vm.months||AppConfig.getMonths(),console.log("Got %d Months",vm.months.length),vm.isEditing=!!vm.editMode||!!vm.model.isFresh,vm.editEnable=void 0===typeof vm.editEnable?!0:!!vm.editEnable,vm.revertValue=angular.copy(vm.model),vm.edit=function(){vm.revertValue=angular.copy(vm.model),vm.isEditing=!0},vm.cancel=function(){vm.model.isFresh?vm.dropFn?vm.dropFn(vm.model):vm.model=null:vm.model=angular.copy(vm.revertValue),vm.isEditing=!1},vm.save=function(action){if(vm.experienceForm.$pristine&&vm.model.isFresh)return vm.dropFn?vm.dropFn(vm.model):vm.model=null,vm.experienceForm.$setValidity("model",!0),vm.experienceForm.$setSubmitted(),!0;if(!vm.experienceForm.$valid)return event.stopPropigation(),vm.error="Please correct the errors above before saving this experience",!1;if(vm.model.isFresh=!1,"add"===action){vm.push()}vm.isEditing=!1},vm.getDateRange=function(time){var s,e;return time.start&&(s=moment(time.start))?time.end&&(e=moment(time.end))?s.format("MMMM, YYYY")+" - "+e.format("MMMM, YYYY"):s.format("MMMM, YYYY")+" - present":null}}function ExperienceDirective(){return{priority:0,templateUrl:"modules/drivers/views/templates/experience.client.template.html",replace:!1,restrict:"E",scope:{model:"=",editMode:"=?",editEnable:"=?",addFn:"&?",dropFn:"&?",isLast:"=?"},controller:ExperienceDirectiveController,controllerAs:"vm",bindToController:!0}}ExperienceDirectiveController.$inject=["AppConfig"],angular.module("drivers").directive("osDriverExperience",ExperienceDirective)}(),function(){function DriverFactory($resource){return{ById:$resource("api/drivers/:driverId",{driverId:"@_id"},{update:{method:"PUT"}}),ByUser:$resource("api/users/:userId/driver",{userId:"@_userId"})}}DriverFactory.$inject=["$resource"],angular.module("drivers").factory("Drivers",DriverFactory)}(),function(){function menus(Menus){Menus.addMenuItem("topbar",{title:"Job Postings",state:"jobs.list",userTypes:["driver","owner"],position:10}),Menus.addMenuItem("adminbar",{title:"Jobs",state:"jobs",type:"dropdown",roles:["Admin"]}),Menus.addSubMenuItem("adminbar","jobs",{title:"My Jobs",state:"jobs.mine"}),Menus.addSubMenuItem("adminbar","jobs",{title:"All Jobs",state:"jobs.list"}),Menus.addSubMenuItem("adminbar","jobs",{title:"New Job",state:"jobs.create"})}menus.$inject=["Menus"],angular.module("jobs").run(menus)}(),function(){function handle404s(err,$q){return 404===err.status?null:$q.reject(err)}function moduleConfigResolve(AppConfig,auth){return AppConfig.getModuleConfig(auth.user.type,"jobs")}function companyResolve(rsrc,params,auth){var promise;if(params.companyId){var val=params.companyId;console.log("Searching for company ID: %s",val),promise=rsrc.ById.get({companyId:val}).$promise}else{if(params.jobId)return console.log("Not resolving company - find it in the job"),null;if(params.userId)console.log("Searching for company data for user %s",params.userId),promise=rsrc.ByUser.get({userId:params.userId}).$promise;else{if("owner"!==auth.user.type)return null;console.log("Searching for company data for logged in user"),promise=rsrc.ByUser.get({userId:auth.user._id}).$promise}}return promise.catch(handle404s)}function jobResolve(rsrc,params){var val=params.jobId;return console.log("Searching for job ID: %s",val),val?rsrc.ById.get({jobId:val}).$promise.catch(handle404s):null}function listUserResolve(rsrc,params,auth){var promise;if(auth.user&&"owner"===auth.user.type)promise=rsrc.ByUser.query({userId:auth.user._id,companyId:params.companyId}).$promise;else{if(!auth.user)return[];promise=rsrc.ByUser.query({userId:auth.user._id}).$promise}return promise.catch(handle404s)}function listAllResolve(rsrc){return rsrc.ById.query().$promise}function config($stateProvider){$stateProvider.state("jobs",{"abstract":!0,url:"/jobs",template:'<div ui-view class="content-section"></div>',parent:"fixed-opaque",resolve:{job:function(){},jobs:function(){},company:function(){},config:moduleConfigResolve}}).state("jobs.list",{url:"?itemId&tabName",templateUrl:"modules/jobs/views/list-jobs.client.view.html",controller:"JobsListController",controllerAs:"vm",bindToController:!0,resolve:{jobs:listAllResolve,company:companyResolve},parent:"jobs"}).state("jobs.mine",{url:"/me",templateUrl:"modules/jobs/views/list-jobs.client.view.html",controller:"JobsListController",controllerAs:"vm",bindToController:!0,resolve:{jobs:listUserResolve,company:companyResolve},parent:"jobs"}).state("jobs.create",{url:"/create/:companyId",templateUrl:"modules/jobs/views/edit-job.client.view.html",controller:"JobEditController",controllerAs:"vm",bindToController:!0,resolve:{company:companyResolve},parent:"jobs"}).state("jobs.view",{url:"/:jobId",templateUrl:"modules/jobs/views/view-job.client.view.html",controller:"JobViewController",controllerAs:"vm",bindToController:!0,resolve:{job:jobResolve},parent:"jobs"}).state("jobs.edit",{url:"/:jobId/edit",templateUrl:"modules/jobs/views/edit-job.client.view.html",controller:"JobEditController",controllerAs:"vm",bindToController:!0,resolve:{job:jobResolve},parent:"jobs"}).state("jobs.apply",{url:"/:jobId/apply",parent:"jobs"})}companyResolve.$inject=["Companies","$stateParams","Authentication"],jobResolve.$inject=["Jobs","$stateParams"],listUserResolve.$inject=["Jobs","$stateParams","Authentication"],listAllResolve.$inject=["Jobs"],moduleConfigResolve.$inject=["AppConfig","Authentication"],config.$inject=["$stateProvider"],angular.module("jobs").config(config)}(),function(){function JobEditController($stateParams,$state,$log,Authentication,Jobs,job,company){function activate(){$state.is("jobs.create")?(vm.pageTitle="Post new job",vm.company||($log.error("[JobEditCtrl] Company must be defined when posting a new job, returning home"),$state.go("home")),vm.job={payRate:{min:null,max:null},requirements:"<ul><li></li></ul>",location:[defaultAddress],postStatus:"draft",companyId:!!vm.company&&vm.company._id||$stateParams.companyId}):$state.is("jobs.edit")&&(vm.job.location||(vm.job.location=[]),0===vm.job.location.length&&vm.job.location.push(defaultAddress))}function cancel(){$state.go("jobs.view",{jobId:vm.job._id})}function submit(){return vm.disabled=!0,vm.jobForm.$invalid?(vm.error="Please correct all errors above",vm.disabled=!1,!1):(vm.error=vm.success=null,$state.is("jobs.create")?vm.create():$state.is("jobs.edit")?vm.update():(vm.disabled=!1,$log.warn('Unknown Form Mode: "%s"',vm.mode),void(vm.error="Unknown Form Mode")))}function create(){if(vm.job.companyId=vm.job.companyId||vm.company._id,!vm.job.companyId)return $log.error("Cannot create a job without a company ID!"),void(vm.error="Company is not defined, please try again later");var job=new Jobs.ById(vm.job);job.$save(function(response){$state.go("jobs.view",{jobId:response._id})},function(errorResponse){errorResponse.data.message?vm.error=errorResponse.data.message:(vm.error="Unable to save changes at this time",$log.error("[JobEditCtrl] Error Saving New Job: %o",job,errorResponse)),vm.disabled=!1})}function update(){var job=vm.job;job.$update(function(response){$state.go("jobs.view",{jobId:response._id})},function(errorResponse){errorResponse.data.message?vm.error=errorResponse.data.message:(vm.error="Unable to save changes at this time",$log.error("[JobEditCtrl] Error Saving New Job: %o",job,errorResponse)),vm.disabled=!1})}var vm=this;vm.authentication=Authentication,vm.user=Authentication.user,vm.cancel=cancel,vm.submit=submit,vm.create=create,vm.update=update,vm.enableEdit=!1,vm.showPreview=!1,vm.job=job,vm.company=company||job&&"object"==typeof job.company&&job.company||void 0;var defaultAddress={type:"main",streetAddresses:[],zipOnly:!0};vm.types=["main","home","business","billing","other"],vm.pageTitle="Edit Job",activate()}JobEditController.$inject=["$stateParams","$state","$log","Authentication","Jobs","job","company"],angular.module("jobs").controller("JobEditController",JobEditController)}(),function(){function JobViewController($stateParams,$state,$log,Authentication,job){function activate(){"driver"===vm.user.type?vm.enableEdit=!1:"owner"===vm.user.type&&(vm.enableEdit=vm.user._id===(vm.company&&(vm.company.owner._id||vm.company.owner))),$log.debug("[JobViewCtrl.activate] %s enableEdit: %o",vm.user.type,vm.enableEdit)}var vm=this;vm.authentication=Authentication,vm.user=Authentication.user,vm.enableEdit=!1,vm.job=job,vm.company=job&&"object"==typeof job.company&&job.company||void 0,activate(),vm.delist=function(job){job=job||vm.job,job||$log.debug("Cannot delist without a job"),job.delist()},vm.remove=function(job){if(job){job.$remove();for(var i in vm.jobs)vm.jobs[i]===job&&vm.jobs.splice(i,1)}else vm.job.$remove(function(){$state.go("home")})}}JobViewController.$inject=["$stateParams","$state","$log","Authentication","job"],angular.module("jobs").controller("JobViewController",JobViewController)}(),function(){function JobsListController($state,auth,jobs,company,moduleConfig){function activate(){$state.is("jobs.list")?vm.listTitle="Outset Job Listings":$state.is("jobs.mine")&&(vm.listTitle="driver"===vm.user.type?"My Jobs":"My Job Postings"),"driver"===vm.user.type?vm.enableEdit=!1:"owner"===vm.user.type?vm.enableEdit=vm.user._id===(vm.company&&(vm.company.owner._id||vm.company.owner)):vm.user.isAdmin&&(vm.enableEdit=!0)}var vm=this;vm.auth=auth,vm.user=auth.user,vm.config=moduleConfig||{},vm.enableEdit=!!vm.config.edit,vm.jobs=jobs,vm.company=company,vm.subtitle=vm.jobs.length+" Open Jobs.",vm.bodyCopy="driver"===vm.auth.user.type?{heading:"Jobs are <em>Coming Soon!</em>",intro:"<p>Before opening up the site to employers, we are giving you time to build your profile and get your reportsready.</p>",bullets:["The more information you provide, the better your chances","Applicants who have reports in their profile are <u>8x more likely</u> to be hired!","You always have total control over who sees your information"],wrap:"<p>So put your best foot forward, and we’ll let you know when its time to apply!</p>",homeTxt:"Back to your Profile Page"}:"owner"===vm.auth.user.type?{heading:"Your Applicant Tracking System, all in one place!",intro:"<p>Once prospective employees have applied to your jobs, this will be the center of your applicant tracking.</p>",bullets:[],wrap:"<p>So post your jobs, optimize their appearance and details, and come back here once the applications start coming in!</p>",homeTxt:"Return to your Company Dashboard"}:{},activate()}JobsListController.$inject=["$state","Authentication","jobs","company","config"],angular.module("jobs").controller("JobsListController",JobsListController)}(),function(){function JobListController(Jobs,$log,$state,config,auth,params){function activate(){vm.companyId||vm.driverId||vm.srcJobs||($log.warn("[%s] should Specify a company or driver, or set srcJobs pre-load","JobListController"),$state.includes("jobs")&&($log.error("[%s] Routing back to user's home page","JobListController"),$state.go("home"))),vm.companyId&&vm.driverId&&$log.warn("[%s] Both company and driver specified, defaulting to company","JobListController"),vm.srcJobs&&vm.srcJobs.length>=0?vm.jobs=vm.srcJobs:vm.companyId?(vm.filter.company={_id:vm.companyId},vm.myJobsOnly=!0,vm.jobs=Jobs.ByCompany.query({companyId:vm.companyId})):vm.jobs=vm.driverId?Jobs.ByUser.query({userId:vm.driverId}):[],vm.visibleId&&!_.find(vm.jobs,{_id:vm.visibleId})&&(vm.visibleId=vm.visibleTab=null,$state.transitionTo("jobs.list",{itemId:vm.visibleId,tabName:vm.visibleTab}))}var vm=this;vm.visibleId=params.itemId,vm.visibleTab=params.tabName,vm.config=vm.config||config.getModuleConfig(auth.user.type,"jobs").then(function(success){vm.config=success}),config.getAsync("debug").then(function(success){vm.debug=!!success
}),vm.showSearch=void 0===vm.showSearch?!0:!!vm.showSearch,vm.limitTo=vm.limitTo||100,vm.filter={},vm.user=auth.user,vm.myJobsOnly=!1,vm.showMore=function(){vm.limitTo+=100},vm.toggleFilterMine=function(){vm.filters.mine?vm.filter.hasOwnProperty("company")&&delete vm.filter.company:vm.filter.company={_id:vm.companyId},vm.filters.clear=!(vm.filters.today||vm.filters.week||vm.filters.unseen||!vm.filters.mine)};var filterProto={numDays:0,day:!1,week:!1,unseen:!1,mine:!1,clear:!0};vm.filters=_.clone(filterProto),vm.toggleFilter=function(filter){switch(filter){case"today":1===vm.filters.numDays?vm.filters.numDays=0:(vm.filters.week=!1,vm.filters.numDays=1,vm.filters.clear=!1);break;case"week":7===vm.filters.numDays?vm.filters.numDays=0:(vm.filters.day=!1,vm.filters.numDays=7,vm.filters.clear=!1);break;case"unseen":break;case"clear":return void(vm.filters=_.clone(filterProto))}},vm.predicate="posted",vm.reverse=!0,vm.toggleSort=function(field,reverse){field===vm.predicate?vm.reverse=!vm.reverse:(vm.predicate=field,vm.reverse=!!reverse)},vm.searchTermFilter=function(job){if(!vm.searchTerms)return!0;var terms=vm.searchTerms.split(" "),reg=new RegExp("(?="+terms.join(")(?=")+")","i");return job.searchText=job.searchText||[job.name,job.description,job.requirements].join(" "),reg.test(job.searchText)},vm.showTab=function(jobId,tabName,count){return"applicants"===tabName&&count?$state.go("applications.list",{itemId:jobId,tabName:tabName}):(vm.visibleId&&vm.visibleTab===tabName?vm.visibleId=vm.visibleTab=null:(vm.visibleId=jobId,vm.visibleTab=tabName),void $state.transitionTo($state.current,{itemId:vm.visibleId,tabName:vm.visibleTab}))},activate()}function JobListDirective(){return{templateUrl:"modules/jobs/views/templates/job-list.client.template.html",restrict:"E",replace:!1,scope:{header:"@?",companyId:"@?",driverId:"@?",srcJobs:"=?",showPost:"=?",limitTo:"=?",config:"=?",showSearch:"=?"},controller:"JobListController",controllerAs:"vm",bindToController:!0}}JobListController.$inject=["Jobs","$log","$state","AppConfig","Authentication","$stateParams"],angular.module("jobs").controller("JobListController",JobListController).directive("osJobList",JobListDirective),angular.module("core").filter("withinPastDays",function(){return function(items,field,days){if(!days)return items.filter(function(){return!0});var timeStart=moment().subtract(days,"days");return console.log("filtering back %s days to %s",days,timeStart.format("L")),items.filter(function(item){return moment(item[field]).isAfter(timeStart)})}})}(),function(){function JobItemController(Auth){var dm=this;dm.auth=Auth,dm.displayMode="all",dm.showSection=function(section,only){return only||"all"!==dm.displayMode?dm.displayMode===section:!0},dm.setDisplay=function(section){dm.displayMode=section||"all"}}function JobDirective(){return{scope:{job:"=",inline:"=?",editSref:"@?",showEdit:"=?"},templateUrl:"modules/jobs/views/templates/job.client.template.html",restrict:"E",replace:!0,controller:JobItemController,controllerAs:"dm",bindToController:!0}}JobItemController.$inject=["Authentication"],angular.module("jobs").directive("osJob",JobDirective)}(),function(){function NewApplicationDirective(){var ddo;return ddo={transclude:!0,templateUrl:"modules/jobs/views/templates/os-new-application-modal.client.template.html",restrict:"EA",scope:{job:"=",title:"@?"},controller:"NewApplicationModalController",controllerAs:"vm",bindToController:!0}}function NewApplicationModalController($modal,$log){var vm=this;vm.isOpen=!1,vm.showModal=function(size){var modalInstance=$modal.open({templateUrl:"applyModal.html",controller:"ApplicationCreateController",controllerAs:"vm",size:size||"lg",resolve:{job:function(){return vm.job}}});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.selected=result},function(result){$log.info("Modal result %o",result),$log.info("Modal dismissed at: "+new Date)}),modalInstance.opened.then(function(args){$log.info("Applying to Job Modal Args: %o",args),vm.isOpen=!0})}}function ApplicationCreateController($scope,$modalInstance,$state,$log,Applications,job){function createApplication(){if(validateApplication(!0)){$log.debug("[AppController.create]","Creating new Application");var application=new Applications.ByJob({status:"submitted",agreement:vm.application.termsAccepted});saveApplication(application)}}function saveDraft(){if(validateApplication(!1)){$log.debug("[AppController.saveDraft]","Creating new Draft Application");var application=new Applications.ById({status:"draft"});saveApplication(application)}}var vm=this;$scope.vm=vm,vm.createApplication=createApplication,vm.saveDraft=saveDraft,vm.job=job,vm.application={},vm.placeholders={messageHeading:"Introduction",messageSubHeading:"This will serve as your introduction to the employer",intro:"Write a short message explaining why you're a good fit for the position.",errors:{noJob:"You must select a job to apply to first, or you can save as a draft",noMessage:"Please enter a message to the employer before submitting your application",terms:"You must accept the terms before submitting your application"},title:"New job application",disclaimer:"Sample Disclaimer Text goes here ... Outset reserves the right to modify these Terms from time to time at our sole discretion and without any notice. Changes to our Terms become effective on the date they are posted and your continued use of Outset after any changes to Terms will signify your agreement to be bound by them."};var validateApplication=function(termsRequired){return vm.job&&vm.job._id?termsRequired&&!vm.application.termsAccepted?(vm.error=vm.placeholders.errors.terms,!1):vm.applicantForm.$invalid?(vm.error=vm.application.message?"Please correct the errors above in order to submit your application":vm.placeholders.errors.noMessage,!1):!0:(vm.error=vm.placeholders.errors.noJob,!1)},saveApplication=function(application){application.jobId=vm.job&&vm.job._id&&vm.job._id,application.introduction=vm.application.message,application.agreement=vm.application.termsAccepted,application.$save(function(response){$modalInstance.close(response._id),$state.go("applications.view",{applicationId:response._id})},function(errorResponse){vm.error=errorResponse.data.message})}}NewApplicationModalController.$inject=["$modal","$log"],ApplicationCreateController.$inject=["$scope","$modalInstance","$state","$log","Applications","job"],angular.module("jobs").directive("osNewApplicationModal",NewApplicationDirective).controller("NewApplicationModalController",NewApplicationModalController).controller("ApplicationCreateController",ApplicationCreateController)}(),function(){function JobsService($resource){return{ById:$resource("api/jobs/:jobId",{jobId:"@_id"},{update:{method:"PUT"}}),ByUser:$resource("api/users/:userId/jobs",{userId:"@userId"}),ByCompany:$resource("api/companies/:companyId/jobs",{companyId:"@companyId"}),listByCompany:function(query){var rsrc=$resource("/api/companies/:companyId/jobs/applications",{companyId:"@companyId"},{query:{method:"GET",isArray:!0}});return rsrc.query(query).$promise}}}JobsService.$inject=["$resource"],angular.module("jobs").factory("Jobs",JobsService)}(),function(){function EndorsementDisplayDirective(){var ddo;return ddo={template:template,restrict:"E",scope:{endorsements:"=model"},controller:function(){var vm=this;vm.endorsementBase=[{key:"HME",description:"Hazardous Materials",value:!1},{key:"P",description:"Passenger",value:!1},{key:"S",description:"School Bus",value:!1},{key:"T",description:"Double-Triple Trailer",value:!1},{key:"N",description:"Tank Vehicle",value:!1},{key:"M",description:"Motorcycle",value:!1}],vm.getEndorsementName=function(key){var name=_.find(vm.endorsementBase,{key:key});return name.description}},controllerAs:"vm",bindToController:!0}}var template='<span ng-repeat="(name, val) in vm.endorsements" ng-init="description = vm.getEndorsementName(name)" class="endorsement label label-success" tooltip-popup-delay="750" tooltip="{{description}}">{{name}}&nbsp;</span>';angular.module("license").directive("osetListEndorsements",EndorsementDisplayDirective)}(),function(){function EditLicenseController($scope,$log,appConfig){var vm=this;vm.licenseTypes=["Standard","Commercial"],vm.ratings=["A","B","C","D","G"],vm.endorsements=[{key:"HME",description:"Hazardous Materials",value:!1},{key:"P",description:"Passenger",value:!1},{key:"S",description:"School Bus",value:!1},{key:"T",description:"Double-Triple Trailer",value:!1},{key:"N",description:"Tank Vehicle",value:!1},{key:"M",description:"Motorcycle",value:!1}],_.isEmpty(vm.license)?$log.warn("[EditLicense] Assuming we are creating a new license. Is this OK?"):$log.debug("[EditLicense] Displaying License for editing: %o",vm.license),vm.states=appConfig.getStates(),vm.debug=appConfig.get("debug"),vm.dateFormat="MM/DD/YYYY",vm.submit=function(){}}function EditLicenseDirective(){var ddo;return ddo={templateUrl:"modules/license/views/license.client.template.html",restrict:"E",scope:{license:"=?model",user:"=?"},controller:"EditLicenseController",controllerAs:"vm",bindToController:!0}}EditLicenseController.$inject=["$scope","$log","AppConfig"],angular.module("license").controller("EditLicenseController",EditLicenseController).directive("osEditLicense",EditLicenseDirective)}(),function(){function gmapApiProvider(){{var config={key:"AIzaSyDb2fSf75lhB2A0lBXeZ_89iXDhO-pmLoY",v:"3.18",libraries:"weather,geometry,visualization"},configs=["v"+config.v,"key="+config.key,"libraries="+config.libraries];gmapsApiBase+configs.join("&")}}var gmapsApiBase="//maps.googleapis.com/maps/api/js?";angular.module("location").config(gmapApiProvider)}(),function(){function LocationController($scope,$log){function getSearchString(){var str="";return vm.showCircle=vm.circle,vm.showMarker=vm.marker,vm.radiusMod=vm.radMod,str+=vm.address&&vm.address.city?(str?", ":"")+vm.address.city:"",str+=vm.address&&vm.address.state?(str?", ":"")+vm.address.state:"",str.trim()?vm.radiusMod=vm.radMod:(console.log("Mapping to string: %s",str.trim()),vm.address&&vm.address.zipCode?(str=vm.address.zipCode,vm.radiusMod=1.5*vm.radMod):vm.zipCode?(str=vm.zipCode,vm.radiusMod=2*vm.radMod,vm.showCircle=!0,vm.showMarker=!1):(str="United States",vm.showCircle=!1,vm.showMarker=!1)),$log.debug("new search : %s",str),str.trim()}function processChange(newVal,oldVal){if(newVal!==oldVal){var search=getSearchString();vm.search!==search&&(vm.search=search,vm.range&&vm.range.setMap(null),vm.mapMarker&&vm.mapMarker.setMap(null),vm.geoCode())}}var vm=this;switch(vm.search="United States",vm.range=null,vm.precision=vm.precision||"approximate",vm.precision){case"approximate":vm.circle=!0,vm.marker=!1,vm.radMod=1.25;break;case"exact":vm.marker=!0,vm.circle=!1,vm.radMod=1;break;default:vm.circle=!0,vm.marker=!1,vm.radMod=1}!vm.address&&vm.addresses&&vm.addresses.length&&(vm.address=vm.addresses[0]),vm.geoCode=function(){vm.search&&vm.search.length>0&&(vm.geocoder||(vm.geocoder=new vm.gmaps.Geocoder),vm.geocoder.geocode({address:vm.search},function(results,status){if(status===vm.gmaps.GeocoderStatus.OK){$log.info("[LocationCtrl] OK - %d results. First location: %o",results.length,results[0]);var result=results[0],loc=result.geometry.location;vm.search=result.formatted_address,vm.gotoLocation(loc,result.geometry.viewport)}else alert("Sorry, this search produced no results.")}))},vm.gotoLocation=function(center,viewport){vm.map.setCenter(center);var r;viewport&&(vm.map.fitBounds(viewport),r=vm.radiusMod*Math.max(google.maps.geometry.spherical.computeDistanceBetween(viewport.getSouthWest(),viewport.getCenter()),google.maps.geometry.spherical.computeDistanceBetween(viewport.getNorthEast(),viewport.getCenter()))),r&&vm.showCircle&&(vm.range=new google.maps.Circle({strokeColor:"#0000FF",strokeOpacity:.5,strokeWeight:2,fillColor:"#0000FF",fillOpacity:.25,center:viewport.getCenter(),map:vm.map,radius:r})),vm.showMarker&&(vm.mapMarker=new google.maps.Marker({position:center,map:vm.map}))},$scope.$on("mapInitialized",function(event,map){vm.map=map,vm.gmaps=$scope.google.maps,vm.search=getSearchString(),vm.geoCode()}),$scope.$watch("vm.address",processChange),$scope.$watch("vm.address.zipCode",processChange),$scope.$watch("vm.address.city",processChange),$scope.$watch("vm.address.state",processChange),$scope.$watch("vm.zipCode",processChange)}LocationController.$inject=["$scope","$log"],angular.module("location").controller("LocationController",LocationController)}(),function(){function LocationDirective(){return{priority:0,template:'<map disable-default-u-i="true" scrollwheel="false" draggable="false" zoom-control="true"></map>',replace:!1,transclude:!1,restrict:"E",scope:{address:"=?",addresses:"=?",center:"@?",style:"@?",zipCode:"=?",precision:"=?"},controller:"LocationController",controllerAs:"vm",bindToController:!0}}angular.module("location").directive("osMapLocation",LocationDirective)}(),function(){function PaymentController($state,Payments,tokenResponse,report,applicant){var vm=this;console.log("got server response: %o",tokenResponse),vm.token=tokenResponse.clientToken,vm.applicant=applicant,vm.report=report,vm.price=vm.report.promo||vm.report.price,braintree.setup(vm.token,"dropin",{container:"dropin",form:"paymentAuthForm",paymentMethodNonceReceived:function(event,nonce){event.preventDefault(),vm.postPayment(event,nonce)}}),vm.postPayment=function(event,nonce){if(vm.processing)return console.log("Payment already in process"),void event.preventDefault();vm.processing=!0;var opts={nonce:nonce,sku:vm.report.sku,applicantId:vm.applicant._id,price:vm.price},payment=new(Payments.Nonce())(opts);payment.$save(function(response){vm.setSuccess(response)},function(errorResponse){vm.processing=!1,vm.error=errorResponse.status?errorResponse.data&&errorResponse.data.message||"Sorry, an error occured. Please try again later":"Sorry, but an unexpected error has occured. Please try again later"})},vm.getPriceString=function(price){var base=Number(price),next=base.toFixed(2);return"$"+next},vm.setSuccess=function(response){console.log("Holy crap! Response: %o",response),vm.success="Order successfully placed. We will let you know as soon as your reports are ready!",vm.report=response}}PaymentController.$inject=["$state","Payments","token","report","applicant"],angular.module("payments").controller("PaymentController",PaymentController)}(),function(){function PaymentService($resource){var _this=this;return _this.data={getToken:function(){var rsrc=$resource("/api/payments/token",{},{get:{method:"GET",isArray:!1}});return rsrc.get()},Nonce:function(){return $resource("/api/reports/types/:sku/create",{sku:"@sku",nonce:"@nonce",price:"@price",applicantId:"@applicantId",payment_nonce_id:"payment_nonce_id"},{$save:{method:"POST"}})}},_this.data}PaymentService.$inject=["$resource"],angular.module("payments").factory("Payments",PaymentService)}(),function(){function ScheduleViewController(){}angular.module("schedule").controller("ScheduleViewController",ScheduleViewController)}(),function(){function ScheduleViewDirective(){return{templateUrl:"modules/schedule/views/view-schedule.client.view.html",restrict:"E",scope:{model:"=",title:"@?"},controller:"ScheduleViewController",controllerAs:"vm",bindToController:!0}}angular.module("schedule").directive("osViewSchedule",ScheduleViewDirective)}(),function(){function config($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}function menus(Menus){Menus.addMenuItem("adminbar",{title:"Users",state:"users",type:"dropdown",roles:["admin"]}),Menus.addSubMenuItem("adminbar","users",{title:"List Users",state:"users.list"}),Menus.addSubMenuItem("adminbar","users",{title:"My User",state:"users.view"})}config.$inject=["$httpProvider"],menus.$inject=["Menus"],angular.module("users",["core"]).config(config).run(menus)}(),function(){angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html",parent:"fixed-opaque"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html",resolve:{user:["Authentication",function(auth){return auth.user}]},controller:["Authentication","user",function(auth,user){var vm=this;vm.user=user,vm.successFunction=function(fileItem,response){vm.user=response,vm.imageURL=vm.user.profileImageURL,auth.user.profileImageURL=response.profileImageURL,vm.showPhotoEdit=!1}}],controllerAs:"vm",bindToController:!0}).state("users",{"abstract":!0,url:"/users",template:'<div ui-view class="content-section"></div>',parent:"full-opaque"}).state("users.list",{url:"",templateUrl:"modules/users/views/list-users.client.view.html",parent:"users"}).state("users.view",{url:"/:userId",templateUrl:"modules/users/views/settings/profile.client.view.html",controller:"ProfileController",parent:"users"}).state("authentication",{url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>",parent:"fixed-opaque"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}])}(),function(){angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$state","Authentication","$timeout",function($scope,$stateParams,$http,$state,Authentication,$timeout){$scope.authentication=Authentication,$scope.authentication.user&&$state.go("home"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){function updateMsg(ct){return ct--,$scope.msg=" in "+ct,ct>0?$timeout(function(){updateMsg(ct)},1e3):void $state.go("intro")}$scope.credentials=null,$scope.ct=5,$scope.success=response.message,$scope.msg=" in "+$scope.ct,updateMsg($scope.ct)}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){function updateMsg(ct){return ct--,$scope.msg=" in "+ct,ct>0?$timeout(function(){updateMsg(ct)},1e3):void $state.go("home")}$scope.passwordDetails=null,$scope.success="Password Changed Successfully!",Authentication.user=response,$state.is("password.reset.form")&&updateMsg(6)}).error(function(response){console.log("hmmm, that was'nt suppoased to happen: ",response),$scope.error=response.data&&response.data.message||response.message||"Sorry, an error occurred"})}}])}(),function(){function ProfileController($scope,$state,$stateParams,$location,$log,Profiles,Authentication){this.header="User Profile",this.init=function(){if($stateParams.userId){this.user=Profiles.get({userId:$stateParams.userId});var promise=this.user.$promise;promise.then(this.setProfile,function(err){$log.debug("Error retrieving profile",err)})}else this.user=Authentication.user,this.header=this.user.displayName+" <small>(you)</small>",this.showEditLink=!0},this.setProfile=function(profile){$scope.profile=profile,$scope.header=profile.displayName,$scope.showEditLink=profile._id===Authentication.user._id},this.initList=function(){Authentication.isAdmin()?this.users=Profiles.query():$location.path("/")}}ProfileController.$inject=["$scope","$state","$stateParams","$location","$log","Profiles","Authentication"],angular.module("users").controller("ProfileController",ProfileController)}(),function(){angular.module("users").controller("ChangePasswordController",["$scope","$http","Users","Authentication","$state","$timeout",function($scope,$http,Users,Authentication,$state,$timeout){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){function updateMsg(ct){return ct--,$scope.msg=" in "+ct,ct>0?$timeout(function(){updateMsg(ct)},1e3):void $state.go("home")}$scope.success="Password successfully changed.",$scope.passwordDetails=null,$scope.ct=5,$scope.msg=" in "+$scope.ct,updateMsg($scope.ct)}).error(function(response){$scope.error=response.message})}}])}(),function(){function ProfilePictureController($timeout,$window,FileUploader,$log,$attrs){function activate(){if(!vm.model)return $log.error("[PictureUploader] Must specify a model"),void(vm.initialized=!1);if(vm.imageURL=vm.model.profileImageURL,!vm.mode&&!vm.apiUrl)return void(vm.initialized=!1);if(vm.mode)switch(vm.mode.toLowerCase()){case"user":vm.uploadUrl="api/users/picture";break;case"company":vm.uploadUrl="api/companies/"+vm.model._id+"/picture";break;default:$log.warn("[PictureUploader] Unknown Mode: %s. Defaulting to user",vm.mode)}else vm.apiUrl&&($log.debug("[PictureUploader] Mode not specified, using URL: %s",vm.apiUrl),vm.uploadUrl=vm.apiUrl);vm.uploader=new FileUploader({url:vm.uploadUrl}),vm.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),vm.uploader.onBeforeUploadItem=function(item){var blob=dataURItoBlob(vm.useCropped?vm.croppedImage:vm.newImage);item._file=blob},vm.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),vm.success=vm.error=null,fileReader.onload=function(fileReaderEvent){$timeout(function(){vm.newImage=fileReaderEvent.target.result},0)}}},vm.uploader.onSuccessItem=function(fileItem,response,status,headers){vm.success=!0,vm.model=response,angular.isDefined($attrs.successCallback)&&vm.successCallback()(fileItem,response,status,headers),vm.cancelUpload()},vm.uploader.onErrorItem=function(fileItem,response,status,headers){vm.cancelUpload(),angular.isDefined($attrs.failCallback)&&vm.failCallback()(fileItem,response,status,headers),vm.error=response.message},vm.initialized=!0,$log.debug("[PictureUploader] Successfuly initialized Picture Uploader")}function saveCrop(){vm.useCropped=!0,vm.isCropping=!1}function uploadProfilePicture(){vm.success=vm.error=null,vm.uploader.uploadAll()}function cancelUpload(){vm.uploader.clearQueue(),vm.imageURL=vm.model.profileImageURL,vm.success=vm.error=null,vm.newImage=vm.croppedImage=null,vm.isCropping=vm.useCropped=!1}var vm=this;vm.uploader=null,vm.uploadUrl="api/users/picture",vm.newImage=null,vm.croppedImage=null,vm.isCropping=!1,vm.useCropped=!1,vm.saveCrop=saveCrop,vm.shape=vm.shape||"circle",vm.uploadProfilePicture=uploadProfilePicture,vm.cancelUpload=cancelUpload,activate(),vm.startCrop=function(){vm.isCropping=!0};var dataURItoBlob=function(dataURI){for(var binary=atob(dataURI.split(",")[1]),mimeString=dataURI.split(",")[0].split(":")[1].split(";")[0],array=[],i=0;i<binary.length;i++)array.push(binary.charCodeAt(i));return new Blob([new Uint8Array(array)],{type:mimeString})}}ProfilePictureController.$inject=["$timeout","$window","FileUploader","$log","$attrs"],angular.module("users").controller("ChangeProfilePictureController",ProfilePictureController)}(),function(){function EditProfileController($http,$location,$log,Users,Authentication){var vm=this;vm.profile||$log.warn("[EditProfileController] No profile passed to osEditProfile Directive"),vm.profile=vm.profile||Authentication.user,$log.info("[EditProfileController] Profile %o",vm.profile),vm.updateUserProfile=function(isValid){if(isValid){vm.success=vm.error=null;var user=new Users(vm.profile);user.$update(function(response){vm.success=!0,vm.profile=Authentication.user=response,vm.userForm.$setPristine()},function(response){vm.error=response.data.message})}else vm.error=vm.userForm.$error()},vm.cancel=function(){alert("Cancel not yet implemented")}}EditProfileController.$inject=["$http","$location","$log","Users","Authentication"],angular.module("users").controller("EditProfileController",EditProfileController)}(),function(){angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication","$state",function($scope,$http,$location,Users,Authentication,$state){$state.go("settings.profile"),$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}])}(),function(){function SettingsController($stateParams,$location,$log,Authentication){this.user=Authentication.user,this.user||$location.path("/"),$stateParams.userId&&($stateParams.userId===this.user._id||this.user.isAdmin||($log.warn("[SettingsController] Non-Admin tried to access another user's settings"),$location.path("/")))}SettingsController.$inject=["$stateParams","$location","$log","Authentication"],angular.module("users").controller("SettingsController",SettingsController)}(),function(){function LoginModalDirective(){return{transclude:!0,templateUrl:"modules/users/views/templates/login-modal.client.template.html",restrict:"EA",scope:{signin:"&",title:"@?",srefText:"@?",job:"=?",redirect:"=?"},controller:"LoginModalController",controllerAs:"vm",bindToController:!0}}function LoginModalController($scope,$modal,$log,$attrs){var vm=this;vm.isOpen=!1,angular.isDefined($attrs.redirect)?($log.debug("using existing redirect: %o",vm.redirect),vm.redirect=vm.redirect):angular.isDefined($attrs.job)&&(vm.redirect={state:"jobs.view",params:{jobId:vm.job.id},text:vm.srefText}),vm.showLogin=function(){var modalInstance=$modal.open({templateUrl:"loginModal.html",controller:"LoginController",resolve:{srefRedirect:function(){return vm.redirect}},controllerAs:"vm",bindToController:!0});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})}}function LoginController($http,$state,$modalInstance,$log,Authentication,srefRedirect){var vm=this;vm.auth=Authentication,vm.srefRedirect=srefRedirect,vm.credentials={},vm.signin=function(){var credentials=vm.credentials||this.credentials;$http.post("/api/auth/signin",credentials).success(function(response){vm.auth.user=response,$log.debug("Successfully logged in"),$modalInstance.close("success"),vm.srefRedirect?$state.go(vm.srefRedirect.state,vm.srefRedirect.params,{reload:!0}):$state.is("intro")?$state.go("home"):($log.debug("currently at state `%s`, staying here and not redirecting home",$state.$current.name),$state.go($state.current,{},{reload:!0}))}).error(function(response){console.error(response.message),vm.error=response.message})}}LoginController.$inject=["$http","$state","$modalInstance","$log","Authentication","srefRedirect"],LoginModalController.$inject=["$scope","$modal","$log","$attrs"],angular.module("users").directive("loginModal",LoginModalDirective).controller("LoginController",LoginController).controller("LoginModalController",LoginModalController)}(),function(){angular.module("users").directive("osEditProfile",[function(){return{scope:{profile:"=",editFn:"&",cancelFn:"&",updateFn:"&"},templateUrl:"modules/users/views/templates/edit-settings.client.template.html",restrict:"E",replace:!0,controller:"EditProfileController",controllerAs:"vm",bindToController:!0}}])}(),function(){angular.module("users").directive("osProfile",[function(){return{scope:{profile:"=",title:"@?",editable:"=?",editFn:"&?"},templateUrl:"modules/users/views/templates/user-profile.client.template.html",restrict:"E",replace:!0,controller:"OsProfileController",controllerAs:"ctrl",bindToController:!0}}]).controller("OsProfileController",["$log",function(){this.edit=this.editFn}]).directive("osProfileBadge",[function(){return{scope:{profile:"="},templateUrl:"modules/users/views/templates/user-badge.client.template.html",restrict:"E",replace:!0}}])}(),function(){function PhotoModalDirective(){return{transclude:!0,replace:!0,templateUrl:"modules/users/views/settings/picture-modal.client.template.html",restrict:"EA",scope:{title:"@?"},controller:"PhotoModalController"}}function PhotoModalController($scope,$modal,$log){$scope.isOpen=!1,$scope.show=function(){var modalInstance=$modal.open({templateUrl:"uploadPictureModal.html",controller:function(){}});modalInstance.result.then(function(result){$log.info("Modal result %o",result),$scope.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),$scope.isOpen=!1}),modalInstance.opened.then(function(){$scope.isOpen=!0})}}function PictureUploadDirective(){var ddo={restrict:"E",templateUrl:"/modules/users/views/settings/picture-upload.client.template.html",scope:{model:"=",title:"@",mode:"@?",shape:"@?",apiUrl:"@?",successCallback:"&?",failCallback:"&?"},controller:"ChangeProfilePictureController",controllerAs:"vm",bindToController:!0};return ddo}PhotoModalController.$inject=["$scope","$modal","$log"],angular.module("users").directive("osPhotoModal",PhotoModalDirective).controller("PhotoModalController",PhotoModalController).directive("osPictureUploader",PictureUploadDirective)}(),function(){function SignupModalDirective(){return{transclude:!0,templateUrl:"modules/users/views/templates/signup-modal.client.template.html",restrict:"EA",scope:{signin:"&",title:"@?",signupType:"@?",srefText:"@?",job:"=?"},controller:"SignupModalController",controllerAs:"vm",bindToController:!0}}function SignupModalController($modal,$log,$attrs){var vm=this;vm.isOpen=!1,angular.isDefined($attrs.job)&&(vm.redirect={state:"jobs.view",params:{jobId:vm.job.id},text:vm.srefText}),vm.showSignup=function(){var modalInstance=$modal.open({templateUrl:"signupModal.html",controller:"SignupController",size:"lg",resolve:{signupType:function(){return vm.signupType},srefRedirect:function(){return vm.redirect}},controllerAs:"vm",bindToController:!0});modalInstance.result.then(function(result){$log.info("Modal result %o",result),vm.isOpen=!1},function(){$log.info("Modal dismissed at: "+new Date),vm.isOpen=!1}),modalInstance.opened.then(function(){vm.isOpen=!0})}}function SignupController($http,$state,$modalInstance,$log,Authentication,signupType,srefRedirect,$document){var vm=this;vm.auth=Authentication,vm.credentials={signupType:signupType,terms:""},vm.srefRedirect=srefRedirect,vm.extraText=vm.srefRedirect&&vm.srefRedirect.text||null,vm.selectType=function(type){vm.credentials.signupType=type,$document.scrollTopAnimated(0,300)},vm.signup=function(event){return vm.credentials.terms?vm.credentials.password!==vm.credentials.confirmPassword?($log.debug("passwords do not match, yo!"),vm.error="Passwords to not match. Please enter them again",!1):vm.signupForm.$invalid?(vm.error="Please fill in all fields above",!1):($log.debug("assigning email to username"),vm.credentials.username=vm.credentials.email,vm.credentials.type=vm.credentials.signupType,void $http.post("/api/auth/signup",vm.credentials).success(function(response){vm.auth.user=response,$log.debug("Successfully created %o USER Profile",response.type),$modalInstance.close(response.type),vm.srefRedirect?$state.go(vm.srefRedirect.state,vm.srefRedirect.params,{reload:!0}):$state.is("intro")?$state.go("home"):($log.debug("currently at state `%s`, staying here and not redirecting home",$state.$current.name),$state.go($state.current,{},{reload:!0}))
}).error(function(response){console.error(response.message),vm.error=response.message})):(vm.error="Please agree to the terms and conditions before signing up",event.preventDefault(),!1)}}var CompareToDirective=function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(scope,element,attributes,ngModel){ngModel.$validators.compareTo=function(modelValue){return modelValue===scope.otherModelValue},scope.$watch("otherModelValue",function(){ngModel.$validate()})}}};SignupController.$inject=["$http","$state","$modalInstance","$log","Authentication","signupType","srefRedirect","$document"],SignupModalController.$inject=["$modal","$log","$attrs"],angular.module("users").directive("signupModal",SignupModalDirective).controller("SignupModalController",SignupModalController).controller("SignupController",SignupController).directive("compareTo",CompareToDirective)}(),function(){function AuthenticationService(){function isLoggedIn(){return!!_this._data.user}function isAdmin(){var user=_this._data.user;return!!user&&-1!==user.roles.indexOf("admin")}var _this=this;return _this._data={user:window.user,isLoggedIn:isLoggedIn,isAdmin:isAdmin},_this._data}angular.module("users").factory("Authentication",AuthenticationService)}(),function(){function UsersService($resource){return $resource("api/users",{},{update:{method:"PUT"}})}function ProfilesService($resource){return $resource("api/profiles/:userId",{userId:"@_userId"},{})}UsersService.$inject=["$resource"],ProfilesService.$inject=["$resource"],angular.module("users").factory("Users",UsersService).factory("Profiles",ProfilesService)}();